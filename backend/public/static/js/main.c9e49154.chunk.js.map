{"version":3,"sources":["board/actions/boardActions.js","board/actions/columnActions.js","board/actions/userBoardsActions.js","globalActions.js","shared/context/timeoutContext.js","shared/context/authContext.js","board/task/TaskMobile.js","board/subcomponents/MarkdownContainer.js","board/subcomponents/editableTitle.js","board/task/TaskDesktop.js","board/actions/taskActions.js","board/task/TaskContainer.js","board/task/NewTask.js","board/column/Column.js","board/column/ColumnContainer.js","board/todoitem/TodoItem.js","board/todoitem/TodoItemContainer.js","board/actions/todoItemActions.js","board/todoitem/NewTodoItem.js","board/taskModal/TodoList.js","board/taskModal/TaskModal.js","board/taskModal/TaskModalContainer.js","shared/components/WarningDialog.js","shared/components/LoadingOverlay.js","board/board/Board.js","board/board/BoardContainer.js","shared/hooks/form-hook.js","shared/utils/validators.js","shared/components/Input.js","user/pages/Auth.js","shared/hooks/http-hook.js","board/userBoard/BoardCardMobile.js","board/userBoard/BoardCardDesktop.js","board/userBoard/UserBoards.js","board/userBoard/UserBoardsContainer.js","calendar/reducers/monthsData.js","calendar/events/EventMobile.js","calendar/events/EventDesktop.js","calendar/events/EventContainer.js","calendar/date/DateSquare.js","calendar/date/DateSquareContainer.js","calendar/calendar/FilterBoardSelector.js","calendar/calendar/FilterBoardSelectorContainer.js","calendar/calendar/Header.js","calendar/calendar/Calendar.js","shared/hooks/auth-hook.js","calendar/calendar/CalendarContainer.js","calendar/actions/calendarActions.js","calendar/actions/dateActions.js","App.js","serviceWorker.js","calendar/reducers/calendarReducer.js","board/reducers/boardReducer.js","board/reducers/columnReducer.js","board/reducers/taskReducer.js","board/reducers/todoItemReducer.js","board/reducers/userBoardsReducer.js","calendar/reducers/dateReducer.js","events/reducers/eventReducer.js","globalReducer.js","allReducers.js","store.js","index.js"],"names":["axios","require","addColumn","columnId","insertAfter","type","payload","saveData","boardId","token","dispatch","getState","a","boardStructure","board","columns","tasks","todoItems","headers","Authorization","patch","process","addTask","taskId","content","delTask","getUserBoardsData","userId","get","then","response","idToBoard","R","boardData","id","data","boards","Object","keys","forEach","setSelectedTask","TimeoutContext","createContext","resetTimeout","AuthContext","login","logout","TaskCard","styled","Card","isFilterMatched","isDragDisabled","ProgressBar","LinearProgress","Title","h1","React","memo","changeTitle","title","description","index","todo","date","completedPercentage","filterStr","useState","filterMatch","setFilterMatch","useEffect","toLowerCase","includes","getDaysLeft","useCallback","today","Date","differenceMS","daysRemaining","Math","floor","key","draggableId","provided","snapshot","style","draggableProps","dragHandleProps","isDragging","ref","innerRef","elevation","onClick","length","variant","color","value","className","icon","faComment","faClock","MarkdownContainer","div","Wrapper","defaultTitleStyle","outline","background","marginTop","marginBottom","fontFamily","fontWeight","fontSize","padding","width","borderRadius","border","converter","showdown","Converter","extensions","showdownHighlight","ghCodeBlocks","setFlavor","normalStyle","allowEmpty","allowEnter","rows","showButtons","showMarkdown","setValue","isEditmode","setIsEditMode","textArea","useRef","toggleEditMode","changeValue","newValue","handleChange","dangerouslySetInnerHTML","__html","makeHtml","ClickAwayListener","onClickAway","tag","autoFocus","onFocus","e","target","select","onInput","event","onKeyDown","keyCode","preventDefault","start","selectionStart","end","selectionEnd","substring","setTimeout","Button","titleStyle","titleEditStyle","hovered","setHovered","onMouseEnter","onMouseLeave","val","IconButton","size","faEllipsisH","newTitle","Task","isMobile","TaskMobile","TaskDesktop","mapDispatchToProps","connect","state","props","task","completedCount","gb","TextArea","TextareaAutosize","isButton","setIsButton","toggleIsButton","uuidv4","placeholder","onChange","titleStyleNormal","ColumnStyled","Paper","TaskList","Icons","HeaderStyled","Header","changeColumnTitle","Column","forwardRef","skipRender","flagColumnHandler","delColumn","taskOrder","isLargeScreen","boardSelectedColumn","setOpenDialog","setWillBeDeleted","faCircle","droppableId","droppableProps","isDraggingOver","map","TaskContainer","selectedColumn","ItemStyled","ListItem","isHovered","isChecked","normalTitleStyle","editTitleStyle","normalTitleStyleGrayed","textDecoration","todoItemId","isCompleted","toggleIsCompleted","incrementCompleted","decrementCompleted","delTodoItem","setIsHovered","changeTodoItemTitle","Checkbox","checked","edge","tabIndex","stopPropagation","TodoItem","addTodoItem","ListWrapper","progressBar","List","TaskModalStyled","Modal","normalDescriptionStyle","whiteSpace","editDescriptionStyle","margin","changeDescription","moveTodosInTask","addDate","delDate","delAllTodoItem","isLoading","open","setOpen","useContext","history","useHistory","Boolean","saveHandler","push","moment","format","BackdropComponent","Backdrop","onClose","Fade","in","faTimes","faAlignJustify","newVal","faCalendar","toISOString","faCheckSquare","faTrash","onDragEnd","destination","source","newDescription","index1","index2","selectedTask","TaskModal","onContinue","msg","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Background","LoadingOverlay","CircularProgress","thickness","Columns","BoardStyled","ButtonStyled","BackButton","TitleWrapper","ColumnWrapper","SearchBar","InputBase","titleInputStyle","Board","columnOrder","setSelectedColumn","swapColumns","moveTasksInColumn","moveTaskBetweenColumn","resetBoardData","getData","setFilterStr","openDialog","willBeDeleted","searchVal","setSearchVal","saveDataHandler","useMediaQuery","minWidth","ignore","WarningDialog","component","Link","to","inputProps","typeName","ColumnContainer","col_1","col_2","columnId1","columnId2","userBoards","formReducer","action","formIsValid","inputId","inputs","isValid","validate","validators","validator","trim","test","inputReducer","isTouched","InputStyled","TextField","Input","initialValue","initialValidity","helperText","label","useReducer","inputState","error","onBlur","FormBox","Logo","Form","form","ButtonsWrapper","ErrorMsg","h3","Auth","isLoginMode","setIsLoginMode","initialInputs","initialFormValidity","formState","inputData","formValidity","useForm","account_name","password","inputHandler","setFormData","auth","setIsLoading","setError","activeHttpRequests","sendRequest","url","method","body","httpAbortCtrl","AbortController","current","fetch","signal","json","responseData","filter","reqCtrl","ok","Error","message","abortCtrl","abort","clearError","useHttpClient","authSubmitHandler","JSON","stringify","onSubmit","disabled","disableElevation","prevMode","BoardCardFront","BoardCardBack","selected","setSelected","BoardList","LogoutButton","NewBoard","UserBoards","boardsList","postUserBoard","delUserBoard","useParams","BoardCardMobile","BoardCardDesktop","post","creator","delete","monthsData","monthName","daysCount","PopperWrapper","Dot","colour","Event","anchorEl","setAnchorEl","currentTarget","Popper","onTouchStart","disableRestoreFocus","handlePopoverClose","placement","EventMobile","EventDesktop","events","isToday","getIsToday","todayDate","getFullYear","getMonth","getDate","eventIds","eventId","dates","showBoard","DateSquare","FilterBoardSelector","boardIds","idToTitle","setShowBoard","text","setText","FormControl","InputLabel","Select","native","name","acc","concat","years","Array","i","months","month","year","indexOf","yearName","changeMonth","anchorMonth","setAnchorMonth","anchorYear","setAnchorYear","handleMonthClose","handleYearClose","Menu","keepMounted","MenuItem","logoutTimer","weekdays","Body","WeekContainer","DayLabel","Calendar","moveEventBetweenDates","addEvent","delEvent","getEvents","yearMonth","marginRight","day","week","newDate","dateIds","dateIdToNewDate","dateId","dateIndex","weekIndex","prevDateIndex","prevWeekIndex","newDateNumber","getDay","getNewDate","values","dateToEventIds","dateIdToEventIds","dateISOString","dateId1","dateId2","calendar","App","routes","setUserId","undefined","tokenExpirationDate","setTokenExpirationDate","setToken","uid","expirationDate","getTime","localStorage","setItem","expiration","removeItem","newTokenExpirationDate","clearTimeout","remainingTime","storedData","parse","getItem","useAuth","exact","path","render","match","params","StylesProvider","injectFirst","Provider","window","location","hostname","initialBoardData","boardReducer","newColumnOrder","splice","newState","col_1_index","col_2_index","save","initialColumnsData","columnReducer","newTaskOrder","newTaskOrder1","newTaskOrder2","taskReducer","newTodo","initialTodoItemData","todoItemReducer","userBoardsReducer","initialData","calendarReducer","dateReducer","newEventIds1","newEventIds2","eventReducer","initialState","globalReducer","combineReducers","middleware","thunk","promise","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c9e49154.chunk.js","sourcesContent":["const axios = require('axios');\n\nexport const setBoardData = data => ({\n  type: 'SET_BOARD_DATA',\n  payload: data,\n});\n\nexport const resetBoardData = () => ({\n  type: 'SET_BOARD_DATA',\n  payload: {\n    selectedColumn: null,\n    title: '',\n    columnOrder: [],\n  },\n});\n\nexport const changeTitle = title => ({\n  type: 'CHANGE_TITLE',\n  payload: title,\n});\n\nexport const addColumn = (columnId, insertAfter) => ({\n  type: 'ADD_COLUMN',\n  payload: { columnId, insertAfter },\n});\n\nexport const delColumn = columnId => ({\n  type: 'DEL_COLUMN',\n  payload: columnId,\n});\n\nexport const swapColumns = (col_1, col_2) => ({\n  type: 'SWAP_COLUMNS',\n  payload: { col_1, col_2 },\n});\n\nexport const setSelectedColumn = columnId => ({\n  type: 'SET_SELECTED_COLUMN',\n  payload: columnId,\n});\n\nexport const getData = boardId => (dispatch, getState) => {\n  dispatch(setBoardData(getState().userBoards[boardId]));\n};\n\nexport const saveData = (boardId, token) => async (dispatch, getState) => {\n  dispatch({\n    type: 'SET_LOADING',\n    payload: true,\n  });\n  const boardStructure = {\n    ...getState().board,\n    columns: {\n      ...getState().columns,\n    },\n    tasks: {\n      ...getState().tasks,\n    },\n    todoItems: {\n      ...getState().todoItems,\n    },\n  };\n\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer: ${token}`,\n  };\n\n  await axios.patch(\n    `${process.env.REACT_APP_BACKEND_URL}/boards/${boardId}`,\n    boardStructure,\n    { headers },\n  );\n};\n","export const changeTitle = (columnId, title) => ({\n  type: 'CHANGE_COLUMN_TITLE',\n  payload: { columnId, title },\n});\n\nexport const moveTasksInColumn = (columnId, index1, index2) => ({\n  type: 'MOVE_TASKS_IN_COLUMN',\n  payload: { columnId, index1, index2 },\n});\n\nexport const moveTaskBetweenColumn = (columnId1, columnId2, index1, index2, taskId) => ({\n  type: 'MOVE_TASK_BETWEEN_COLUMN',\n  payload: {\n    columnId1, columnId2, index1, index2, taskId,\n  },\n});\n\nexport const addTask = (columnId, taskId, content = null) => ({\n  type: 'ADD_TASK',\n  payload: { columnId, taskId, content },\n});\n\nexport const delTask = (columnId, taskId) => ({\n  type: 'DEL_TASK',\n  payload: { columnId, taskId },\n});\n","import * as R from 'ramda';\n\nconst axios = require('axios');\n\nexport const setUserBoardsData = data => ({\n  type: 'SET_USER_BOARDS_DATA',\n  payload: data,\n});\n\nexport const addBoard = boardData => ({\n  type: 'ADD_BOARD',\n  payload: boardData,\n});\n\nexport const delBoard = id => ({\n  type: 'DEL_BOARD',\n  payload: { id },\n});\n\nexport const getUserBoardsData = (userId, token) => async (dispatch) => {\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer: ${token}`,\n  };\n\n  await axios.get(\n    `${process.env.REACT_APP_BACKEND_URL}/boards/user/${userId}`,\n    { headers },\n  ).then((response) => {\n    const idToBoard = R.groupBy(\n      boardData => boardData.id,\n      response.data.boards,\n    );\n    Object.keys(idToBoard).forEach((id) => {\n      idToBoard[id] = idToBoard[id][0];\n    });\n    dispatch(setUserBoardsData(idToBoard));\n    dispatch({\n      type: 'SET_LOADING',\n      payload: false,\n    });\n  });\n};\n\nexport const postUserBoard = (userId, token) => (dispatch) => {\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer: ${token}`,\n  };\n\n  axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/boards/`,\n    JSON.stringify({\n      creator: userId,\n      title: 'New Board',\n    }),\n    { headers },\n  ).then((response) => {\n    dispatch(addBoard(response.data.board));\n  });\n};\n\nexport const delUserBoard = (boardId, token) => (dispatch) => {\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer: ${token}`,\n  };\n\n  axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/boards/${boardId}`,\n    { headers },\n  ).then(() => {\n    dispatch(delBoard(boardId));\n  });\n};\n","export const setSelectedTask = taskId => ({\n  type: 'SET_SELECTED_TASK',\n  payload: taskId,\n});\n\nexport const setFilterStr = value => ({\n  type: 'SET_FILTER_STR',\n  payload: value,\n});\n","import { createContext } from 'react';\n\nconst TimeoutContext = createContext({\n  resetTimeout: () => {},\n});\n\nexport default TimeoutContext;\n","import { createContext } from 'react';\n\nconst AuthContext = createContext({\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n\nexport default AuthContext\n","import React, { useCallback, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd';\nimport { Card, LinearProgress } from '@material-ui/core';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock, faComment } from '@fortawesome/free-solid-svg-icons';\n\nconst TaskCard = styled(Card)`\n  border: ${({ isFilterMatched }) => (isFilterMatched ? '3px solid black' : 'none')};\n  padding: 10px;\n  position: relative;\n  margin-bottom: 8px;\n  background: ${({ isDragDisabled }) => {\n    if (isDragDisabled) return 'lightgrey';\n    return 'white';\n  }};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  min-height: 40px;\n  .icon {\n    font-size: 15px;\n    padding-left: 4px;\n    padding-right: 4px;\n    color: red;\n  }\n\n  .clock {\n    top: 50%;\n    padding: 0;\n  }\n\n  .date-icons {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n\n  h2 {\n    font-size: 14px;\n    color: red;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nconst ProgressBar = styled(LinearProgress)`\n  width: 100%;\n  height: 10px;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nconst Title = styled.h1`\n  width: 100%;\n  outline: none;\n  border: none;\n  background: transparent;\n  font-size: 15px;\n  font-family: inherit;\n  font-weight: bold;\n`;\n\nconst Task = ({\n  changeTitle, title, description, taskId, index, todo, date, completedPercentage, setSelectedTask, filterStr,\n}) => {\n  const [filterMatch, setFilterMatch] = useState(false);\n\n  useEffect(() => {\n    if (!filterStr) {\n      setFilterMatch(false);\n      return;\n    }\n    setFilterMatch(title.toLowerCase().includes(filterStr.toLowerCase()));\n  }, [filterStr]);\n\n  const getDaysLeft = useCallback(() => {\n    const today = new Date();\n    const differenceMS = new Date(date) - today;\n    const daysRemaining = Math.floor(differenceMS / 86400000) + 1;\n    if (daysRemaining === 0) return 'today';\n    return `${daysRemaining}d`;\n  }, [date]);\n\n  return (\n    <Draggable\n      key={taskId}\n      draggableId={taskId}\n      index={index}\n    >\n      {(provided, snapshot) => (\n        <NaturalDragAnimation\n          style={provided.draggableProps.style}\n          snapshot={snapshot}\n        >\n          {style => (\n            <div\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              isDragging={snapshot.isDragging}\n              ref={provided.innerRef}\n              style={style}\n            >\n              <TaskCard\n                elevation={snapshot.isDragging ? 16 : 2}\n                onClick={() => setSelectedTask(taskId)}\n                isFilterMatched={filterMatch}\n              >\n                {todo.length !== 0 && (\n                  <ProgressBar\n                    variant=\"determinate\"\n                    color=\"secondary\"\n                    value={completedPercentage}\n                  />\n                )}\n                <Title>{title}</Title>\n                {description && <FontAwesomeIcon className=\"icon\" icon={faComment} />}\n                {date\n                    && (\n                      <div className=\"date-icons\">\n                        <h2>\n                          {getDaysLeft()}\n                        </h2>\n                        <FontAwesomeIcon className=\"icon clock\" icon={faClock} />\n                      </div>\n                    )}\n              </TaskCard>\n\n            </div>\n          )}\n        </NaturalDragAnimation>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo(Task);\n","import styled from 'styled-components';\n\nconst MarkdownContainer = styled.div`\n  margin: 6px 8px;\n  body {\n    font-family: Helvetica, arial, sans-serif;\n    font-size: 14px;\n    line-height: 1.6;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    background-color: white;\n    padding: 30px; }\n\n  body > *:first-child {\n    margin-top: 0 !important; }\n  body > *:last-child {\n    margin-bottom: 0 !important; }\n\n  a {\n    color: #4183C4; }\n  a.absent {\n    color: #cc0000; }\n  a.anchor {\n    display: block;\n    padding-left: 30px;\n    margin-left: -30px;\n    cursor: pointer;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0; }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: 20px 0 10px;\n    padding: 0;\n    font-weight: bold;\n    -webkit-font-smoothing: antialiased;\n    cursor: text;\n    position: relative; }\n\n  h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor {\n    /* background: url(\"../../images/modules/styleguide/para.png\") no-repeat 10px center; */\n    text-decoration: none; }\n\n  h1 tt, h1 code {\n    font-size: inherit; }\n\n  h2 tt, h2 code {\n    font-size: inherit; }\n\n  h3 tt, h3 code {\n    font-size: inherit; }\n\n  h4 tt, h4 code {\n    font-size: inherit; }\n\n  h5 tt, h5 code {\n    font-size: inherit; }\n\n  h6 tt, h6 code {\n    font-size: inherit; }\n\n  h1 {\n    font-size: 28px;\n    color: black; }\n\n  h2 {\n    font-size: 24px;\n    border-bottom: 1px solid #cccccc;\n    color: black; }\n\n  h3 {\n    font-size: 18px; }\n\n  h4 {\n    font-size: 16px; }\n\n  h5 {\n    font-size: 14px; }\n\n  h6 {\n    color: #777777;\n    font-size: 14px; }\n\n  p, blockquote, ul, ol, dl, li, table, pre {\n    margin: 15px 0; }\n\n  hr {\n    /* background: transparent url(\"../../images/modules/pulls/dirty-shade.png\") repeat-x 0 0; */\n    border: 0 none;\n    color: #cccccc;\n    height: 4px;\n    padding: 0; }\n\n  body > h2:first-child {\n    margin-top: 0;\n    padding-top: 0; }\n  body > h1:first-child {\n    margin-top: 0;\n    padding-top: 0; }\n    body > h1:first-child + h2 {\n      margin-top: 0;\n      padding-top: 0; }\n  body > h3:first-child, body > h4:first-child, body > h5:first-child, body > h6:first-child {\n    margin-top: 0;\n    padding-top: 0; }\n\n  a:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6 {\n    margin-top: 0;\n    padding-top: 0; }\n\n  h1 p, h2 p, h3 p, h4 p, h5 p, h6 p {\n    margin-top: 0; }\n\n  li p.first {\n    display: inline-block; }\n\n  ul, ol {\n    padding-left: 30px; }\n\n  ul :first-child, ol :first-child {\n    margin-top: 0; }\n\n  ul :last-child, ol :last-child {\n    margin-bottom: 0; }\n\n  dl {\n    padding: 0; }\n    dl dt {\n      font-size: 14px;\n      font-weight: bold;\n      font-style: italic;\n      padding: 0;\n      margin: 15px 0 5px; }\n      dl dt:first-child {\n        padding: 0; }\n      dl dt > :first-child {\n        margin-top: 0; }\n      dl dt > :last-child {\n        margin-bottom: 0; }\n    dl dd {\n      margin: 0 0 15px;\n      padding: 0 15px; }\n      dl dd > :first-child {\n        margin-top: 0; }\n      dl dd > :last-child {\n        margin-bottom: 0; }\n\n  blockquote {\n    border-left: 4px solid #dddddd;\n    padding: 0 15px;\n    color: #777777; }\n    blockquote > :first-child {\n      margin-top: 0; }\n    blockquote > :last-child {\n      margin-bottom: 0; }\n\n  table {\n    padding: 0; }\n    table tr {\n      border-top: 1px solid #cccccc;\n      background-color: white;\n      margin: 0;\n      padding: 0; }\n      table tr:nth-child(2n) {\n        background-color: #f8f8f8; }\n      table tr th {\n        font-weight: bold;\n        border: 1px solid #cccccc;\n        text-align: left;\n        margin: 0;\n        padding: 6px 13px; }\n      table tr td {\n        border: 1px solid #cccccc;\n        text-align: left;\n        margin: 0;\n        padding: 6px 13px; }\n      table tr th :first-child, table tr td :first-child {\n        margin-top: 0; }\n      table tr th :last-child, table tr td :last-child {\n        margin-bottom: 0; }\n\n  img {\n    max-width: 100%; }\n\n  span.frame {\n    display: block;\n    overflow: hidden; }\n    span.frame > span {\n      border: 1px solid #dddddd;\n      display: block;\n      float: left;\n      overflow: hidden;\n      margin: 13px 0 0;\n      padding: 7px;\n      width: auto; }\n    span.frame span img {\n      display: block;\n      float: left; }\n    span.frame span span {\n      clear: both;\n      color: #333333;\n      display: block;\n      padding: 5px 0 0; }\n  span.align-center {\n    display: block;\n    overflow: hidden;\n    clear: both; }\n    span.align-center > span {\n      display: block;\n      overflow: hidden;\n      margin: 13px auto 0;\n      text-align: center; }\n    span.align-center span img {\n      margin: 0 auto;\n      text-align: center; }\n  span.align-right {\n    display: block;\n    overflow: hidden;\n    clear: both; }\n    span.align-right > span {\n      display: block;\n      overflow: hidden;\n      margin: 13px 0 0;\n      text-align: right; }\n    span.align-right span img {\n      margin: 0;\n      text-align: right; }\n  span.float-left {\n    display: block;\n    margin-right: 13px;\n    overflow: hidden;\n    float: left; }\n    span.float-left span {\n      margin: 13px 0 0; }\n  span.float-right {\n    display: block;\n    margin-left: 13px;\n    overflow: hidden;\n    float: right; }\n    span.float-right > span {\n      display: block;\n      overflow: hidden;\n      margin: 13px auto 0;\n      text-align: right; }\n\n  code, tt {\n    margin: 0 2px;\n    padding: 0 5px;\n    white-space: nowrap;\n    border: 1px solid #eaeaea;\n    background-color: #f8f8f8;\n    border-radius: 3px; }\n\n  pre code {\n    margin: 0;\n    padding: 0;\n    white-space: pre;\n    border: none;\n    background: transparent; }\n\n  .highlight pre {\n    background-color: #f8f8f8;\n    border: 1px solid #cccccc;\n    font-size: 13px;\n    line-height: 19px;\n    overflow: auto;\n    padding: 6px 10px;\n    border-radius: 3px; }\n\n  pre {\n    background-color: #f8f8f8;\n    border: 1px solid #cccccc;\n    font-size: 13px;\n    line-height: 19px;\n    overflow: auto;\n    padding: 6px 10px;\n    border-radius: 3px; }\n    pre code, pre tt {\n      background-color: transparent;\n      border: none; }\n`;\n\nexport default MarkdownContainer;\n","import React, { useState, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport { ClickAwayListener, Button } from '@material-ui/core';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport showdown from 'showdown';\nimport showdownHighlight from 'showdown-highlight';\nimport 'highlight.js/styles/github.css';\nimport MarkdownContainer from './MarkdownContainer';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: flex-start;\n`;\n\nconst defaultTitleStyle = {\n  outline: 'none',\n  background: 'white',\n  marginTop: '13px',\n  marginBottom: '15px',\n  fontFamily: 'inherit',\n  fontWeight: 'bold',\n  fontSize: '30px',\n  padding: '15px',\n  width: '90%',\n  borderRadius: '15px',\n  border: '0',\n};\n\nconst converter = new showdown.Converter({\n  extensions: [showdownHighlight],\n  ghCodeBlocks: true,\n});\nconverter.setFlavor('github');\n\nconst EditableTitle = ({\n  title,\n  changeTitle,\n  style,\n  normalStyle,\n  allowEmpty,\n  allowEnter,\n  rows,\n  showButtons,\n  showMarkdown,\n}) => {\n  const [value, setValue] = useState(title);\n  const [isEditmode, setIsEditMode] = useState(false);\n\n  let textArea = useRef();\n  const toggleEditMode = useCallback(() => {\n    setIsEditMode(!isEditmode);\n  }, [isEditmode]);\n\n  const changeValue = newValue => setValue(newValue);\n\n  const handleChange = () => {\n    if (!value && !allowEmpty) {\n      changeValue(title);\n      toggleEditMode();\n    } else {\n      changeTitle(value);\n      toggleEditMode();\n    }\n  };\n\n  if (!isEditmode && showMarkdown) {\n    return (\n      <MarkdownContainer\n        onClick={() => toggleEditMode()}\n        dangerouslySetInnerHTML={{ __html: converter.makeHtml(value) }}\n      />\n    );\n  }\n  if (!isEditmode) {\n    return (\n      <h1\n        onClick={() => toggleEditMode()}\n        style={style && normalStyle}\n      >\n        {title}\n      </h1>\n    );\n  }\n\n  return (\n    <ClickAwayListener\n      onClickAway={handleChange}\n    >\n      <Wrapper>\n        <TextareaAutosize\n          style={style || defaultTitleStyle}\n          ref={(tag) => { textArea = tag; }}\n          autoFocus\n          onFocus={e => e.target.select()}\n          value={value}\n          rows={rows || 3}\n          onInput={event => changeValue(event.target.value)}\n          onKeyDown={(event) => {\n            if (allowEnter && event.key === 'Enter') {\n              handleChange();\n            }\n            if (event.keyCode === 9) { // tab was pressed\n              event.preventDefault();\n              const start = event.target.selectionStart;\n              const end = event.target.selectionEnd;\n              const newValue = `${value.substring(0, start)}  ${value.substring(end)}`;\n              setValue(newValue);\n\n              setTimeout(() => {\n                textArea.selectionStart = start + 2;\n                textArea.selectionEnd = start + 2;\n              });\n            }\n          }}\n          type=\"text\"\n        />\n        {showButtons && (\n          <div>\n            <Button onClick={handleChange}>Save</Button>\n            <Button onClick={() => {\n              setValue('');\n              changeTitle('');\n              toggleEditMode();\n            }}\n            >\n              Delete\n            </Button>\n          </div>\n        )}\n      </Wrapper>\n    </ClickAwayListener>\n  );\n};\n\nexport default React.memo(EditableTitle);\n","import React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd';\nimport { IconButton, Card, LinearProgress } from '@material-ui/core';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisH, faClock, faComment } from '@fortawesome/free-solid-svg-icons';\nimport EditableTitle from '../subcomponents/editableTitle';\n\nconst TaskCard = styled(Card)`\n  border: ${({ isFilterMatched }) => (isFilterMatched ? '3px solid black' : 'none')};\n  padding: 10px;\n  position: relative;\n  margin-bottom: 8px;\n  background: ${({ isDragDisabled }) => {\n    if (isDragDisabled) return 'lightgrey';\n    return 'white';\n  }};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  min-height: 40px;\n  .icon {\n    font-size: 15px;\n    padding-left: 4px;\n    padding-right: 4px;\n    color: red;\n  }\n\n  .clock {\n    top: 50%;\n    padding: 0;\n  }\n\n  .date-icons {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n\n  h2 {\n    font-size: 14px;\n    color: red;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nconst ProgressBar = styled(LinearProgress)`\n  width: 100%;\n  height: 10px;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nconst titleStyle = {\n  width: '100%',\n  outline: 'none',\n  border: 'none',\n  background: 'transparent',\n  fontSize: '15px',\n  fontFamily: 'inherit',\n  fontWeight: 'bold',\n};\n\nconst titleEditStyle = {\n  width: '100%',\n  outline: 'none',\n  border: 'none',\n  background: 'transparent',\n  fontSize: '15px',\n  fontFamily: 'inherit',\n  fontWeight: 'bold',\n};\n\nconst Task = ({\n  changeTitle, title, description, taskId, index, todo, date, completedPercentage, setSelectedTask, filterStr,\n}) => {\n  const [hovered, setHovered] = useState(false);\n  const [filterMatch, setFilterMatch] = useState(false);\n\n  useEffect(() => {\n    if (!filterStr) {\n      setFilterMatch(false);\n      return;\n    }\n    setFilterMatch(title.toLowerCase().includes(filterStr.toLowerCase()));\n  }, [filterStr]);\n\n  const getDaysLeft = useCallback(() => {\n    const today = new Date();\n    const differenceMS = new Date(date) - today;\n    const daysRemaining = Math.floor(differenceMS / 86400000) + 1;\n    if (daysRemaining === 0) return 'today';\n    return `${daysRemaining}d`;\n  }, [date]);\n\n  return (\n    <Draggable\n      key={taskId}\n      draggableId={taskId}\n      index={index}\n    >\n      {(provided, snapshot) => (\n        <NaturalDragAnimation\n          style={provided.draggableProps.style}\n          snapshot={snapshot}\n        >\n          {style => (\n            <div\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              isDragging={snapshot.isDragging}\n              ref={provided.innerRef}\n              style={style}\n            >\n              <TaskCard\n                elevation={snapshot.isDragging ? 16 : 2}\n                onMouseEnter={() => setHovered(true)}\n                onMouseLeave={() => setHovered(false)}\n                isFilterMatched={filterMatch}\n              >\n                {todo.length !== 0 && (\n                  <ProgressBar\n                    variant=\"determinate\"\n                    color=\"secondary\"\n                    value={completedPercentage}\n                  />\n                )}\n                <EditableTitle\n                  title={title}\n                  changeTitle={val => changeTitle(taskId, val)}\n                  style={titleEditStyle}\n                  normalStyle={titleStyle}\n                  allowEnter\n                />\n                {description && <FontAwesomeIcon className=\"icon\" icon={faComment} />}\n                {date\n                  && (\n                  <div className=\"date-icons\">\n                    <h2>\n                      {getDaysLeft()}\n                    </h2>\n                    <FontAwesomeIcon className=\"icon clock\" icon={faClock} />\n                  </div>\n                  )}\n                {hovered && (\n                  <IconButton onClick={() => setSelectedTask(taskId)}>\n                    <FontAwesomeIcon size=\"sm\" icon={faEllipsisH} />\n                  </IconButton>\n                )}\n\n              </TaskCard>\n            </div>\n          )}\n        </NaturalDragAnimation>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo(Task);\n","export const changeTitle = (taskId, newTitle) => ({\n  type: 'CHANGE_TASK_TITLE',\n  payload: { taskId, newTitle },\n});\n\nexport const changeDescription = (taskId, newDescription) => ({\n  type: 'CHANGE_TASK_DESCRIPTION',\n  payload: { taskId, newDescription },\n});\n\nexport const incrementCompleted = taskId => ({\n  type: 'INCREMENT_COMPLETED_COUNT',\n  payload: { taskId },\n});\n\nexport const decrementCompleted = taskId => ({\n  type: 'DECREMENT_COMPLETED_COUNT',\n  payload: { taskId },\n});\n\nexport const addDate = (taskId, date) => ({\n  type: 'ADD_TASK_DATE',\n  payload: { taskId, date },\n});\n\nexport const delDate = taskId => ({\n  type: 'DEL_TASK_DATE',\n  payload: { taskId },\n});\n\nexport const addTodoItem = (taskId, todoItemId, title = null) => ({\n  type: 'ADD_TODO_ITEM',\n  payload: { taskId, todoItemId, title },\n});\n\nexport const delTodoItem = (taskId, todoItemId) => ({\n  type: 'DEL_TODO_ITEM',\n  payload: { taskId, todoItemId },\n});\n\nexport const delAllTodoItem = taskId => ({\n  type: 'DEL_ALL_TODO_ITEM',\n  payload: { taskId },\n});\n\nexport const moveTodosInTask = (taskId, index1, index2) => ({\n  type: 'MOVE_TODOS_IN_TASK',\n  payload: { taskId, index1, index2 },\n});\n","import { connect } from 'react-redux';\nimport { isMobile } from 'react-device-detect';\nimport TaskMobile from './TaskMobile';\nimport TaskDesktop from './TaskDesktop';\nimport { changeTitle } from '../actions/taskActions';\nimport { setSelectedTask } from '../../globalActions';\n\nconst Task = isMobile ? TaskMobile : TaskDesktop;\n\nconst mapStateToProps = (state, props) => {\n  const task = state.tasks[props.taskId];\n  return {\n    title: task.title,\n    description: task.description,\n    date: task.date,\n    completedCount: task.completedCount,\n    todo: task.todo,\n    completedPercentage: (task.completedCount / task.todo.length) * 100,\n    filterStr: state.gb.filterStr,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeTitle,\n  setSelectedTask,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task);\n","import React, { useState, useCallback } from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport { Card, Button, ClickAwayListener } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TextArea = styled(TextareaAutosize)`\n  min-height: 45px;\n  width: 100%;\n  outline: none;\n  border: none;\n  background: transparent;\n  font-size: inherit;\n  font-family: inherit;\n  padding: 10px;\n`;\n\nconst TaskCard = styled(Card)`\n  .input {\n    width: 100%;\n    height: 35px;\n    outline: none;\n    border: none;\n  }\n`;\n\nconst style = {\n  width: '100%',\n  outline: 'none',\n  border: 'none',\n  background: 'transparent',\n  fontSize: '15px',\n  fontFamily: 'inherit',\n  fontWeight: 'bold',\n};\n\nconst NewTask = ({ columnId, addTask }) => {\n  const [value, setValue] = useState('');\n  const [isButton, setIsButton] = useState(true);\n\n  const toggleIsButton = useCallback(() => {\n    setIsButton(!isButton);\n  }, [isButton]);\n\n  if (isButton) {\n    return (\n      <Button\n        className=\"button\"\n        onClick={toggleIsButton}\n      >\n        + Add Task\n      </Button>\n    );\n  }\n\n  return (\n    <ClickAwayListener onClickAway={() => {\n      if (value) {\n        addTask(columnId, uuidv4(), value);\n        setValue('');\n      }\n      toggleIsButton();\n    }}\n    >\n      <TaskCard>\n        <TextArea\n          autoFocus\n          placeholder=\"Enter text here...\"\n          style={style}\n          className=\"input\"\n          type=\"text\"\n          elevation={3}\n          value={value}\n          onChange={e => setValue(e.target.value)}\n          onKeyDown={(event) => {\n            if (event.key === 'Enter') {\n              if (value) {\n                addTask(columnId, uuidv4(), value);\n                setValue('');\n              }\n              toggleIsButton();\n            }\n          }}\n        />\n      </TaskCard>\n    </ClickAwayListener>\n  );\n};\n\nexport default React.memo(NewTask);\n","import React, { forwardRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Paper, IconButton, ClickAwayListener } from '@material-ui/core';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport TaskContainer from '../task/TaskContainer';\nimport NewTask from '../task/NewTask';\nimport EditableTitle from '../subcomponents/editableTitle';\n\nconst titleStyleNormal = {\n  outline: 'none',\n  marginTop: '13px',\n  marginBottom: '15px',\n  fontFamily: 'inherit',\n  fontWeight: 'bold',\n  fontSize: '22px',\n  padding: '15px',\n};\n\nconst titleStyle = {\n  outline: 'none',\n  background: 'white',\n  marginTop: '13px',\n  marginBottom: '15px',\n  fontFamily: 'inherit',\n  fontWeight: 'bold',\n  fontSize: '22px',\n  padding: '15px',\n  width: '90%',\n  borderRadius: '15px',\n  border: '0',\n};\n\nconst ColumnStyled = styled(Paper)`\n  position: relative;\n  background: #EBECF0;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  padding: 6px;\n  padding-bottom: 15px;\n  margin: 10px;\n  flex-grow: 1;\n`;\n\nconst TaskList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Icons = styled.div`\n  position: absolute;\n  left: 15px;\n  top: 15px;\n\n  .MuiIconButton-root {\n    font-size: 15px;\n  }\n\n  .del {\n    color: red;\n  }\n\n  .ins {\n    color: green;\n  }\n\n  .swp {\n    color: yellow;\n  }\n`;\n\nconst HeaderStyled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 7px;\n`;\n\nconst Header = React.memo(({ title, changeColumnTitle }) => (\n  <HeaderStyled>\n    <EditableTitle\n      rows={1}\n      title={title}\n      changeTitle={changeColumnTitle}\n      style={titleStyle}\n      normalStyle={titleStyleNormal}\n      allowEnter\n    />\n  </HeaderStyled>\n));\n\nconst Column = forwardRef(({\n  skipRender, title, changeTitle, columnId, addTask, addColumn, delColumn, flagColumnHandler, taskOrder, isLargeScreen, boardSelectedColumn, boardId, setOpenDialog, setWillBeDeleted,\n}, ref) => {\n  const changeColumnTitle = useCallback((newTitle) => {\n    changeTitle(columnId, newTitle);\n  }, [columnId]);\n\n  if (skipRender) {\n    return null;\n  }\n\n  return (\n    <ColumnStyled\n      isLargeScreen={isLargeScreen}\n      elevation={boardSelectedColumn === columnId ? 24 : 0}\n    >\n      <Icons>\n        <IconButton size=\"small\" className=\"del\">\n          <FontAwesomeIcon\n            icon={faCircle}\n            onClick={() => {\n              setWillBeDeleted(columnId);\n              setOpenDialog(true);\n            }}\n          />\n        </IconButton>\n        <ClickAwayListener\n          onClickAway={() => {\n            flagColumnHandler(columnId, true);\n          }}\n        >\n          <IconButton size=\"small\" className=\"swp\">\n            <FontAwesomeIcon\n              icon={faCircle}\n              onClick={() => flagColumnHandler(columnId, false)}\n            />\n          </IconButton>\n        </ClickAwayListener>\n        <IconButton size=\"small\" className=\"ins\">\n          <FontAwesomeIcon\n            icon={faCircle}\n            onClick={() => addColumn(columnId, uuidv4())}\n          />\n        </IconButton>\n      </Icons>\n      <Header title={title} changeColumnTitle={changeColumnTitle} />\n      <Droppable droppableId={columnId}>\n        {(provided, snapshot) => (\n          <TaskList\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            isDraggingOver={snapshot.isDraggingOver}\n          >\n            {taskOrder.map((taskId, index) => (\n              <TaskContainer\n                columnId={columnId}\n                taskId={taskId}\n                index={index}\n                boardId={boardId}\n              />\n            ))}\n            { provided.placeholder }\n          </TaskList>\n        )}\n      </Droppable>\n      <NewTask\n        columnId={columnId}\n        addTask={addTask}\n      />\n    </ColumnStyled>\n  );\n});\n\nexport default React.memo(Column);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Column from './Column';\nimport { addTask, changeTitle } from '../actions/columnActions';\nimport { addColumn } from '../actions/boardActions';\n\n\nconst mapStateToProps = (state, props) => {\n  if (!state.columns[props.columnId]) {\n    return { skipRender: true };\n  }\n  return {\n    title: state.columns[props.columnId].title,\n    taskOrder: state.columns[props.columnId].taskOrder,\n    boardSelectedColumn: state.board.selectedColumn,\n  };\n};\n\n\nconst mapDispatchToProps = {\n  addTask,\n  addColumn,\n  changeTitle,\n};\n\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(Column));\n","import React, { useCallback, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport {\n  Checkbox,\n  ClickAwayListener,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  IconButton,\n  Button,\n} from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport EditableTitle from '../subcomponents/editableTitle';\n\nconst ItemStyled = styled(ListItem)`\n  background: ${({ isHovered, isDragging }) => (isHovered || isDragging ? '#EBECF0' : '#fff')};\n  border-radius: 15px;\n  text-decoration: ${({ isChecked }) => isChecked && 'line-through'};\n  color: ${({ isChecked }) => isChecked && 'red'};\n  // height: 50px;\n`;\n\nconst normalTitleStyle = {\n  width: '100%',\n  outline: 'none',\n  border: 'none',\n  fontWeight: 'normal',\n  fontSize: '15px',\n  fontFamily: 'inherit',\n};\n\nconst editTitleStyle = {\n  width: '100%',\n  outline: 'none',\n  border: 'none',\n  fontWeight: 'normal',\n  fontSize: '15px',\n  fontFamily: 'inherit',\n};\n\nconst normalTitleStyleGrayed = {\n  width: '100%',\n  color: 'red',\n  textDecoration: 'line-through',\n  outline: 'none',\n  border: 'none',\n  fontWeight: 'normal',\n  fontSize: '15px',\n  fontFamily: 'inherit',\n};\n\nconst TodoItem = ({\n  key, index, columnId, todoItemId, title, isCompleted, changeTitle, toggleIsCompleted, taskId, incrementCompleted, decrementCompleted, delTodoItem, addTask,\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const changeTodoItemTitle = useCallback((newTitle) => {\n    changeTitle(todoItemId, newTitle);\n  }, [todoItemId]);\n\n  return (\n    <Draggable\n      key={todoItemId}\n      draggableId={todoItemId}\n      index={index}\n    >\n      {(provided, snapshot) => (\n        <ItemStyled\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isHovered={isHovered}\n          isDragging={snapshot.isDragging}\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n        >\n          <Checkbox\n            checked={isCompleted}\n            edge=\"start\"\n            tabIndex={-1}\n            onClick={(e) => {\n              e.stopPropagation();\n              toggleIsCompleted(todoItemId);\n              if (isCompleted) decrementCompleted(taskId);\n              else incrementCompleted(taskId);\n            }}\n          />\n          <EditableTitle\n            title={title}\n            changeTitle={changeTodoItemTitle}\n            style={editTitleStyle}\n            normalStyle={isCompleted ? normalTitleStyleGrayed : normalTitleStyle}\n            rows={1}\n            allowEnter\n          />\n          <Button\n            onClick={() => {\n              delTodoItem(taskId, todoItemId);\n              if (isCompleted) {\n                decrementCompleted(taskId);\n              }\n            }}\n          >\n            Del\n          </Button>\n          <Button\n            onClick={() => {\n              addTask(columnId, uuidv4(), title);\n              delTodoItem(taskId, todoItemId);\n            }}\n          >\n            Change\n          </Button>\n        </ItemStyled>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo(TodoItem);\n","import { connect } from 'react-redux';\nimport TodoItem from './TodoItem';\nimport { changeTitle, toggleIsCompleted } from '../actions/todoItemActions';\nimport {\n  delTodoItem, incrementCompleted, decrementCompleted,\n} from '../actions/taskActions';\nimport { addTask } from '../actions/columnActions';\n\nconst mapStateToProps = (state, props) => {\n  const target = state.todoItems[props.todoItemId];\n  return {\n    title: target && target.title,\n    isCompleted: target && target.isCompleted,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeTitle,\n  toggleIsCompleted,\n  delTodoItem,\n  incrementCompleted,\n  decrementCompleted,\n  addTask,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\n","export const changeTitle = (todoItemId, newTitle) => ({\n  type: 'CHANGE_TODO_ITEM_TITLE',\n  payload: { todoItemId, newTitle },\n});\n\nexport const toggleIsCompleted = todoItemId => ({\n  type: 'TOGGLE_IS_COMPLETED',\n  payload: { todoItemId },\n});\n","import React, { useState, useCallback } from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport { Card, Button, ClickAwayListener } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TextArea = styled(TextareaAutosize)`\n  min-height: 45px;\n  width: 100%;\n  outline: none;\n  border: none;\n  background: transparent;\n  font-size: inherit;\n  font-family: inherit;\n`;\n\nconst TaskCard = styled.div`\n  .input {\n    width: 100%;\n    height: 35px;\n    outline: none;\n    border: 1px solid teal;\n  }\n`;\n\nconst NewTodoItem = ({ taskId, addTodoItem }) => {\n  const [value, setValue] = useState('');\n  const [isButton, setIsButton] = useState(true);\n\n  const toggleIsButton = useCallback(() => {\n    setIsButton(!isButton);\n  }, [isButton]);\n\n  if (isButton) {\n    return (\n      <Button\n        className=\"button\"\n        onClick={toggleIsButton}\n      >\n        + Add Todo Item\n      </Button>\n    );\n  }\n\n  return (\n    <ClickAwayListener onClickAway={() => {\n      if (value) {\n        addTodoItem(taskId, uuidv4(), value);\n        setValue('');\n      }\n      toggleIsButton();\n    }}\n    >\n      <TaskCard>\n        <TextArea\n          autoFocus\n          placeholder=\"Enter text here...\"\n          className=\"input\"\n          type=\"text\"\n          elevation={3}\n          value={value}\n          onChange={e => setValue(e.target.value)}\n          onKeyDown={(event) => {\n            if (event.key === 'Enter') {\n              if (value) {\n                addTodoItem(taskId, uuidv4(), value);\n                setValue('');\n              }\n              toggleIsButton();\n            }\n          }}\n        />\n      </TaskCard>\n    </ClickAwayListener>\n  );\n};\n\nexport default React.memo(NewTodoItem);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport {\n  List,\n  Paper,\n  LinearProgress,\n} from '@material-ui/core';\nimport TodoItem from '../todoitem/TodoItemContainer';\nimport NewTodoItem from '../todoitem/NewTodoItem';\n\nconst Wrapper = styled.div`\n  text-align: center;\n\n  .progress-text {\n    font-size: 14px;\n  }\n`;\n\nconst ListWrapper = styled(Paper)`\n  width: 100%;\n  max-height: 320px;\n  overflow: auto;\n`;\n\nconst TodoList = ({\n  todo, taskId, addTodoItem, completedPercentage, columnId,\n}) => {\n  const progressBar = (\n    <>\n      <p className=\"progress-text\">\n        { Math.floor(completedPercentage) || 0 }\n        % completed\n      </p>\n      <LinearProgress\n        variant=\"determinate\"\n        color=\"secondary\"\n        value={completedPercentage || 0}\n      />\n    </>\n  );\n\n  if (todo.length == 0) return <></>;\n\n  return (\n    <Wrapper>\n      {todo.length !== 0 && progressBar}\n      <Droppable droppableId={taskId}>\n        {provided => (\n          <ListWrapper\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            elevation={0}\n          >\n            <List>\n              {todo.map((todoItemId, index) => (\n                <TodoItem\n                  index={index}\n                  taskId={taskId}\n                  columnId={columnId}\n                  todoItemId={todoItemId}\n                />\n              ))}\n            </List>\n            {provided.placeholder}\n          </ListWrapper>\n        )}\n      </Droppable>\n      <NewTodoItem\n        taskId={taskId}\n        addTodoItem={addTodoItem}\n      />\n    </Wrapper>\n  );\n};\n\nexport default React.memo(TodoList);\n","import React, { useContext, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport DatePicker from 'react-date-picker';\nimport {\n  Button,\n  Paper,\n  Modal,\n  Fade,\n  Backdrop,\n  IconButton,\n} from '@material-ui/core';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash, faCalendar, faAlignJustify, faComment, faCheckSquare, faTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport { v4 as uuidv4 } from 'uuid';\nimport EditableTitle from '../subcomponents/editableTitle';\nimport TodoList from './TodoList';\nimport AuthContext from '../../shared/context/authContext';\n\nconst TaskModalStyled = styled(Modal)`\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n\n  .card {\n    width: 550px;\n    height: 80%;\n    padding: 50px 25px;\n    overflow: scroll;\n    position: relative;\n  }\n\n  .row {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n    width: 100%;\n    position: relative;\n  }\n\n  .description {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n  }\n\n  .icon {\n    color: teal;\n    height: 20px;\n    width: 20px;\n    margin-right: 20px;\n  }\n\n  .iconButton {\n    margin-right: 0;\n  }\n\n  .modalH1 {\n    font-size: 18px;\n    font-family: inherit;\n    font-weight: bold;\n    margin: 6px 8px;\n    margin-right: 15px;\n    color: black;\n  }\n\n  .stickyRight {\n    position: absolute;\n    right: 0;\n    top: 0;\n  }\n\n  .closeModal {\n    top: 40px;\n    right: 20px;\n    z-index: 10;\n  }\n\n  .deleteButton {\n    color: red;\n  }\n`;\n\nconst normalDescriptionStyle = {\n  width: '100%',\n  outline: 'none',\n  border: '0',\n  fontSize: '15px',\n  fontFamily: 'inherit',\n  fontWeight: 'normal',\n  whiteSpace: 'pre-line',\n};\n\nconst editDescriptionStyle = {\n  width: '100%',\n  outline: 'none',\n  border: 'solid 1px teal',\n  fontSize: '15px',\n  fontFamily: 'inherit',\n  fontWeight: 'normal',\n  whiteSpace: 'pre-line',\n};\n\nconst normalTitleStyle = {\n  width: '80%',\n  outline: 'none',\n  border: 'none',\n  margin: '6px 8px',\n  background: 'transparent',\n  fontSize: '18px',\n  fontFamily: 'inherit',\n  fontWeight: 'bold',\n};\n\nconst editTitleStyle = {\n  width: '80%',\n  outline: 'none',\n  margin: '6px 8px',\n  border: 'solid 1px teal',\n  background: 'transparent',\n  fontSize: '18px',\n  fontFamily: 'inherit',\n  fontWeight: 'bold',\n};\n\nconst TaskModal = ({\n  title, columnId, description, taskId, todo, changeTitle, changeDescription, addTodoItem, delTask, moveTodosInTask, completedPercentage, date, addDate, getUserBoardsData, saveData, boardId, delDate, delAllTodoItem, isLoading, setSelectedTask,\n}) => {\n  const [open, setOpen] = useState(false);\n  const { userId, token } = useContext(AuthContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    setOpen(Boolean(taskId));\n  }, [taskId]);\n\n  const onDragEnd = ({ destination, source }) => {\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId\n      && destination.index === source.index\n    ) return;\n\n    moveTodosInTask(source.droppableId, source.index, destination.index);\n  };\n\n  const saveHandler = async () => {\n    saveData(boardId, token).then(() => {\n      getUserBoardsData(userId, token).then(() => {\n        setOpen(false);\n        setSelectedTask(null);\n        history.push(`/calendar/${moment(date).format('YYYY-MM')}`);\n      });\n    });\n  };\n\n  return (\n    <TaskModalStyled\n      BackdropComponent={Backdrop}\n      open={open}\n      onClose={() => {\n        setOpen(false);\n        setSelectedTask(null);\n      }}\n    >\n      <Fade in={open}>\n        <Paper className=\"card\">\n          <IconButton\n            className=\"stickyRight closeModal\"\n            onClick={() => {\n              setOpen(false);\n              setSelectedTask(null);\n            }}\n          >\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n          <div className=\"row\">\n            <FontAwesomeIcon className=\"icon\" icon={faAlignJustify} />\n            <EditableTitle\n              title={title}\n              changeTitle={newTitle => changeTitle(taskId, newTitle)}\n              normalStyle={normalTitleStyle}\n              style={editTitleStyle}\n              allowEnter\n            />\n          </div>\n          <div className=\"row\">\n            <FontAwesomeIcon className=\"icon\" icon={faComment} />\n            {description\n              ? (\n                <EditableTitle\n                  title={description}\n                  changeTitle={newVal => changeDescription(taskId, newVal)}\n                  style={editDescriptionStyle}\n                  normalStyle={normalDescriptionStyle}\n                  allowEmpty\n                  showButtons\n                  showMarkdown\n                />\n              )\n              : (\n                <Button onClick={() => changeDescription(taskId, 'New description')}>\n                  Add a description\n                </Button>\n              )}\n          </div>\n          <div className=\"row\">\n            <FontAwesomeIcon className=\"icon\" icon={faCalendar} />\n            {date\n              ? (\n                <>\n                  <DatePicker\n                    className=\"item\"\n                    onChange={(val) => {\n                      if (!val) {\n                        delDate(taskId);\n                      } else {\n                        addDate(taskId, val.toISOString());\n                      }\n                    }}\n                    value={new Date(date)}\n                  />\n                  <Button\n                    className=\"modalH1\"\n                    onClick={saveHandler}\n                  >\n                    go to calendar\n                  </Button>\n                </>\n              )\n              : (\n                <Button\n                  onClick={() => {\n                    const today = new Date();\n                    addDate(taskId, today.toISOString());\n                  }}\n                >\n                  Add Due Date\n                </Button>\n              )}\n          </div>\n          <div className=\"row\">\n            <FontAwesomeIcon className=\"icon\" icon={faCheckSquare} />\n            {todo && todo.length > 0\n              ? (\n                <>\n                  <h1 className=\"modalH1\">Todo list</h1>\n                  <IconButton\n                    className=\"stickyRight\"\n                    onClick={() => delAllTodoItem(taskId)}\n                  >\n                    <FontAwesomeIcon className=\"icon iconButton\" icon={faTrash} />\n                  </IconButton>\n                </>\n              )\n              : (\n                <Button onClick={() => addTodoItem(taskId, uuidv4(), 'New item')}>\n                  Add todo list\n                </Button>\n              )}\n          </div>\n          <DragDropContext\n            onDragEnd={onDragEnd}\n          >\n            {todo && (\n            <TodoList\n              todo={todo}\n              taskId={taskId}\n              columnId={columnId}\n              addTodoItem={addTodoItem}\n              completedPercentage={completedPercentage}\n            />\n\n            )}\n          </DragDropContext>\n          <div className=\"row\">\n            <FontAwesomeIcon className=\"icon deleteButton\" icon={faTrash} />\n            <Button\n              className=\"deleteButton\"\n              onClick={() => {\n                delTask(columnId, taskId);\n                setOpen(false);\n                setSelectedTask(null);\n              }}\n            >\n              Delete Task\n            </Button>\n          </div>\n        </Paper>\n      </Fade>\n    </TaskModalStyled>\n  );\n};\n\nexport default React.memo(TaskModal);\n","import { connect } from 'react-redux';\nimport TaskModal from './TaskModal';\nimport { delTask } from '../actions/columnActions';\nimport {\n  changeTitle, changeDescription, moveTodosInTask, addTodoItem, addDate, delDate, delAllTodoItem,\n} from '../actions/taskActions';\nimport {\n  getUserBoardsData,\n} from '../actions/userBoardsActions';\nimport { saveData } from '../actions/boardActions';\nimport { setSelectedTask } from '../../globalActions';\n\nconst mapStateToProps = (state) => {\n  const task = state.gb.selectedTask && state.tasks[state.gb.selectedTask];\n  return {\n    title: task && task.title,\n    description: task && task.description,\n    date: task && task.date,\n    completedCount: task && task.completedCount,\n    todo: task && task.todo,\n    completedPercentage: task && (task.completedCount / task.todo.length) * 100,\n    taskId: task && state.gb.selectedTask,\n    columnId: task && task.columnId,\n    isLoading: state.gb.isLoading,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeTitle,\n  changeDescription,\n  moveTodosInTask,\n  addTodoItem,\n  delTask,\n  addDate,\n  delDate,\n  getUserBoardsData,\n  saveData,\n  setSelectedTask,\n  delAllTodoItem,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskModal);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst WarningDialogue = ({\n  open, onClose, onContinue, msg,\n}) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Warning!</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {msg}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onContinue} color=\"primary\">\n          Yes\n        </Button>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          No\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default React.memo(WarningDialogue);\n","import React from 'react';\nimport { CircularProgress, Backdrop } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst Background = styled(Backdrop)`\n  z-index: 9999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst LoadingOverlay = () => (\n  <Background open>\n    <CircularProgress\n      color=\"secondary\"\n      size=\"50px\"\n      thickness=\"5\"\n      value=\"50\"\n    />\n  </Background>\n);\n\nexport default LoadingOverlay;\n","import React, {\n  useCallback, useEffect, useContext, useState,\n} from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Button, InputBase } from '@material-ui/core';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport FlipMove from 'react-flip-move';\nimport { useMediaQuery } from 'react-responsive';\nimport { v4 as uuidv4 } from 'uuid';\nimport TimeoutContext from '../../shared/context/timeoutContext';\nimport AuthContext from '../../shared/context/authContext';\nimport ColumnContainer from '../column/ColumnContainer';\nimport TaskModal from '../taskModal/TaskModalContainer';\nimport EditableTitle from '../subcomponents/editableTitle';\nimport WarningDialog from '../../shared/components/WarningDialog';\nimport LoadingOverlay from '../../shared/components/LoadingOverlay';\n\nconst Columns = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: stretch;\n  justify-content: center;\n`;\n\nconst BoardStyled = styled.div`\n  margin: 35px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`;\n\nconst ButtonStyled = styled(Button)`\n  font-size: 20px;\n  color: red;\n`;\n\nconst BackButton = styled(ButtonStyled)`\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  font-size: 20px;\n  color: red;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 5px;\n`;\n\nconst ColumnWrapper = styled.div`\n  width: ${({ isLargeScreen }) => (isLargeScreen ? '350px' : '100%')};\n`;\n\nconst SearchBar = styled(InputBase)`\n  border-radius: 5px;\n  background-color: #EBECF0;\n\n  padding: 5px;\n  width: 300px;\n`;\n\nconst titleInputStyle = {\n  outline: 'none',\n  border: '1px solid lightgray',\n  borderRadius: '10px',\n  background: 'white',\n  marginTop: '13px',\n  marginBottom: '15px',\n  width: '100%',\n  fontSize: '30px',\n  fontFamily: 'inherit',\n  fontWeight: 'bold',\n};\n\nconst Board = ({\n  title, columnOrder, changeTitle, addColumn, delColumn, selectedColumn, setSelectedColumn, swapColumns, moveTasksInColumn, moveTaskBetweenColumn, delTask, boardId, saveData, resetBoardData, getData, getUserBoardsData, isLoading, setFilterStr,\n}) => {\n  const { token, userId } = useContext(AuthContext);\n  const { resetTimeout } = useContext(TimeoutContext);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [willBeDeleted, setWillBeDeleted] = useState(null);\n  const [searchVal, setSearchVal] = useState('');\n\n  useEffect(() => {\n    resetTimeout();\n    getData(boardId);\n  }, []);\n\n  const saveDataHandler = () => {\n    resetTimeout();\n    saveData(boardId, token);\n    getUserBoardsData(userId, token);\n  };\n\n  const isLargeScreen = useMediaQuery({ minWidth: 700 });\n\n  const flagColumnHandler = useCallback((columnId, ignore) => {\n    if (!selectedColumn && !ignore) {\n      setSelectedColumn(columnId);\n    } else if (selectedColumn === columnId) {\n      setSelectedColumn(null);\n    } else if (!ignore) {\n      swapColumns(selectedColumn, columnId);\n      setSelectedColumn(null);\n    }\n  }, [selectedColumn]);\n\n  const onDragEnd = ({ destination, source, draggableId }) => {\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId\n      && destination.index === source.index\n    ) return;\n\n    if (source.droppableId === destination.droppableId) {\n      moveTasksInColumn(source.droppableId, source.index, destination.index);\n      return;\n    }\n\n    moveTaskBetweenColumn(source.droppableId, destination.droppableId, source.index, destination.index, draggableId);\n  };\n\n  if (!title) {\n    return <LoadingOverlay />;\n  }\n\n  return (\n    <BoardStyled>\n      {isLoading && <LoadingOverlay />}\n      <TaskModal boardId={boardId} />\n      <WarningDialog\n        open={openDialog}\n        onContinue={() => {\n          delColumn(willBeDeleted);\n          setOpenDialog(false);\n        }}\n        onClose={() => setOpenDialog(false)}\n        msg=\"Are you sure you want to delete this column?\"\n      />\n      <BackButton\n        component={Link}\n        to=\"/\"\n        onClick={() => {\n          saveDataHandler();\n          resetBoardData();\n        }}\n      >\n        BACK\n      </BackButton>\n      <TitleWrapper>\n        <EditableTitle\n          title={title}\n          changeTitle={changeTitle}\n          style={titleInputStyle}\n          rows={1}\n          allowEnter\n        />\n        <div className=\"search-bar\">\n          <SearchBar\n            placeholder=\"Search for tasks..\"\n            className=\"search-input\"\n            inputProps={{ 'aria-label': 'search' }}\n            onChange={(e) => {\n              setSearchVal(e.target.value);\n              setFilterStr(e.target.value);\n            }}\n            value={searchVal}\n          />\n          <Button\n            onClick={() => {\n              setFilterStr('');\n              setSearchVal('');\n            }}\n          >\n            Reset\n          </Button>\n        </div>\n      </TitleWrapper>\n      <Columns>\n        <DragDropContext\n          onDragEnd={onDragEnd}\n        >\n          <FlipMove typeName={null}>\n            {columnOrder.map(columnId => (\n              <ColumnWrapper\n                key={`${columnId}`}\n                isLargeScreen={isLargeScreen}\n              >\n                <ColumnContainer\n                  boardId={boardId}\n                  key={columnId}\n                  isLargeScreen={isLargeScreen}\n                  columnId={columnId}\n                  delColumn={delColumn}\n                  flagColumnHandler={flagColumnHandler}\n                  setOpenDialog={setOpenDialog}\n                  setWillBeDeleted={setWillBeDeleted}\n                />\n              </ColumnWrapper>\n            ))}\n          </FlipMove>\n        </DragDropContext>\n      </Columns>\n      {columnOrder.length === 0 && (\n        <Button onClick={() => addColumn(0, uuidv4())}>\n          + Add column\n        </Button>\n      )}\n      <ButtonStyled onClick={saveDataHandler}>Save Board</ButtonStyled>\n    </BoardStyled>\n  );\n};\n\nexport default Board;\n","import { connect } from 'react-redux';\nimport {\n  changeTitle, addColumn, delColumn, swapColumns, setSelectedColumn, saveData, getData, resetBoardData,\n} from '../actions/boardActions';\nimport {\n  addTask, delTask, moveTasksInColumn, moveTaskBetweenColumn,\n} from '../actions/columnActions';\nimport { getUserBoardsData } from '../actions/userBoardsActions';\nimport { setFilterStr } from '../../globalActions';\n\nimport Board from './Board';\n\nconst mapStateToProps = state => ({\n  title: state.board.title,\n  columnOrder: state.board.columnOrder,\n  selectedColumn: state.board.selectedColumn,\n  isLoading: state.gb.isLoading,\n});\n\nconst mapDispatchToProps = {\n  delColumn,\n  addColumn,\n  changeTitle,\n  swapColumns,\n  setSelectedColumn,\n  moveTasksInColumn,\n  moveTaskBetweenColumn,\n  addTask,\n  delTask,\n  saveData,\n  getData,\n  resetBoardData,\n  getUserBoardsData,\n  setFilterStr,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.id) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.id]: { val: action.val, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nconst useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, val, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      val,\n      isValid,\n      id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n\nexport { useForm };\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport styled from 'styled-components';\nimport { validate } from '../utils/validators';\n\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        val: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\n\nconst InputStyled = styled(TextField)`\n  width: 70%;\n  margin: 5px 0;\n`;\n\nconst Input = (props) => {\n  const {\n    initialValue,\n    initialValidity,\n    helperText,\n    id,\n    label,\n    onInput,\n    type,\n    validators,\n  } = props;\n\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    val: initialValue || '',\n    isValid: initialValidity || false,\n    isTouched: false,\n  });\n\n  useEffect(() => {\n    onInput(id, inputState.val, inputState.isValid);\n  }, [id, inputState.val, inputState.isValid, onInput]);\n\n  const changeHandler = (e) => {\n    dispatch({\n      type: 'CHANGE',\n      val: e.target.value,\n      validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH',\n    });\n  };\n\n  return (\n    <InputStyled\n      id={id}\n      label={label}\n      type={type}\n      error={inputState.isTouched && !inputState.isValid}\n      helperText={\n        inputState.isTouched\n        && !inputState.isValid\n        && helperText\n      }\n      variant=\"outlined\"\n      value={inputState.val}\n      onChange={changeHandler}\n      onBlur={touchHandler}\n    />\n  );\n};\n\nexport default Input;\n","import React, { useState, useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport AuthContext from '../../shared/context/authContext';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/utils/validators';\nimport Input from '../../shared/components/Input';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100vh - 50px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FormBox = styled.div`\n  width: 450px;\n  height: 500px;\n  border: 1px solid lightgray;\n  border-radius: 15px;\n  margin: auto;\n  padding: 15px;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  h2 {\n    font-weight: normal;\n    padding: 0;\n    margin-top: 5px;\n    margin-bottom: 25px;\n  }\n`;\n\nconst Logo = styled.h1`\n  font-size: 55px;\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonsWrapper = styled.div`\n  margin-top: 25px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n\n  .button {\n    margin: 5px;\n  }\n`;\n\nconst ErrorMsg = styled.h3`\n  color: red;\n`;\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    account_name: {\n      val: '',\n      helperText: '',\n      isValid: false,\n    },\n    password: {\n      val: '',\n      helperText: '',\n      isValid: false,\n    },\n  }, false);\n  const auth = useContext(AuthContext);\n  const {\n    error, sendRequest,\n  } = useHttpClient();\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n        },\n        formState.inputs.account_name.isValid && formState.inputs.password.isValid,\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n        },\n        formState.inputs.account_name.isValid && formState.inputs.password.isValid,\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n          'POST',\n          JSON.stringify({\n            account_name: formState.inputs.account_name.val,\n            password: formState.inputs.password.val,\n          }),\n          {\n            'Content-Type': 'application/json',\n          },\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          'POST',\n          JSON.stringify({\n            account_name: formState.inputs.account_name.val,\n            password: formState.inputs.password.val,\n          }),\n          {\n            'Content-Type': 'application/json',\n          });\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <Wrapper>\n      <FormBox>\n        <Logo>hello.</Logo>\n        <h2>{isLoginMode ? 'Welcome back!' : 'New user!'}</h2>\n        <Form onSubmit={authSubmitHandler}>\n          {\n            error && <ErrorMsg>{error}</ErrorMsg>\n          }\n          <Input\n            id=\"account_name\"\n            label=\"User Name\"\n            helperText=\"Please enter a username.\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n          />\n          <Input\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            helperText=\"Password should be minimum 5 characters.\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_MINLENGTH(5)]}\n          />\n          <ButtonsWrapper>\n            <Button\n              disabled={!formState.isValid}\n              type=\"submit\"\n              disableElevation\n              className=\"button\"\n              variant=\"contained\"\n              color=\"default\"\n            >\n              {isLoginMode ? 'Login' : 'Signup'}\n            </Button>\n            <Button\n              disableElevation\n              className=\"button\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={switchModeHandler}\n            >\n              {`switch to ${isLoginMode ? 'Sign up' : 'Log in'}`}\n            </Button>\n          </ButtonsWrapper>\n        </Form>\n      </FormBox>\n    </Wrapper>\n  );\n};\n\nexport default Auth;\n","import {\n  useState, useCallback, useRef, useEffect,\n} from 'react';\n\nconst useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl,\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    [],\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => () => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n  }, []);\n\n  return {\n    isLoading, error, sendRequest, clearError,\n  };\n};\nexport { useHttpClient };\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Card, Button, ClickAwayListener } from '@material-ui/core';\n\nconst BoardCardFront = styled(Card)`\n  width: 300px;\n  height: 100px;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n\n  .link {\n    font-family: inherit;\n    font-size: 20px;\n    text-decoration: none;\n    color: gray;\n  }\n`;\n\nconst BoardCardBack = styled(Card)`\n  width: 300px;\n  height: 100px;\n  margin-bottom: 20px;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n\n  .link {\n    text-decoration: none;\n    color: gray;\n  }\n\n  .button {\n    font-family: inherit;\n    font-size: 20px;\n    text-decoration: none;\n    color: gray;\n  }\n`;\n\nconst BoardCard = ({\n  title, id, setOpenDialog, setWillBeDeleted,\n}) => {\n  const [selected, setSelected] = useState(false);\n  if (!selected) {\n    return (\n      <BoardCardFront\n        onClick={() => setSelected(true)}\n      >\n        <h2>{title}</h2>\n      </BoardCardFront>\n    );\n  } return (\n    <ClickAwayListener\n      onClickAway={() => setSelected(false)}\n    >\n      <BoardCardBack>\n        <Button className=\"button\"><NavLink className=\"link\" to={`/boards/${id}`}>OPEN</NavLink></Button>\n        <Button\n          className=\"button\"\n          onClick={() => {\n            setWillBeDeleted(id);\n            setOpenDialog(true);\n          }}\n        >\n          Delete\n        </Button>\n      </BoardCardBack>\n    </ClickAwayListener>\n  );\n};\n\nexport default React.memo(BoardCard);\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Card, Button } from '@material-ui/core';\n\nconst BoardCardFront = styled(Card)`\n  width: 300px;\n  height: 100px;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n\n  .link {\n    font-family: inherit;\n    font-size: 20px;\n    text-decoration: none;\n    color: gray;\n  }\n`;\n\nconst BoardCardBack = styled(Card)`\n  width: 300px;\n  height: 100px;\n  margin-bottom: 20px;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n\n  .link {\n    text-decoration: none;\n    color: gray;\n  }\n\n  .button {\n    font-family: inherit;\n    font-size: 20px;\n    text-decoration: none;\n    color: gray;\n  }\n`;\n\nconst BoardCard = ({\n  title, id, setOpenDialog, setWillBeDeleted,\n}) => {\n  const [selected, setSelected] = useState(false);\n  if (!selected) {\n    return (\n      <BoardCardFront\n        onMouseEnter={() => setSelected(true)}\n      >\n        <h2>{title}</h2>\n      </BoardCardFront>\n    );\n  } return (\n    <BoardCardBack\n      onMouseLeave={() => setSelected(false)}\n    >\n      <Button className=\"button\"><NavLink className=\"link\" to={`/boards/${id}`}>OPEN</NavLink></Button>\n      <Button\n        className=\"button\"\n        onClick={() => {\n          setWillBeDeleted(id);\n          setOpenDialog(true);\n        }}\n      >\n        Delete\n      </Button>\n    </BoardCardBack>\n  );\n};\n\nexport default React.memo(BoardCard);\n","import React, {\n  useEffect, useState, useContext,\n} from 'react';\nimport { useParams, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport FlipMove from 'react-flip-move';\nimport { IconButton, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport { isMobile } from 'react-device-detect';\nimport AuthContext from '../../shared/context/authContext';\nimport TimeoutContext from '../../shared/context/timeoutContext';\nimport BoardCardMobile from './BoardCardMobile';\nimport BoardCardDesktop from './BoardCardDesktop';\nimport WarningDialog from '../../shared/components/WarningDialog';\n\nconst Title = styled.h1`\n`;\n\nconst Wrapper = styled.div`\n  margin: 50px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .link {\n    color: inherit;\n  }\n\n  .MuiIconButton-root.icon {\n    font-size: 30px;\n  }\n\n  .icon {\n    position: absolute;\n    right: 20px;\n    top: 20px;\n  }\n`;\n\nconst BoardList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 50px;\n  border-radius: 15px;\n  width: 100%;\n  background: #EBECF0;\n`;\n\nconst LogoutButton = styled(Button)`\n  position: absolute;\n  font-size: 17px;\n  left: 30px;\n  top: 30px;\n  color: red;\n`;\n\nconst NewBoard = styled(Button)`\n`;\n\nconst UserBoards = ({\n  boardsList, getUserBoardsData, postUserBoard, delUserBoard,\n}) => {\n  const { userId } = useParams();\n  const [openDialog, setOpenDialog] = useState(false);\n  const { token, logout } = useContext(AuthContext);\n  const { resetTimeout } = useContext(TimeoutContext);\n  const [willBeDeleted, setWillBeDeleted] = useState(null);\n\n  const BoardCard = isMobile ? <BoardCardMobile /> : <BoardCardDesktop />;\n\n  const createBoardHandler = () => {\n    postUserBoard(userId, token);\n    resetTimeout();\n  };\n\n  const deleteBoardHandler = (boardId) => {\n    delUserBoard(boardId, token);\n  };\n\n  useEffect(() => {\n    resetTimeout();\n    getUserBoardsData(userId, token);\n  }, []);\n\n  if (!boardsList) {\n    return <h1>Is loading boards...</h1>;\n  }\n\n  return (\n    <Wrapper>\n      <WarningDialog\n        open={openDialog}\n        onContinue={() => {\n          deleteBoardHandler(willBeDeleted);\n          setOpenDialog(false);\n        }}\n        onClose={() => setOpenDialog(false)}\n        msg=\"Are you sure you want to delete this board?\"\n      />\n      <LogoutButton onClick={() => { logout(); }}>\n        Logout\n      </LogoutButton>\n      <Title>\n        My Boards\n      </Title>\n      <IconButton className=\"icon\" size=\"large\">\n        <NavLink className=\"link\" to={`/calendar/${moment(new Date()).format('YYYY-MM')}`}>\n          <FontAwesomeIcon icon={faCalendar} />\n        </NavLink>\n      </IconButton>\n      <BoardList>\n        <FlipMove typeName={null}>\n          {boardsList.map(({ id, title }) => (\n            <div key={id}>\n              {isMobile\n                ? (\n                  <BoardCardMobile\n                    title={title}\n                    id={id}\n                    setOpenDialog={setOpenDialog}\n                    setWillBeDeleted={setWillBeDeleted}\n                  />\n                ) : (\n                  <BoardCardDesktop\n                    title={title}\n                    id={id}\n                    setOpenDialog={setOpenDialog}\n                    setWillBeDeleted={setWillBeDeleted}\n                  />\n                )}\n            </div>\n          ))}\n        </FlipMove>\n        <NewBoard onClick={createBoardHandler}>\n          Create New Board\n        </NewBoard>\n      </BoardList>\n    </Wrapper>\n  );\n};\n\nexport default UserBoards;\n","import { connect } from 'react-redux';\nimport {\n  postUserBoard,\n  delUserBoard,\n  getUserBoardsData,\n} from '../actions/userBoardsActions';\nimport UserBoards from './UserBoards';\n\nconst mapStateToProps = (state) => {\n  return {\n    boardsList: Object.keys(state.userBoards).map(id => ({\n      id,\n      title: state.userBoards[id].title,\n    })),\n  };\n};\n\nconst mapDispatchToProps = {\n  postUserBoard,\n  delUserBoard,\n  getUserBoardsData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBoards);\n","const monthsData = [\n  {\n    monthName: 'January',\n    daysCount: 31,\n  },\n  {\n    monthName: 'February',\n    daysCount: 28,\n  },\n  {\n    monthName: 'March',\n    daysCount: 31,\n  },\n  {\n    monthName: 'April',\n    daysCount: 30,\n  },\n  {\n    monthName: 'May',\n    daysCount: 31,\n  },\n  {\n    monthName: 'June',\n    daysCount: 30,\n  },\n  {\n    monthName: 'July',\n    daysCount: 31,\n  },\n  {\n    monthName: 'August',\n    daysCount: 31,\n  },\n  {\n    monthName: 'September',\n    daysCount: 30,\n  },\n  {\n    monthName: 'October',\n    daysCount: 31,\n  },\n  {\n    monthName: 'November',\n    daysCount: 30,\n  },\n  {\n    monthName: 'December',\n    daysCount: 31,\n  },\n\n];\n\nexport default monthsData;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Popper, ClickAwayListener } from '@material-ui/core';\n\nconst PopperWrapper = styled.div`\n  background: teal;\n  color: white;\n  padding: 3px;\n  max-width: 200px;\n  border-radius: 5px;\n\n  h1 {\n    font-size: 15px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  position: relative;\n  overflow: hidden;\n\n  .text {\n    padding: 0;\n    font-size: 15px;\n    font-family: inherit;\n    color: black;\n    text-transform: none;\n    text-align: left;\n    height: 100%;\n    width: 55%;\n    position: absolute;\n    top: 0;\n    left: 43px;\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n\n`;\n\nconst Dot = styled.div`\n  background: ${props => props.colour};\n  height: 15px;\n  width: 15px;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  left: 0;\n  top: 0;\n  margin-top: 8px;\n  margin-left: 15px;\n\n  .MuiIconButton-root .MuiButton-label{\n    font-size: 15px;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n  }\n`;\n\nconst Event = ({\n  id, date, title, description, todo, boardId, setSelectedTask,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  const history = useHistory();\n\n  const open = Boolean(anchorEl);\n  return (\n    <>\n      <ClickAwayListener\n        onClickAway={handlePopoverClose}\n      >\n        <Wrapper onClick={handlePopoverOpen}>\n          <Dot colour=\"teal\" />\n          <div\n            className=\"text\"\n          >\n            {title}\n          </div>\n        </Wrapper>\n      </ClickAwayListener>\n      <Popper\n        className=\"popper\"\n        open={open}\n        anchorEl={anchorEl}\n        onTouchStart={() => {\n          setSelectedTask(id);\n          history.push(`/boards/${boardId}`);\n        }}\n        disableRestoreFocus\n      >\n        <PopperWrapper>\n          <h1>{title}</h1>\n        </PopperWrapper>\n      </Popper>\n    </>\n  );\n};\n\nexport default Event;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { Popper } from '@material-ui/core';\n\nconst PopperWrapper = styled.div`\n  background: teal;\n  color: white;\n  padding: 3px;\n  max-width: 200px;\n  border-radius: 5px;\n\n  h1 {\n    font-size: 15px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  position: relative;\n  overflow: hidden;\n\n  .text {\n    padding: 0;\n    font-size: 15px;\n    font-family: inherit;\n    color: black;\n    text-transform: none;\n    text-align: left;\n    height: 100%;\n    width: 55%;\n    position: absolute;\n    top: 0;\n    left: 43px;\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n\n`;\n\nconst Dot = styled.div`\n  background: ${props => props.colour};\n  height: 15px;\n  width: 15px;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  left: 0;\n  top: 0;\n  margin-top: 8px;\n  margin-left: 15px;\n\n  .MuiIconButton-root .MuiButton-label{\n    font-size: 15px;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n  }\n`;\n\nconst Event = ({\n  id, date, title, description, todo, boardId, setSelectedTask,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  return (\n    <>\n      <Wrapper\n        onClick={() => setSelectedTask(id)}\n      >\n        <NavLink\n          to={`/boards/${boardId}`}\n        >\n          <Dot colour=\"teal\" />\n          <div\n            onMouseEnter={handlePopoverOpen}\n            onMouseLeave={handlePopoverClose}\n            className=\"text\"\n          >\n            {title}\n          </div>\n        </NavLink>\n      </Wrapper>\n      <Popper\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"bottom-start\"\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <PopperWrapper>\n          <h1>{title}</h1>\n        </PopperWrapper>\n      </Popper>\n    </>\n  );\n};\n\nexport default Event;\n","import { connect } from 'react-redux';\nimport { isMobile } from 'react-device-detect';\nimport { setSelectedTask } from '../../globalActions';\nimport EventMobile from './EventMobile';\nimport EventDesktop from './EventDesktop';\n\nconst Event = isMobile ? EventMobile : EventDesktop;\n\nconst mapStateToProps = (state, props) => ({ ...state.events[props.id] });\n\nconst mapDispatchToProps = {\n  setSelectedTask,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Event);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Event from '../events/EventContainer';\n\nconst Wrapper = styled.div`\n  width: 13%;\n  height: 100%;\n  background: white;\n  border-radius: 10px;\n\n  .circle {\n    background: ${({ isToday }) => (isToday ? 'teal' : 'initial')};\n    border-radius: 25px;\n    width: 35px;\n    height 35px;\n    margin-left: 5px;\n  }\n\n  p {\n    font-size: 20px;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n    padding-top: 5px;\n    color: ${({ isToday }) => (isToday ? 'white' : 'initial')};\n  }\n\n  .events {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n\n  }\n`;\n\nconst getIsToday = (date) => {\n  if (!date) return false;\n  let todayDate = new Date();\n  todayDate = new Date(todayDate.getFullYear(), todayDate.getMonth(), todayDate.getDate());\n  if (todayDate.toISOString() === date.toISOString()) return true;\n  return false;\n};\n\nconst DateSquare = ({ id, date, eventIds }) => {\n  return (\n    <Wrapper\n      isToday={getIsToday(date)}\n    >\n      <div className=\"circle\">\n        <p>{date && date.getDate()}</p>\n      </div>\n      <div className=\"events\">\n        {eventIds.map(eventId => (\n          <Event id={eventId} />\n        ))}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(DateSquare);\n","import { connect } from 'react-redux';\nimport DateSquare from './DateSquare';\n\nconst mapStateToProps = (state, props) => {\n  return {\n    date: state.dates[props.id].date,\n    eventIds: state.dates[props.id].eventIds.filter(\n      (eventId) => {\n        if (state.events[eventId]) {\n          return props.showBoard.includes(state.events[eventId].boardId);\n        }\n        return false;\n      },\n    ),\n  };\n};\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateSquare);\n","import React, { useState } from 'react';\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n} from '@material-ui/core';\n\nconst FilterBoardSelector = ({boardIds, idToTitle, showBoard, setShowBoard}) => {\n  const [text, setText] = useState('Show all')\n  return (\n    <FormControl variant=\"outlined\">\n      <InputLabel>Select Boards</InputLabel>\n      <Select\n        native\n        value={text}\n        onChange={e => {\n          setText(e.target.value)\n          setShowBoard(e.target.value)\n        }}\n        label=\"Select board\"\n        inputProps={{\n          name: 'age',\n          id: 'filled-age-native-simple',\n        }}\n      >\n        <option value={boardIds}>Show all</option>\n        {boardIds.map(boardId => (\n          <option value={boardId}>{idToTitle[boardId]}</option>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default FilterBoardSelector;\n","import { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport FilterBoardSelector from './FilterBoardSelector';\n\nconst mapStateToProps = (state, props) => {\n  const idToTitle = R.reduceBy(\n    (acc, boardId) => {\n      return acc.concat(state.userBoards[boardId].title)\n    } ,\n    [],\n    boardId => boardId,\n    props.boardIds,\n  );\n  return {\n    idToTitle,\n  };\n};\nexport default connect(mapStateToProps, {})(FilterBoardSelector);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst years = [...Array(100).keys()].map(i => i + 2000);\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst getDate = (month, year) => new Date(year, months.indexOf(month), 1);\n\nconst HeaderStyled = styled.div`\n  width: 100%;\n  height 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  h1 {\n    font-size: 40px;\n    color: red;\n    margin: 0;\n  }\n\n  h2 {\n    margin: 0;\n    font-size: 20px;\n  }\n`;\n\nconst Header = ({ monthName, yearName, changeMonth }) => {\n  const [anchorMonth, setAnchorMonth] = useState();\n  const [anchorYear, setAnchorYear] = useState();\n\n  const handleMonthClick = (event) => {\n    setAnchorMonth(event.currentTarget);\n  };\n\n  const handleYearClick = (event) => {\n    setAnchorYear(event.currentTarget);\n  };\n\n  const handleMonthClose = () => setAnchorMonth(null);\n  const handleYearClose = () => setAnchorYear(null);\n\n  return (\n    <HeaderStyled>\n      <Button\n        onClick={handleMonthClick}\n      >\n        <h1>{monthName}</h1>\n      </Button>\n      <Button\n        onClick={handleYearClick}\n      >\n        <h2>{yearName}</h2>\n      </Button>\n      <Menu\n        anchorEl={anchorMonth}\n        keepMounted\n        open={Boolean(anchorMonth)}\n        onClose={handleMonthClose}\n      >\n        {months.map(month => (\n          <MenuItem\n            onClick={() => {\n              changeMonth(getDate(month, yearName));\n              handleMonthClose();\n            }}\n          >\n            {month}\n          </MenuItem>\n        ))}\n      </Menu>\n      <Menu\n        anchorEl={anchorYear}\n        keepMounted\n        open={Boolean(anchorYear)}\n        onClose={handleYearClose}\n      >\n        {years.map(year => (\n          <MenuItem\n            onClick={() => {\n              changeMonth(getDate(monthName, year));\n              handleYearClose();\n            }}\n          >\n            {year}\n          </MenuItem>\n        ))}\n      </Menu>\n    </HeaderStyled>\n  );\n};\n\nexport default React.memo(Header);\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport TimeoutContext from '../../shared/context/timeoutContext';\nimport DateSquare from '../date/DateSquareContainer';\nimport FilterBoardSelector from './FilterBoardSelectorContainer';\nimport Header from './Header';\n\nconst BackButton = styled(Button)`\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  font-size: 20px;\n  color: red;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  .MuiButton-root.button {\n    color: red;\n    font-size: 20px;\n  }\n\n  .topRight {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    right: 30px;\n    top: 30px;\n  }\n\n  .topLeft {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    left: 30px;\n    top: 30px;\n  }\n\n`;\n\nconst weekdays = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\n\nconst Body = styled.div`\n  background: #EBECF0;\n  padding: 15px;\n`;\n\nconst WeekContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  width: 80%;\n  height: 180px;\n  justify-content: space-evenly;\n  padding: 10px 0;\n`;\n\nconst DayLabel = styled.div`\n  display: flex;\n  margin: 0 auto;\n  padding-bottom: 20px;\n  width: 80%;\n  height: 30px;\n  justify-content: space-evenly;\n\n  p {\n    width: 13%;\n    text-align: center;\n    font-weight: bold;\n    font-size: 18px;\n  }\n`;\n\nconst Calendar = ({\n  monthName, yearName, dates, changeMonth, moveEventBetweenDates,\n  addEvent, delEvent, boardIds, getEvents, yearMonth, userBoards,\n}) => {\n  const [showBoard, setShowBoard] = useState(boardIds);\n\n  const { resetTimeout } = useContext(TimeoutContext);\n\n  const goToday = () => {\n    const todayDate = new Date();\n    changeMonth(new Date(todayDate.getFullYear(), todayDate.getMonth(), 1));\n  };\n  const goToDate = (date) => {\n    changeMonth(new Date(date));\n  };\n\n  useEffect(() => {\n    resetTimeout();\n    getEvents();\n    goToDate(yearMonth);\n  }, [userBoards]);\n\n  return (\n    <Wrapper>\n      <div className=\"topLeft\">\n        <BackButton\n          component={Link}\n          to=\"/\"\n        >\n          BACK\n        </BackButton>\n      </div>\n      <div className=\"topRight\">\n        <Button\n          onClick={goToday}\n          style={{ marginRight: '20px' }}\n        >\n          Today\n        </Button>\n        <FilterBoardSelector\n          boardIds={boardIds}\n          showBoard={showBoard}\n          setShowBoard={setShowBoard}\n        />\n      </div>\n      <Header\n        changeMonth={changeMonth}\n        monthName={monthName}\n        yearName={yearName}\n      />\n      <Body>\n        <DayLabel>\n          {weekdays.map(day => (\n            <p>{day}</p>\n          ))}\n        </DayLabel>\n        {dates.map(week => (\n          <WeekContainer>\n            {week.map(day => (\n              <DateSquare showBoard={showBoard} id={day} />\n            ))}\n          </WeekContainer>\n        ))}\n      </Body>\n    </Wrapper>\n  );\n};\n\nexport default Calendar;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\nconst IDLETIMEOUT = 1000 * 60 * 60 * 6;\n\nconst useAuth = () => {\n  const [userId, setUserId] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState(undefined);\n  const [token, setToken] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + IDLETIMEOUT); // one hour\n\n    setTokenExpirationDate(tokenExpirationDate);\n\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token,\n      expiration: tokenExpirationDate.toISOString(),\n    }));\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setTokenExpirationDate(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  const resetTimeout = useCallback(() => {\n    const newTokenExpirationDate = new Date(new Date().getTime() + IDLETIMEOUT); // one hour\n    setTokenExpirationDate(newTokenExpirationDate);\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      if (logoutTimer) clearTimeout(logoutTimer);\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate, resetTimeout]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData\n      && storedData.token\n      && new Date(storedData.expiration) > new Date() // stored date is in the future\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, resetTimeout, userId };\n};\n\nexport { useAuth };\n","import { connect } from 'react-redux';\nimport { changeMonth, getEvents } from '../actions/calendarActions';\nimport Calendar from './Calendar';\nimport { moveEventBetweenDates } from '../actions/dateActions';\n\nconst mapStateToProps = state => ({\n  monthName: state.calendar.monthName,\n  yearName: state.calendar.yearName,\n  dates: state.calendar.dates,\n  boardIds: Object.keys(state.userBoards),\n  userBoards: state.userBoards,\n});\n\nconst mapDispatchToProps = {\n  changeMonth,\n  getEvents,\n  moveEventBetweenDates,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calendar);\n","import * as R from 'ramda';\nimport data from '../reducers/monthsData';\n\nconst getNewDate = (newDate, prevDateIndex, prevWeekIndex) => {\n  const firstDayIndex = newDate.getDay();\n  const newDateNumber = prevWeekIndex * 7 + (prevDateIndex - firstDayIndex + 1);\n  if (newDateNumber <= 0 || newDateNumber > data[newDate.getMonth()].daysCount) {\n    return null;\n  } return new Date(newDate.getFullYear(), newDate.getMonth(), newDateNumber);\n};\n\nexport const getEvents = () => (dispatch, getState) => {\n  const boards = getState().userBoards;\n  const events = {};\n\n  R.forEachObjIndexed(({ tasks }, boardId) => {\n    Object.values(tasks).forEach((task) => {\n      if (task.date != null) {\n        events[task.id] = { ...task, boardId };\n      }\n    });\n  }, boards);\n\n  dispatch({\n    type: 'SET_EVENTS_DATA',\n    payload: { events },\n  });\n};\n\nexport const changeMonth = newDate => (dispatch, getState) => {\n  const dateIds = Object.keys(getState().dates);\n  // get the new dates for each date id\n  const dateIdToNewDate = R.reduceBy(\n    (acc, dateId) => {\n      const { dateIndex } = getState().dates[dateId];\n      const { weekIndex } = getState().dates[dateId];\n      return acc.concat(\n        getNewDate(newDate, dateIndex, weekIndex),\n      );\n    }, [],\n    dateId => dateId,\n    dateIds,\n  );\n\n  // Now we should make a date to event ids dictionary\n\n  // iso date string to collection of eventIds\n  const events = Object.values(getState().events);\n  const dateToEventIds = R.reduceBy(\n    (acc, { id }) => acc.concat(id), // value fn\n    [],\n    ({ date }) => date, // key fn\n    events,\n  );\n\n  const dateIdToEventIds = R.reduceBy(\n    (acc, dateId) => {\n      if (dateIdToNewDate[dateId][0]) {\n        const dateISOString = dateIdToNewDate[dateId][0].toISOString();\n        if (dateToEventIds[dateISOString]) {\n          return acc.concat(dateToEventIds[dateISOString]);\n        } return acc;\n      } return acc;\n    },\n    [],\n    dateId => dateId,\n    dateIds,\n  );\n\n  dispatch({\n    type: 'CHANGE_MONTH',\n    payload: {\n      newDate, dateIdToEventIds, dateIdToNewDate,\n    },\n  });\n};\n","export const moveEventBetweenDates = (dateId1, dateId2, index1, index2, eventId) => ({\n  type: 'MOVE_EVENT_BETWEEN_DATE',\n  payload: {\n    dateId1, dateId2, index1, index2, eventId,\n  },\n});\n","import React from 'react';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport {\n  BrowserRouter as Router, Route, Redirect, Switch,\n} from 'react-router-dom';\n\nimport Board from './board/board/BoardContainer';\nimport Auth from './user/pages/Auth';\nimport UserBoards from './board/userBoard/UserBoardsContainer';\nimport Calendar from './calendar/calendar/CalendarContainer';\n\nimport AuthContext from './shared/context/authContext';\nimport TimeoutContext from './shared/context/timeoutContext';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => {\n  let routes;\n  const {\n    token, login, logout, resetTimeout, userId,\n  } = useAuth();\n\n  if (token && userId) {\n    routes = (\n      <>\n        <Switch>\n          <Route\n            exact\n            path=\"/:userId/boards\"\n          >\n            <UserBoards />\n          </Route>\n          <Route\n            exact\n            path=\"/boards/:boardId\"\n            render={({ match }) => (\n              <Board boardId={match.params.boardId} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/calendar/:yearMonth\"\n            render={({ match }) => (\n              <Calendar yearMonth={match.params.yearMonth} />\n            )}\n          />\n          <Redirect to={`/${userId}/boards`} />\n        </Switch>\n      </>\n    );\n  } else {\n    routes = (\n      <>\n        <Route exact path=\"/\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/\" />\n      </>\n    );\n  }\n  return (\n    <StylesProvider injectFirst>\n      <AuthContext.Provider value={{\n        userId,\n        token,\n        login,\n        logout,\n      }}\n      >\n        <TimeoutContext.Provider value={{\n          resetTimeout,\n        }}\n        >\n          <Router>\n            <Switch>\n              {routes}\n            </Switch>\n          </Router>\n        </TimeoutContext.Provider>\n      </AuthContext.Provider>\n    </StylesProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import monthsData from './monthsData';\n\nconst today = new Date();\n\nconst initialData = {\n  monthName: monthsData[today.getMonth()].monthName,\n  dates: [[], [], [], [], [], []],\n};\n\nfor (let i = 0; i < 42; i += 1) {\n  initialData.dates[Math.floor(i / 7)].push(`date-${i}`);\n}\n\nconst calendarReducer = (state = initialData, { type, payload }) => {\n  switch (type) {\n    case 'CHANGE_MONTH':\n      return {\n        ...state,\n        monthName: monthsData[payload.newDate.getMonth()].monthName,\n        yearName: payload.newDate.getFullYear(),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default calendarReducer;\n","const initialBoardData = {\n  selectedColumn: null,\n  title: '',\n  columnOrder: [],\n};\n\nconst boardReducer = (state = initialBoardData, { type, payload }) => {\n  const newColumnOrder = [...state.columnOrder];\n  switch (type) {\n    case 'SET_BOARD_DATA':\n      return {\n        title: payload.title,\n        columnOrder: payload.columnOrder,\n        selectedColumn: payload.selectedColumn,\n      }\n\n    case 'CHANGE_TITLE':\n      return {\n        ...state,\n        title: payload,\n      };\n\n    case 'ADD_COLUMN':\n      if (!payload.columnId) {\n        newColumnOrder.push(payload.insertAfter);\n      } else {\n        const index = newColumnOrder.indexOf(payload.columnId) + 1;\n        newColumnOrder.splice(index, 0, payload.insertAfter);\n      }\n      return {\n        ...state,\n        columnOrder: newColumnOrder,\n      };\n    case 'DEL_COLUMN':\n      const newState = {\n        ...state,\n        columnOrder: state.columnOrder.filter(columnId => payload !== columnId),\n      };\n      return newState;\n\n    case 'SWAP_COLUMNS':\n      const col_1_index = state.columnOrder.indexOf(payload.col_1);\n      const col_2_index = state.columnOrder.indexOf(payload.col_2);\n      const save = newColumnOrder[col_1_index];\n      newColumnOrder[col_1_index] = newColumnOrder[col_2_index];\n      newColumnOrder[col_2_index] = save;\n      return {\n        ...state,\n        columnOrder: newColumnOrder,\n      };\n\n    case 'SET_SELECTED_COLUMN':\n      return {\n        ...state,\n        selectedColumn: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;\n","const initialColumnsData = {\n  'column-1': {\n    id: 'column-1',\n    title: 'first column',\n    taskOrder: ['task-1', 'task-2'],\n  },\n  'column-2': {\n    id: 'column-2',\n    title: 'second column',\n    taskOrder: ['task-3'],\n  },\n  'column-3': {\n    id: 'column-3',\n    title: 'third column',\n    taskOrder: [],\n  },\n};\n\nconst columnReducer = (state = initialColumnsData, { type, payload }) => {\n  switch (type) {\n    case 'SET_BOARD_DATA':\n      return {\n        ...payload.columns,\n      };\n\n    case 'ADD_COLUMN':\n      return {\n        ...state,\n        [payload.insertAfter]: {\n          id: payload.insertAfter,\n          title: 'New Column',\n          taskOrder: [],\n        },\n      };\n\n    case 'DEL_COLUMN':\n      const newState = { ...state };\n      delete newState[payload];\n      return newState;\n\n    case 'MOVE_TASKS_IN_COLUMN':\n      const newTaskOrder = [...state[payload.columnId].taskOrder];\n\n      const save = newTaskOrder[payload.index1];\n      newTaskOrder.splice(payload.index1, 1);\n      newTaskOrder.splice(payload.index2, 0, save);\n\n      return {\n        ...state,\n        [payload.columnId]: {\n          ...state[payload.columnId],\n          taskOrder: newTaskOrder,\n        },\n      };\n\n    case 'MOVE_TASK_BETWEEN_COLUMN':\n      const newTaskOrder1 = [...state[payload.columnId1].taskOrder];\n      const newTaskOrder2 = [...state[payload.columnId2].taskOrder];\n\n      newTaskOrder1.splice(payload.index1, 1);\n      newTaskOrder2.splice(payload.index2, 0, payload.taskId);\n\n      return {\n        ...state,\n        [payload.columnId1]: {\n          ...state[payload.columnId1],\n          taskOrder: newTaskOrder1,\n        },\n        [payload.columnId2]: {\n          ...state[payload.columnId2],\n          taskOrder: newTaskOrder2,\n        },\n      };\n\n\n    case 'ADD_TASK':\n      return {\n        ...state,\n        [payload.columnId]: {\n          ...state[payload.columnId],\n          taskOrder: [\n            ...state[payload.columnId].taskOrder,\n            payload.taskId,\n          ],\n        },\n      };\n\n    case 'DEL_TASK':\n      return {\n        ...state,\n        [payload.columnId]: {\n          ...state[payload.columnId],\n          taskOrder: state[payload.columnId].taskOrder.filter(taskId => (\n            payload.taskId !== taskId\n          )),\n        },\n      };\n\n    case 'CHANGE_COLUMN_TITLE':\n      return {\n        ...state,\n        [payload.columnId]: {\n          ...state[payload.columnId],\n          title: payload.title,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default columnReducer;\n","import * as R from 'ramda';\n\nconst taskReducer = (state = {}, { type, payload }) => {\n  let newState;\n  switch (type) {\n    case 'SET_BOARD_DATA':\n      return {\n        ...payload.tasks,\n      };\n\n    case 'CHANGE_TASK_TITLE':\n      newState = {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          title: payload.newTitle,\n        },\n      };\n      return newState;\n\n    case 'CHANGE_TASK_DESCRIPTION':\n      newState = {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          description: payload.newDescription,\n        },\n      };\n      return newState;\n\n    case 'INCREMENT_COMPLETED_COUNT':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          completedCount: state[payload.taskId].completedCount + 1,\n        },\n      };\n\n    case 'DECREMENT_COMPLETED_COUNT':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          completedCount: state[payload.taskId].completedCount - 1,\n        },\n      };\n\n    case 'ADD_TASK_DATE':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          date: payload.date,\n        },\n      };\n\n    case 'DEL_TASK_DATE':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          date: null,\n        },\n      };\n\n    case 'DEL_ALL_TODO_ITEM':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          todo: [],\n          completedCount: 0,\n        },\n      };\n\n    case 'ADD_TASK':\n      return {\n        ...state,\n        [payload.taskId]: {\n          columnId: payload.columnId,\n          id: payload.taskId,\n          title: payload.content || 'New Task',\n          date: null,\n          description: '',\n          todo: [],\n          completedCount: 0,\n        },\n      };\n\n    case 'DEL_TASK':\n      newState = { ...state };\n      delete newState[payload.taskId];\n      return newState;\n\n    case 'MOVE_TODOS_IN_TASK':\n      const newTodo = [...state[payload.taskId].todo];\n      const save = newTodo[payload.index1];\n      newTodo.splice(payload.index1, 1);\n      newTodo.splice(payload.index2, 0, save);\n\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          todo: newTodo,\n        },\n      };\n\n    case 'MOVE_TASK_BETWEEN_COLUMN':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          columnId: payload.columnId2,\n        },\n      };\n\n    case 'ADD_TODO_ITEM':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          todo: [\n            ...state[payload.taskId].todo,\n            payload.todoItemId,\n          ],\n        },\n      };\n\n    case 'DEL_TODO_ITEM':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          todo: state[payload.taskId].todo.filter(todoItemId => (\n            payload.todoItemId !== todoItemId\n          )),\n        },\n      };\n\n    case 'DEL_COLUMN':\n      newState = {};\n      R.forEachObjIndexed((value, id) => {\n        if (value.columnId !== payload) {\n          newState[id] = value;\n        }\n      }, state);\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;\n","import * as R from 'ramda';\nconst initialTodoItemData = {\n  'todo-1': {\n    id: 'todo-1',\n    title: 'first todo',\n    isCompleted: false,\n  },\n  'todo-2': {\n    id: 'todo-2',\n    title: 'second todo',\n    isCompleted: false,\n  },\n  'todo-3': {\n    id: 'todo-3',\n    title: 'third todo',\n    isCompleted: false,\n  },\n};\n\nconst todoItemReducer = (state = initialTodoItemData, { type, payload }) => {\n  let newState;\n  switch (type) {\n    case 'SET_BOARD_DATA':\n      return {\n        ...payload.todoItems,\n      };\n\n    case 'CHANGE_TODO_ITEM_TITLE':\n      newState = {\n        ...state,\n        [payload.todoItemId]: {\n          ...state[payload.todoItemId],\n          title: payload.newTitle,\n        },\n      };\n      return newState;\n\n    case 'TOGGLE_IS_COMPLETED':\n      newState = {\n        ...state,\n        [payload.todoItemId]: {\n          ...state[payload.todoItemId],\n          isCompleted: !state[payload.todoItemId].isCompleted,\n        },\n      };\n\n      return newState;\n\n\n    case 'ADD_TODO_ITEM':\n      return {\n        ...state,\n        [payload.todoItemId]: {\n          id: payload.todoItemId,\n          taskId: payload.taskId,\n          title: payload.title || 'New todo item',\n          isCompleted: false,\n        },\n      };\n\n    case 'DEL_TODO_ITEM':\n      newState = { ...state };\n      delete newState[payload.todoItemId];\n      return newState;\n\n    case 'DEL_ALL_TODO_ITEM':\n      newState = {};\n      R.forEachObjIndexed((value, id) => {\n        if (value.taskId !== payload.taskId) {\n          newState[id] = value;\n        }\n      }, state);\n      return newState;\n\n    case 'DEL_TASK':\n      newState = {};\n      R.forEachObjIndexed((value, id) => {\n        if (value.taskId !== payload.taskId) {\n          newState[id] = value;\n        }\n      }, state);\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default todoItemReducer;\n","const userBoardsReducer = (state = {}, { type, payload }) => {\n  const newState = { ...state };\n  switch (type) {\n    case 'SET_USER_BOARDS_DATA':\n      return payload;\n\n    case 'ADD_BOARD':\n      return {\n        ...state,\n        [payload.id]: {\n          ...payload,\n        },\n      };\n\n    case 'DEL_BOARD':\n      delete newState[payload.id];\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default userBoardsReducer;\n","import data from './monthsData';\n\nconst initialData = {};\n\nconst getNewDate = (newDate, prevDateIndex, prevWeekIndex) => {\n  const firstDayIndex = newDate.getDay();\n  const newDateNumber = prevWeekIndex * 7 + (prevDateIndex - firstDayIndex + 1);\n  if (newDateNumber <= 0 || newDateNumber > data[newDate.getMonth()].daysCount) {\n    return null;\n  } return new Date(newDate.getFullYear(), newDate.getMonth(), newDateNumber);\n};\n\nfor (let i = 0, len = 42; i < len; i += 1) {\n  initialData[`date-${i}`] = {\n    id: `date-${i}`,\n    date: getNewDate(new Date(), i % 7, Math.floor(i / 7)),\n    weekIndex: Math.floor(i / 7),\n    dateIndex: i % 7,\n    eventIds: [],\n  };\n}\n\nconst dateReducer = (state = initialData, { type, payload }) => {\n  let newState = {};\n  switch (type) {\n    case 'CHANGE_MONTH':\n      for (let i = 0; i < 42; i += 1) {\n        newState[`date-${i}`] = {\n          ...state[`date-${i}`],\n          eventIds: payload.dateIdToEventIds[`date-${i}`],\n          date: payload.dateIdToNewDate[`date-${i}`][0],\n        };\n      }\n      return newState;\n\n\n    case 'MOVE_EVENT_BETWEEN_DATE':\n      const newEventIds1 = [...state[payload.dateId1].eventIds];\n      const newEventIds2 = [...state[payload.dateId2].eventIds];\n\n      newEventIds1.splice(payload.index1, 1);\n      newEventIds2.splice(payload.index2, 0, payload.eventId);\n\n      newState = {\n        ...state,\n        [payload.dateId1]: {\n          ...state[payload.dateId1],\n          eventIds: newEventIds1,\n        },\n        [payload.dateId2]: {\n          ...state[payload.dateId2],\n          eventIds: newEventIds2,\n        },\n      };\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default dateReducer;\n","const eventReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case 'SET_EVENTS_DATA':\n      return {\n        ...payload.events,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;\n","const initialState = {\n  selectedTask: null,\n  isLoading: false,\n  filterStr: '',\n};\n\nconst globalReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'SET_SELECTED_TASK':\n      return {\n        ...state,\n        selectedTask: payload,\n      };\n\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: payload,\n      };\n\n    case 'SET_FILTER_STR':\n      return {\n        ...state,\n        filterStr: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default globalReducer;\n","import { combineReducers } from 'redux';\nimport boardReducer from './board/reducers/boardReducer';\nimport columnReducer from './board/reducers/columnReducer';\nimport taskReducer from './board/reducers/taskReducer';\nimport todoItemReducer from './board/reducers/todoItemReducer';\nimport userBoardsReducer from './board/reducers/userBoardsReducer';\nimport calendarReducer from './calendar/reducers/calendarReducer';\nimport dateReducer from './calendar/reducers/dateReducer';\nimport eventReducer from './events/reducers/eventReducer';\nimport globalReducer from './globalReducer';\n\n\nexport default combineReducers({\n  board: boardReducer,\n  columns: columnReducer,\n  tasks: taskReducer,\n  todoItems: todoItemReducer,\n  userBoards: userBoardsReducer,\n  calendar: calendarReducer,\n  dates: dateReducer,\n  events: eventReducer,\n  gb: globalReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise';\nimport rootReducer from './allReducers';\n\nconst initialState = {};\n\nconst middleware = [thunk, promise];\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}