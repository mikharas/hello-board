{"version":3,"sources":["services/authHeader.js","services/checkAuthExpiry.js","board/actions/boardActions.js","board/actions/columnActions.js","board/actions/userBoardsActions.js","globalActions.js","shared/context/timeoutContext.js","shared/context/authContext.js","board/task/TaskMobile.js","board/subcomponents/MarkdownContainer.js","board/subcomponents/editableTitle.js","board/task/TaskDesktop.js","board/actions/taskActions.js","board/task/TaskContainer.js","board/task/NewTask.js","board/column/Column.js","board/column/ColumnContainer.js","board/todoitem/TodoItem.js","board/todoitem/TodoItemContainer.js","board/actions/todoItemActions.js","board/todoitem/NewTodoItem.js","board/taskModal/TodoList.js","board/taskModal/TaskModal.js","board/taskModal/TaskModalContainer.js","shared/components/WarningDialog.js","shared/components/LoadingOverlay.js","board/board/Board.js","board/board/BoardContainer.js","auth/actions/authActions.js","auth/Auth.js","auth/index.js","board/userBoard/BoardCardMobile.js","board/userBoard/BoardCardDesktop.js","board/userBoard/UserBoards.js","board/userBoard/UserBoardsContainer.js","calendar/reducers/monthsData.js","calendar/actions/calendarActions.js","calendar/events/EventMobile.js","calendar/events/EventDesktop.js","calendar/events/EventContainer.js","calendar/date/DateSquare.js","calendar/date/DateSquareContainer.js","calendar/calendar/FilterBoardSelector.js","calendar/calendar/FilterBoardSelectorContainer.js","calendar/calendar/Header.js","calendar/calendar/Calendar.js","calendar/calendar/CalendarContainer.js","calendar/actions/dateActions.js","theme.js","App.js","serviceWorker.js","calendar/reducers/calendarReducer.js","auth/reducers/authReducer.js","board/reducers/boardReducer.js","board/reducers/columnReducer.js","board/reducers/taskReducer.js","board/reducers/todoItemReducer.js","board/reducers/userBoardsReducer.js","calendar/reducers/dateReducer.js","events/reducers/eventReducer.js","globalReducer.js","allReducers.js","store.js","index.js"],"names":["authHeader","user","JSON","parse","localStorage","getItem","accessToken","Authorization","isExpired","token","verify","err","removeItem","addColumn","columnId","insertAfter","type","payload","saveData","boardId","dispatch","getState","a","alert","boardStructure","board","columns","tasks","todoItems","axios","patch","process","headers","then","addTask","taskId","content","delTask","require","api","getUserBoardsData","userId","get","response","idToBoard","R","boardData","id","data","boards","Object","keys","forEach","setSelectedTask","TimeoutContext","createContext","resetTimeout","login","logout","TaskCard","styled","Card","isfiltermatched","isDragDisabled","ProgressBar","LinearProgress","Title","h1","React","memo","changeTitle","title","description","index","todo","date","completedPercentage","filterStr","useState","filterMatch","setFilterMatch","useEffect","toLowerCase","includes","getDaysLeft","useCallback","today","Date","differenceMS","daysRemaining","Math","floor","key","draggableId","provided","snapshot","style","draggableProps","dragHandleProps","isdragging","ref","innerRef","elevation","onClick","length","variant","color","value","className","icon","faComment","faClock","MarkdownContainer","div","Wrapper","defaultTitleStyle","outline","background","marginTop","marginBottom","fontFamily","fontWeight","fontSize","padding","width","borderRadius","border","converter","showdown","Converter","extensions","showdownHighlight","ghCodeBlocks","setFlavor","customizedTitle","normalStyle","allowEmpty","allowEnter","rows","showButtons","showMarkdown","setValue","isEditmode","setIsEditMode","textArea","useRef","toggleEditMode","changeValue","newValue","handleChange","dangerouslySetInnerHTML","__html","makeHtml","ClickAwayListener","onClickAway","resize","tag","autoFocus","onFocus","e","target","select","stopPropagation","onInput","event","onKeyDown","keyCode","preventDefault","start","selectionStart","end","selectionEnd","substring","setTimeout","Button","Typography","styledMUI","theme","margin","position","display","alignItems","justifyContent","flexDirection","minHeight","height","top","left","titleStyle","titleEditStyle","hovered","setHovered","onMouseEnter","onMouseLeave","val","sx","mr","Stack","mb","gap","size","IconButton","newTitle","Task","isMobile","TaskMobile","TaskDesktop","mapDispatchToProps","connect","state","props","task","completedCount","gb","TextArea","TextareaAutosize","isButton","setIsButton","toggleIsButton","uuidv4","placeholder","onChange","titleStyleNormal","textAlign","ColumnStyled","Paper","palette","secondary","light","px","paddingBottom","flexGrow","TaskList","HeaderStyled","Header","changeColumnTitle","Column","forwardRef","skipRender","flagColumnHandler","delColumn","taskOrder","islargescreen","boardSelectedColumn","setOpenDialog","setWillBeDeleted","setShowButtons","onMouseOver","direction","float","droppableId","droppableProps","isdraggingOver","map","TaskContainer","selectedColumn","ItemStyled","ListItem","ishovered","isChecked","textDecoration","primary","main","normalTitleStyle","editTitleStyle","todoItemId","isCompleted","toggleIsCompleted","incrementCompleted","decrementCompleted","delTodoItem","setishovered","changeTodoItemTitle","normalTitleStyleGrayed","useTheme","Checkbox","checked","edge","tabIndex","TodoItem","addTodoItem","ListWrapper","progressBar","List","iconStyle","pr","TaskModalStyled","Modal","normalDescriptionStyle","whiteSpace","editDescriptionStyle","changeDescription","moveTodosInTask","addDate","delDate","delAllTodoItem","isLoading","open","setOpen","history","useHistory","Boolean","saveHandler","push","moment","format","BackdropComponent","Backdrop","onClose","Fade","in","faTimes","newVal","toISOString","setHours","onDragEnd","destination","source","newDescription","index1","index2","selectedTask","TaskModal","onContinue","msg","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Background","LoadingOverlay","CircularProgress","thickness","Columns","BoardStyled","TitleWrapper","ColumnWrapper","SearchBar","InputBase","titleInputStyle","Board","columnOrder","setSelectedColumn","swapColumns","moveTasksInColumn","moveTaskBetweenColumn","resetBoardData","getData","setFilterStr","useContext","openDialog","willBeDeleted","searchVal","setSearchVal","saveDataHandler","goBackHandler","useMediaQuery","minWidth","ignore","WarningDialog","right","inputProps","typeName","ColumnContainer","col_1","col_2","columnId1","columnId2","res","validationSchema","yup","username","min","required","password","TextFieldStyled","TextField","Auth","isLoggedIn","register","isLoginMode","setIsLoginMode","formik","useFormik","initialValues","onSubmit","values","handleFormSubmit","goBack","bgcolor","css","mt","my","handleSubmit","name","label","error","touched","errors","helperText","method","url","setItem","stringify","account_name","message","auth","BoardCardFront","BoardCardBack","selected","setSelected","to","NewBoard","UserBoards","boardsList","postUserBoard","delUserBoard","useParams","Grid","container","spacing","item","xs","BoardCardMobile","BoardCardDesktop","post","creator","delete","userBoards","monthsData","monthName","daysCount","PopperWrapper","Dot","colour","Event","anchorEl","setAnchorEl","currentTarget","Popper","onTouchStart","handlePopoverClose","placement","Box","maxWidth","EventMobile","EventDesktop","events","isToday","getIsToday","todayDate","getFullYear","getMonth","getDate","eventIds","ml","eventId","dates","filter","showBoard","DateSquare","FilterBoardSelector","boardIds","idToTitle","setShowBoard","text","setText","FormControl","InputLabel","Select","native","acc","concat","years","Array","i","months","month","year","indexOf","yearName","changeMonth","anchorMonth","setAnchorMonth","anchorYear","setAnchorYear","handleMonthClose","handleYearClose","textTransform","Menu","keepMounted","MenuItem","BackButton","weekdays","WeekContainer","DayLabel","Calendar","moveEventBetweenDates","addEvent","delEvent","getEvents","yearMonth","goToDate","component","Link","marginRight","day","week","newDate","dateIds","dateIdToNewDate","dateId","dateIndex","weekIndex","prevDateIndex","prevWeekIndex","newDateNumber","getDay","getNewDate","dateToEventIds","dateIdToEventIds","dateISOString","dateId1","dateId2","calendar","createTheme","dark","contrastText","gray","typography","breakpoints","down","h2","h3","h4","h5","h6","body1","body2","subtitle2","routes","exact","path","render","match","params","ThemeProvider","StylesProvider","injectFirst","window","location","hostname","initialState","authReducer","initialBoardData","boardReducer","newColumnOrder","splice","newState","col_1_index","col_2_index","save","initialColumnsData","columnReducer","newTaskOrder","newTaskOrder1","newTaskOrder2","taskReducer","newTodo","initialTodoItemData","todoItemReducer","userBoardsReducer","initialData","calendarReducer","dateReducer","newEventIds1","newEventIds2","eventReducer","globalReducer","combineReducers","middleware","thunk","promise","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.699372d8.chunk.js","sourcesContent":["export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    // for Node.js Express back-end\n    return {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer: ${user.accessToken}`,\n    };\n  } else {\n    return {};\n  }\n}\n","import { verify } from \"jsonwebtoken\";\n\nexport default function isExpired() {\n  const token = JSON.parse(localStorage.getItem(\"user\")).accessToken;\n  try {\n    verify(token, \"secret_key\");\n  } catch (err) {\n    localStorage.removeItem(\"user\");\n    return true;\n  }\n  return false;\n}\n","import authHeader from \"../../services/authHeader\";\nimport axios from \"axios\";\nimport isExpired from \"../../services/checkAuthExpiry\";\n\nexport const setBoardData = (data) => ({\n  type: \"SET_BOARD_DATA\",\n  payload: data,\n});\n\nexport const resetBoardData = () => ({\n  type: \"SET_BOARD_DATA\",\n  payload: {\n    selectedColumn: null,\n    title: \"\",\n    columnOrder: [],\n  },\n});\n\nexport const changeTitle = (title) => ({\n  type: \"CHANGE_TITLE\",\n  payload: title,\n});\n\nexport const addColumn = (columnId, insertAfter) => ({\n  type: \"ADD_COLUMN\",\n  payload: { columnId, insertAfter },\n});\n\nexport const delColumn = (columnId) => ({\n  type: \"DEL_COLUMN\",\n  payload: columnId,\n});\n\nexport const swapColumns = (col_1, col_2) => ({\n  type: \"SWAP_COLUMNS\",\n  payload: { col_1, col_2 },\n});\n\nexport const setSelectedColumn = (columnId) => ({\n  type: \"SET_SELECTED_COLUMN\",\n  payload: columnId,\n});\n\nexport const getData = (boardId) => async (dispatch, getState) => {\n  if (isExpired()) {\n    dispatch({\n      type: \"LOGOUT\"\n    })\n    alert(\"Your session has ended and was logged out.\")\n    return;\n  }\n  dispatch({\n    type: \"SET_LOADING\",\n    payload: true,\n  });\n  await axios\n    .get(`${process.env.REACT_APP_BACKEND_URL}/api/boards/${boardId}`, {\n      headers: authHeader(),\n    })\n    .then((res) => {\n      dispatch(setBoardData(res.data.board));\n      dispatch({\n        type: \"SET_LOADING\",\n        payload: false,\n      });\n    });\n};\n\nexport const saveData = (boardId) => async (dispatch, getState) => {\n  if (isExpired()) {\n    dispatch({\n      type: \"LOGOUT\"\n    })\n    alert(\"Your session has ended and was logged out.\")\n    return;\n  }\n  dispatch({\n    type: \"SET_LOADING\",\n    payload: true,\n  });\n  const boardStructure = {\n    ...getState().board,\n    columns: {\n      ...getState().columns,\n    },\n    tasks: {\n      ...getState().tasks,\n    },\n    todoItems: {\n      ...getState().todoItems,\n    },\n  };\n\n  await axios\n    .patch(\n      `${process.env.REACT_APP_BACKEND_URL}/api/boards/${boardId}`,\n      boardStructure,\n      { headers: authHeader() }\n    )\n    .then(() => {\n      dispatch({\n        type: \"SET_LOADING\",\n        payload: false,\n      });\n    });\n};\n","export const changeTitle = (columnId, title) => ({\n  type: 'CHANGE_COLUMN_TITLE',\n  payload: { columnId, title },\n});\n\nexport const moveTasksInColumn = (columnId, index1, index2) => ({\n  type: 'MOVE_TASKS_IN_COLUMN',\n  payload: { columnId, index1, index2 },\n});\n\nexport const moveTaskBetweenColumn = (columnId1, columnId2, index1, index2, taskId) => ({\n  type: 'MOVE_TASK_BETWEEN_COLUMN',\n  payload: {\n    columnId1, columnId2, index1, index2, taskId,\n  },\n});\n\nexport const addTask = (columnId, taskId, content = null) => ({\n  type: 'ADD_TASK',\n  payload: { columnId, taskId, content },\n});\n\nexport const delTask = (columnId, taskId) => ({\n  type: 'DEL_TASK',\n  payload: { columnId, taskId },\n});\n","import * as R from \"ramda\";\nimport authHeader from \"../../services/authHeader\";\nimport isExpired from \"../../services/checkAuthExpiry\";\n\nconst axios = require(\"axios\");\nconst api = `${process.env.REACT_APP_BACKEND_URL}/api`;\n\nexport const setUserBoardsData = (data) => ({\n  type: \"SET_USER_BOARDS_DATA\",\n  payload: data,\n});\n\nexport const addBoard = (boardData) => ({\n  type: \"ADD_BOARD\",\n  payload: boardData,\n});\n\nexport const delBoard = (id) => ({\n  type: \"DEL_BOARD\",\n  payload: { id },\n});\n\nexport const getUserBoardsData = (userId) => async (dispatch) => {\n  if (isExpired()) {\n    dispatch({\n      type: \"LOGOUT\"\n    })\n    alert(\"Your session has ended and was logged out.\")\n    return;\n  }\n  dispatch({\n    type: \"SET_LOADING\",\n    payload: true,\n  });\n  await axios\n    .get(`${api}/boards/user/${userId}`, { headers: authHeader() })\n    .then((response) => {\n      const idToBoard = R.groupBy(\n        (boardData) => boardData.id,\n        response.data.boards\n      );\n      Object.keys(idToBoard).forEach((id) => {\n        idToBoard[id] = idToBoard[id][0];\n      });\n      dispatch(setUserBoardsData(idToBoard));\n      dispatch({\n        type: \"SET_LOADING\",\n        payload: false,\n      });\n    });\n};\n\nexport const postUserBoard = (userId) => (dispatch) => {\n  if (isExpired()) {\n    dispatch({\n      type: \"LOGOUT\"\n    })\n    alert(\"Your session has ended and was logged out.\")\n    return;\n  }\n  axios\n    .post(\n      `${api}/boards/`,\n      JSON.stringify({\n        creator: userId,\n        title: \"New Board\",\n      }),\n      { headers: authHeader() }\n    )\n    .then((response) => {\n      dispatch(addBoard(response.data.board));\n    });\n};\n\nexport const delUserBoard = (boardId, token) => (dispatch) => {\n  if (isExpired()) {\n    dispatch({\n      type: \"LOGOUT\"\n    })\n    alert(\"Your session has ended and was logged out.\")\n    return;\n  }\n  axios\n    .delete(`${api}/boards/${boardId}`, { headers: authHeader() })\n    .then(() => {\n      dispatch(delBoard(boardId));\n    });\n};\n","export const setSelectedTask = taskId => ({\n  type: 'SET_SELECTED_TASK',\n  payload: taskId,\n});\n\nexport const setFilterStr = value => ({\n  type: 'SET_FILTER_STR',\n  payload: value,\n});\n","import { createContext } from 'react';\n\nconst TimeoutContext = createContext({\n  resetTimeout: () => {},\n});\n\nexport default TimeoutContext;\n","import { createContext } from 'react';\n\nconst AuthContext = createContext({\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n\nexport default AuthContext\n","import React, { useCallback, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd';\nimport { Card, LinearProgress } from '@material-ui/core';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock, faComment } from '@fortawesome/free-solid-svg-icons';\n\nconst TaskCard = styled(Card)`\n  border: ${({ isfiltermatched }) => (isfiltermatched ? '3px solid black' : 'none')};\n  padding: 10px;\n  position: relative;\n  margin-bottom: 8px;\n  background: ${({ isDragDisabled }) => {\n    if (isDragDisabled) return 'lightgrey';\n    return 'white';\n  }};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  min-height: 40px;\n  .icon {\n    font-size: 15px;\n    padding-left: 4px;\n    padding-right: 4px;\n    color: red;\n  }\n\n  .clock {\n    top: 50%;\n    padding: 0;\n  }\n\n  .date-icons {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n\n  h2 {\n    font-size: 14px;\n    color: red;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nconst ProgressBar = styled(LinearProgress)`\n  width: 100%;\n  height: 10px;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nconst Title = styled.h1`\n  width: 100%;\n  outline: none;\n  border: none;\n  background: transparent;\n  font-size: 15px;\n  font-family: inherit;\n  font-weight: bold;\n`;\n\nconst Task = ({\n  changeTitle, title, description, taskId, index, todo, date, completedPercentage, setSelectedTask, filterStr,\n}) => {\n  const [filterMatch, setFilterMatch] = useState(false);\n\n  useEffect(() => {\n    if (!filterStr) {\n      setFilterMatch(false);\n      return;\n    }\n    setFilterMatch(title.toLowerCase().includes(filterStr.toLowerCase()));\n  }, [filterStr]);\n\n  const getDaysLeft = useCallback(() => {\n    const today = new Date();\n    const differenceMS = new Date(date) - today;\n    const daysRemaining = Math.floor(differenceMS / 86400000) + 1;\n    if (daysRemaining === 0) return 'today';\n    return `${daysRemaining}d`;\n  }, [date]);\n\n  return (\n    <Draggable\n      key={taskId}\n      draggableId={taskId}\n      index={index}\n    >\n      {(provided, snapshot) => (\n        <NaturalDragAnimation\n          style={provided.draggableProps.style}\n          snapshot={snapshot}\n        >\n          {style => (\n            <div\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              isdragging={snapshot.isdragging}\n              ref={provided.innerRef}\n              style={style}\n            >\n              <TaskCard\n                elevation={snapshot.isdragging ? 16 : 2}\n                onClick={() => setSelectedTask(taskId)}\n                isfiltermatched={filterMatch ? 1 : 0}\n              >\n                {todo.length !== 0 && (\n                  <ProgressBar\n                    variant=\"determinate\"\n                    color=\"secondary\"\n                    value={completedPercentage}\n                  />\n                )}\n                <Title>{title}</Title>\n                {description && <FontAwesomeIcon className=\"icon\" icon={faComment} />}\n                {date\n                    && (\n                      <div className=\"date-icons\">\n                        <h2>\n                          {getDaysLeft()}\n                        </h2>\n                        <FontAwesomeIcon className=\"icon clock\" icon={faClock} />\n                      </div>\n                    )}\n              </TaskCard>\n\n            </div>\n          )}\n        </NaturalDragAnimation>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo(Task);\n","import styled from 'styled-components';\nimport '../../fonts/typography.css';\n\nconst MarkdownContainer = styled.div`\n  margin: 6px 8px;\n  font-family: Avenir Roman;\n  body {\n    font-size: 14px;\n    line-height: 1.6;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    background-color: white;\n    padding: 30px; }\n\n  body > *:first-child {\n    margin-top: 0 !important; }\n  body > *:last-child {\n    margin-bottom: 0 !important; }\n\n  a {\n    color: #4183C4; }\n  a.absent {\n    color: #cc0000; }\n  a.anchor {\n    display: block;\n    padding-left: 30px;\n    margin-left: -30px;\n    cursor: pointer;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0; }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: 20px 0 10px;\n    padding: 0;\n    font-weight: bold;\n    -webkit-font-smoothing: antialiased;\n    cursor: text;\n    position: relative; }\n\n  h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor {\n    /* background: url(\"../../images/modules/styleguide/para.png\") no-repeat 10px center; */\n    text-decoration: none; }\n\n  h1 tt, h1 code {\n    font-size: inherit; }\n\n  h2 tt, h2 code {\n    font-size: inherit; }\n\n  h3 tt, h3 code {\n    font-size: inherit; }\n\n  h4 tt, h4 code {\n    font-size: inherit; }\n\n  h5 tt, h5 code {\n    font-size: inherit; }\n\n  h6 tt, h6 code {\n    font-size: inherit; }\n\n  h1 {\n    font-size: 28px;\n    color: black; }\n\n  h2 {\n    font-size: 24px;\n    border-bottom: 1px solid #cccccc;\n    color: black; }\n\n  h3 {\n    font-size: 18px; }\n\n  h4 {\n    font-size: 16px; }\n\n  h5 {\n    font-size: 14px; }\n\n  h6 {\n    color: #777777;\n    font-size: 14px; }\n\n  p, blockquote, ul, ol, dl, li, table, pre {\n    margin: 15px 0; }\n\n  hr {\n    /* background: transparent url(\"../../images/modules/pulls/dirty-shade.png\") repeat-x 0 0; */\n    border: 0 none;\n    color: #cccccc;\n    height: 4px;\n    padding: 0; }\n\n  body > h2:first-child {\n    margin-top: 0;\n    padding-top: 0; }\n  body > h1:first-child {\n    margin-top: 0;\n    padding-top: 0; }\n    body > h1:first-child + h2 {\n      margin-top: 0;\n      padding-top: 0; }\n  body > h3:first-child, body > h4:first-child, body > h5:first-child, body > h6:first-child {\n    margin-top: 0;\n    padding-top: 0; }\n  a:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6 {\n    margin-top: 0;\n    padding-top: 0; }\n\n  h1 p, h2 p, h3 p, h4 p, h5 p, h6 p {\n    margin-top: 0; }\n\n  li p.first {\n    display: inline-block; }\n\n  ul, ol {\n    padding-left: 30px; }\n\n  ul :first-child, ol :first-child {\n    margin-top: 0; }\n\n  ul :last-child, ol :last-child {\n    margin-bottom: 0; }\n\n  dl {\n    padding: 0; }\n    dl dt {\n      font-size: 14px;\n      font-weight: bold;\n      font-style: italic;\n      padding: 0;\n      margin: 15px 0 5px; }\n      dl dt:first-child {\n        padding: 0; }\n      dl dt > :first-child {\n        margin-top: 0; }\n      dl dt > :last-child {\n        margin-bottom: 0; }\n    dl dd {\n      margin: 0 0 15px;\n      padding: 0 15px; }\n      dl dd > :first-child {\n        margin-top: 0; }\n      dl dd > :last-child {\n        margin-bottom: 0; }\n\n  blockquote {\n    border-left: 4px solid #dddddd;\n    padding: 0 15px;\n    color: #777777; }\n    blockquote > :first-child {\n      margin-top: 0; }\n    blockquote > :last-child {\n      margin-bottom: 0; }\n\n  table {\n    padding: 0; }\n    table tr {\n      border-top: 1px solid #cccccc;\n      background-color: white;\n      margin: 0;\n      padding: 0; }\n      table tr:nth-child(2n) {\n        background-color: #f8f8f8; }\n      table tr th {\n        font-weight: bold;\n        border: 1px solid #cccccc;\n        text-align: left;\n        margin: 0;\n        padding: 6px 13px; }\n      table tr td {\n        border: 1px solid #cccccc;\n        text-align: left;\n        margin: 0;\n        padding: 6px 13px; }\n      table tr th :first-child, table tr td :first-child {\n        margin-top: 0; }\n      table tr th :last-child, table tr td :last-child {\n        margin-bottom: 0; }\n\n  img {\n    max-width: 100%; }\n\n  span.frame {\n    display: block;\n    overflow: hidden; }\n    span.frame > span {\n      border: 1px solid #dddddd;\n      display: block;\n      float: left;\n      overflow: hidden;\n      margin: 13px 0 0;\n      padding: 7px;\n      width: auto; }\n    span.frame span img {\n      display: block;\n      float: left; }\n    span.frame span span {\n      clear: both;\n      color: #333333;\n      display: block;\n      padding: 5px 0 0; }\n  span.align-center {\n    display: block;\n    overflow: hidden;\n    clear: both; }\n    span.align-center > span {\n      display: block;\n      overflow: hidden;\n      margin: 13px auto 0;\n      text-align: center; }\n    span.align-center span img {\n      margin: 0 auto;\n      text-align: center; }\n  span.align-right {\n    display: block;\n    overflow: hidden;\n    clear: both; }\n    span.align-right > span {\n      display: block;\n      overflow: hidden;\n      margin: 13px 0 0;\n      text-align: right; }\n    span.align-right span img {\n      margin: 0;\n      text-align: right; }\n  span.float-left {\n    display: block;\n    margin-right: 13px;\n    overflow: hidden;\n    float: left; }\n    span.float-left span {\n      margin: 13px 0 0; }\n  span.float-right {\n    display: block;\n    margin-left: 13px;\n    overflow: hidden;\n    float: right; }\n    span.float-right > span {\n      display: block;\n      overflow: hidden;\n      margin: 13px auto 0;\n      text-align: right; }\n\n  code, tt {\n    margin: 0 2px;\n    padding: 0 5px;\n    white-space: nowrap;\n    border: 1px solid #eaeaea;\n    background-color: #f8f8f8;\n    border-radius: 3px; }\n\n  pre code {\n    margin: 0;\n    padding: 0;\n    white-space: pre;\n    border: none;\n    background: transparent; }\n\n  .highlight pre {\n    background-color: #f8f8f8;\n    border: 1px solid #cccccc;\n    font-size: 13px;\n    line-height: 19px;\n    overflow: auto;\n    padding: 6px 10px;\n    border-radius: 3px; }\n\n  pre {\n    background-color: #f8f8f8;\n    border: 1px solid #cccccc;\n    font-size: 13px;\n    line-height: 19px;\n    overflow: auto;\n    padding: 6px 10px;\n    border-radius: 3px; }\n    pre code, pre tt {\n      background-color: transparent;\n      border: none; }\n`;\n\nexport default MarkdownContainer;\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ClickAwayListener, Button, Typography } from \"@mui/material\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport showdown from \"showdown\";\nimport showdownHighlight from \"showdown-highlight\";\nimport \"highlight.js/styles/github.css\";\nimport MarkdownContainer from \"./MarkdownContainer\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: flex-start;\n`;\n\nconst defaultTitleStyle = {\n  outline: \"none\",\n  background: \"white\",\n  marginTop: \"13px\",\n  marginBottom: \"15px\",\n  fontFamily: \"inherit\",\n  fontWeight: \"bold\",\n  fontSize: \"30px\",\n  padding: \"15px\",\n  width: \"90%\",\n  borderRadius: \"15px\",\n  border: \"0\",\n};\n\nconst converter = new showdown.Converter({\n  extensions: [showdownHighlight],\n  ghCodeBlocks: true,\n});\nconverter.setFlavor(\"github\");\n\nconst EditableTitle = ({\n  customizedTitle,\n  title,\n  changeTitle,\n  style,\n  normalStyle,\n  allowEmpty,\n  allowEnter,\n  rows,\n  showButtons,\n  showMarkdown,\n  variant,\n}) => {\n  const [value, setValue] = useState(title);\n  const [isEditmode, setIsEditMode] = useState(false);\n\n  let textArea = useRef();\n  const toggleEditMode = useCallback(() => {\n    setIsEditMode(!isEditmode);\n  }, [isEditmode]);\n\n  const changeValue = (newValue) => setValue(newValue);\n\n  const handleChange = () => {\n    if (!value && !allowEmpty) {\n      changeValue(title);\n      toggleEditMode();\n    } else {\n      changeTitle(value);\n      toggleEditMode();\n    }\n  };\n\n  useEffect(() => setValue(title), [title]);\n  if (!isEditmode && showMarkdown) {\n    return (\n      <MarkdownContainer\n        onClick={() => toggleEditMode()}\n        dangerouslySetInnerHTML={{ __html: converter.makeHtml(value) }}\n      />\n    );\n  }\n  if (!isEditmode) {\n    return (\n      <Typography\n        variant={variant || \"body1\"}\n        onClick={(e) => {\n          e.stopPropagation();\n          toggleEditMode();\n        }}\n        style={style && normalStyle}\n      >\n        {customizedTitle || title}\n      </Typography>\n    );\n  }\n\n  return (\n    <ClickAwayListener onClickAway={handleChange}>\n      <Wrapper>\n        <TextareaAutosize\n          style={style ? { ...style, resize: \"none\" } : defaultTitleStyle}\n          ref={(tag) => {\n            textArea = tag;\n          }}\n          autoFocus\n          onFocus={(e) => {\n            e.target.select();\n          }}\n          value={value}\n          rows={rows || 3}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          onInput={(event) => changeValue(event.target.value)}\n          onKeyDown={(event) => {\n            if (allowEnter && event.key === \"Enter\") {\n              handleChange();\n            }\n            if (event.keyCode === 9) {\n              // tab was pressed\n              event.preventDefault();\n              const start = event.target.selectionStart;\n              const end = event.target.selectionEnd;\n              const newValue = `${value.substring(0, start)}  ${value.substring(\n                end\n              )}`;\n              setValue(newValue);\n\n              setTimeout(() => {\n                textArea.selectionStart = start + 2;\n                textArea.selectionEnd = start + 2;\n              });\n            }\n          }}\n          type=\"text\"\n        />\n        {showButtons && (\n          <div>\n            <Button onClick={handleChange}>Save</Button>\n            <Button\n              onClick={() => {\n                setValue(\"\");\n                changeTitle(\"\");\n                toggleEditMode();\n              }}\n            >\n              Delete\n            </Button>\n          </div>\n        )}\n      </Wrapper>\n    </ClickAwayListener>\n  );\n};\n\nexport default React.memo(EditableTitle);\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { styled as styledMUI } from \"@mui/system\";\nimport NaturalDragAnimation from \"natural-drag-animation-rbdnd\";\nimport { IconButton, Card, LinearProgress } from \"@mui/material\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport AccessTimeFilledIcon from \"@mui/icons-material/AccessTimeFilled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEllipsisH,\n  faClock,\n  faComment,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EditableTitle from \"../subcomponents/editableTitle\";\nimport { Stack, Typography } from \"@mui/material\";\n\nconst TaskCard = styledMUI(Card)(\n  ({ isDragDisabled, isfiltermatched, theme }) => ({\n    border: isfiltermatched ? \"3px solid black\" : \"none\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    margin: \"4px 8px\",\n    position: \"relative\",\n    background: isDragDisabled ? \"lightgrey\" : \"white\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    minHeight: \"50px\",\n  })\n);\n\nconst ProgressBar = styledMUI(LinearProgress)(({ theme }) => ({\n  width: \"100%\",\n  height: \"5px\",\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n}));\n\nconst titleStyle = {\n  marginTop: \"3px\",\n  marginBottom: \"3px\",\n  width: \"100%\",\n  outline: \"none\",\n  border: \"none\",\n  background: \"transparent\",\n  fontSize: \"15px\",\n  minHeight: \"50px\",\n};\n\nconst titleEditStyle = {\n  marginTop: \"3px\",\n  marginBottom: \"3px\",\n  width: \"100%\",\n  minHeight: \"50px\",\n  outline: \"none\",\n  border: \"none\",\n  background: \"transparent\",\n  fontSize: \"15px\",\n};\n\nconst Task = ({\n  changeTitle,\n  title,\n  description,\n  taskId,\n  index,\n  todo,\n  date,\n  completedPercentage,\n  setSelectedTask,\n  filterStr,\n}) => {\n  const [hovered, setHovered] = useState(false);\n  const [filterMatch, setFilterMatch] = useState(false);\n\n  useEffect(() => {\n    if (!filterStr) {\n      setFilterMatch(false);\n      return;\n    }\n    setFilterMatch(title.toLowerCase().includes(filterStr.toLowerCase()));\n  }, [filterStr]);\n\n  const getDaysLeft = useCallback(() => {\n    const today = new Date();\n    const differenceMS = new Date(date) - today;\n    const daysRemaining = Math.floor(differenceMS / 86400000) + 1;\n    if (daysRemaining === 0) return \"today\";\n    return `${daysRemaining}d`;\n  }, [date]);\n\n  return (\n    <Draggable key={taskId} draggableId={taskId} index={index}>\n      {(provided, snapshot) => (\n        <NaturalDragAnimation\n          style={provided.draggableProps.style}\n          snapshot={snapshot}\n        >\n          {(style) => (\n            <div\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              isdragging={snapshot.isdragging}\n              ref={provided.innerRef}\n              style={style}\n            >\n              <TaskCard\n                elevation={snapshot.isdragging ? 16 : 0}\n                onMouseEnter={() => setHovered(true)}\n                onMouseLeave={() => setHovered(false)}\n                isfiltermatched={filterMatch ? 1 : 0}\n              >\n                {todo.length !== 0 && (\n                  <ProgressBar\n                    variant=\"determinate\"\n                    color=\"primary\"\n                    value={completedPercentage}\n                  />\n                )}\n                <EditableTitle\n                  title={title}\n                  changeTitle={(val) => changeTitle(taskId, val)}\n                  style={titleEditStyle}\n                  normalStyle={titleStyle}\n                  allowEnter\n                  variant=\"body1\"\n                />\n                {description && (\n                  <DescriptionIcon\n                    sx={{\n                      fontSize: \"20px\",\n                      mr: \"3px\",\n                    }}\n                  />\n                )}\n                {date && (\n                  <Stack\n                    sx={{ alignItems: \"center\", mr: \"3px\", mb: \"14px\", gap: 0 }}\n                  >\n                    <Typography\n                      variant=\"h1\"\n                      sx={{\n                        fontSize: \"11px\",\n                        mb: \"-2px\",\n                      }}\n                    >\n                      {getDaysLeft()}\n                    </Typography>\n                    <AccessTimeFilledIcon\n                      size=\"large\"\n                      sx={{\n                        fontSize: \"20px\",\n                      }}\n                    />\n                  </Stack>\n                )}\n                {hovered && (\n                  <IconButton\n                    sx={{\n                      height: \"35px\",\n                      width: \"35px\",\n                    }}\n                    onClick={() => setSelectedTask(taskId)}\n                  >\n                    <MoreHorizIcon\n                      sx={{\n                        fontSize: \"25px\",\n                      }}\n                    />\n                  </IconButton>\n                )}\n              </TaskCard>\n            </div>\n          )}\n        </NaturalDragAnimation>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo(Task);\n","export const changeTitle = (taskId, newTitle) => ({\n  type: 'CHANGE_TASK_TITLE',\n  payload: { taskId, newTitle },\n});\n\nexport const changeDescription = (taskId, newDescription) => ({\n  type: 'CHANGE_TASK_DESCRIPTION',\n  payload: { taskId, newDescription },\n});\n\nexport const incrementCompleted = taskId => ({\n  type: 'INCREMENT_COMPLETED_COUNT',\n  payload: { taskId },\n});\n\nexport const decrementCompleted = taskId => ({\n  type: 'DECREMENT_COMPLETED_COUNT',\n  payload: { taskId },\n});\n\nexport const addDate = (taskId, date) => ({\n  type: 'ADD_TASK_DATE',\n  payload: { taskId, date },\n});\n\nexport const delDate = taskId => ({\n  type: 'DEL_TASK_DATE',\n  payload: { taskId },\n});\n\nexport const addTodoItem = (taskId, todoItemId, title = null) => ({\n  type: 'ADD_TODO_ITEM',\n  payload: { taskId, todoItemId, title },\n});\n\nexport const delTodoItem = (taskId, todoItemId) => ({\n  type: 'DEL_TODO_ITEM',\n  payload: { taskId, todoItemId },\n});\n\nexport const delAllTodoItem = taskId => ({\n  type: 'DEL_ALL_TODO_ITEM',\n  payload: { taskId },\n});\n\nexport const moveTodosInTask = (taskId, index1, index2) => ({\n  type: 'MOVE_TODOS_IN_TASK',\n  payload: { taskId, index1, index2 },\n});\n","import { connect } from 'react-redux';\nimport { isMobile } from 'react-device-detect';\nimport TaskMobile from './TaskMobile';\nimport TaskDesktop from './TaskDesktop';\nimport { changeTitle } from '../actions/taskActions';\nimport { setSelectedTask } from '../../globalActions';\n\nconst Task = isMobile ? TaskMobile : TaskDesktop;\n\nconst mapStateToProps = (state, props) => {\n  const task = state.tasks[props.taskId];\n  return {\n    title: task.title,\n    description: task.description,\n    date: task.date,\n    completedCount: task.completedCount,\n    todo: task.todo,\n    completedPercentage: (task.completedCount / task.todo.length) * 100,\n    filterStr: state.gb.filterStr,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeTitle,\n  setSelectedTask,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task);\n","import React, { useState, useCallback } from \"react\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport { Card, Button, ClickAwayListener } from \"@mui/material\";\nimport styled from \"styled-components\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst TextArea = styled(TextareaAutosize)`\n  min-height: 45px;\n  width: 100%;\n  outline: none;\n  border: none;\n  background: transparent;\n  font-size: inherit;\n  font-family: inherit;\n  padding: 10px;\n`;\n\nconst TaskCard = styled(Card)`\n  margin: 3px 6px;\n  minheight: 50px;\n  .input {\n    width: 100%;\n    height: 35px;\n    outline: none;\n    border: none;\n  }\n`;\n\nconst style = {\n  width: \"90%\",\n  outline: \"none\",\n  border: \"none\",\n  background: \"transparent\",\n  fontSize: \"15px\",\n  resize: \"none\",\n};\n\nconst NewTask = ({ columnId, addTask }) => {\n  const [value, setValue] = useState(\"\");\n  const [isButton, setIsButton] = useState(true);\n\n  const toggleIsButton = useCallback(() => {\n    setIsButton(!isButton);\n  }, [isButton]);\n\n  if (isButton) {\n    return (\n      <Button\n        className=\"button\"\n        onClick={(e) => {\n          e.stopPropagation();\n          toggleIsButton();\n        }}\n      >\n        + Add Task\n      </Button>\n    );\n  }\n\n  return (\n    <ClickAwayListener\n      onClickAway={() => {\n        if (value) {\n          addTask(columnId, uuidv4(), value);\n          setValue(\"\");\n        }\n        toggleIsButton();\n      }}\n    >\n      <TaskCard>\n        <TextArea\n          autoFocus\n          placeholder=\"Enter text here...\"\n          style={style}\n          className=\"input\"\n          type=\"text\"\n          value={value}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          onChange={(e) => setValue(e.target.value)}\n          onKeyDown={(event) => {\n            if (event.key === \"Enter\") {\n              if (value) {\n                addTask(columnId, uuidv4(), value);\n                setValue(\"\");\n              }\n              toggleIsButton();\n            }\n          }}\n        />\n      </TaskCard>\n    </ClickAwayListener>\n  );\n};\n\nexport default React.memo(NewTask);\n","import React, { forwardRef, useCallback, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Stack, Paper, ClickAwayListener, IconButton } from \"@mui/material\";\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { styled as styledMUI } from \"@mui/system\";\nimport TaskContainer from \"../task/TaskContainer\";\nimport NewTask from \"../task/NewTask\";\nimport EditableTitle from \"../subcomponents/editableTitle\";\n\nconst titleStyleNormal = {\n  outline: \"none\",\n  marginTop: \"13px\",\n  marginBottom: \"15px\",\n  fontSize: \"17px\",\n  padding: \"15px\",\n  textAlign: \"left\",\n};\n\nconst titleStyle = {\n  textAlign: \"left\",\n  outline: \"none\",\n  background: \"white\",\n  marginTop: \"13px\",\n  marginBottom: \"15px\",\n  fontWeight: \"bold\",\n  fontSize: \"17px\",\n  padding: \"15px\",\n  width: \"90%\",\n  borderRadius: \"10px\",\n  border: \"0\",\n};\n\nconst ColumnStyled = styledMUI(Paper)(({ theme }) => {\n  return {\n    position: \"relative\",\n    background: theme.palette.secondary.light,\n    borderRadius: \"5px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    px: 0,\n    paddingBottom: \"15px\",\n    margin: \"10px\",\n    flexGrow: 1,\n  };\n});\n\nconst TaskList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst HeaderStyled = styled.div`\n  margin-top: 7px;\n  margin-left: 7px;\n  margin-right: 7px;\n  width: 70%;\n`;\n\nconst Header = React.memo(({ title, changeColumnTitle }) => (\n  <HeaderStyled>\n    <EditableTitle\n      rows={1}\n      title={title}\n      changeTitle={changeColumnTitle}\n      style={titleStyle}\n      normalStyle={titleStyleNormal}\n      allowEnter\n      variant=\"h1\"\n    />\n  </HeaderStyled>\n));\n\nconst Column = forwardRef(\n  (\n    {\n      skipRender,\n      title,\n      changeTitle,\n      columnId,\n      addTask,\n      addColumn,\n      delColumn,\n      flagColumnHandler,\n      taskOrder,\n      islargescreen,\n      boardSelectedColumn,\n      boardId,\n      setOpenDialog,\n      setWillBeDeleted,\n    },\n    ref\n  ) => {\n    const changeColumnTitle = useCallback(\n      (newTitle) => {\n        changeTitle(columnId, newTitle);\n      },\n      [columnId]\n    );\n\n    const [showButtons, setShowButtons] = useState(false);\n\n    if (skipRender) {\n      return null;\n    }\n\n    return (\n      <ClickAwayListener\n        onClickAway={() => {\n          flagColumnHandler(columnId, true);\n        }}\n      >\n        <ColumnStyled\n          islargescreen={islargescreen ? 1 : 0}\n          elevation={boardSelectedColumn === columnId ? 24 : 0}\n          onClick={() => flagColumnHandler(columnId, false)}\n          onMouseOver={() => setShowButtons(true)}\n          onMouseLeave={() => setShowButtons(false)}\n        >\n          <Stack direction=\"row\" sx={{ width: \"100%\", alignItems: \"center\" }}>\n            <Header title={title} changeColumnTitle={changeColumnTitle} />\n            {showButtons && (\n              <Stack direction=\"row\" sx={{ float: \"right\", height: \"40px\" }}>\n                <IconButton\n                  size=\"small\"\n                  className=\"del\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setWillBeDeleted(columnId);\n                    setOpenDialog(true);\n                  }}\n                >\n                  <RemoveCircleOutlineIcon />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  className=\"ins\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    addColumn(columnId, uuidv4());\n                  }}\n                >\n                  <AddCircleIcon />\n                </IconButton>\n              </Stack>\n            )}\n          </Stack>\n          <Droppable droppableId={columnId}>\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isdraggingOver={snapshot.isdraggingOver}\n              >\n                {taskOrder.map((taskId, index) => (\n                  <TaskContainer\n                  \tkey={taskId}\n                    columnId={columnId}\n                    taskId={taskId}\n                    index={index}\n                    boardId={boardId}\n                  />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n          <NewTask columnId={columnId} addTask={addTask} />\n        </ColumnStyled>\n      </ClickAwayListener>\n    );\n  }\n);\n\nexport default React.memo(Column);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Column from './Column';\nimport { addTask, changeTitle } from '../actions/columnActions';\nimport { addColumn } from '../actions/boardActions';\n\n\nconst mapStateToProps = (state, props) => {\n  if (!state.columns[props.columnId]) {\n    return { skipRender: true };\n  }\n  return {\n    title: state.columns[props.columnId].title,\n    taskOrder: state.columns[props.columnId].taskOrder,\n    boardSelectedColumn: state.board.selectedColumn,\n  };\n};\n\n\nconst mapDispatchToProps = {\n  addTask,\n  addColumn,\n  changeTitle,\n};\n\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(Column));\n","import React, { useCallback, useState } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { styled as styledMUI } from \"@mui/system\";\nimport {\n  Checkbox,\n  ClickAwayListener,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  IconButton,\n} from \"@mui/material\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EditableTitle from \"../subcomponents/editableTitle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport TrendingFlatIcon from '@mui/icons-material/TrendingFlat';\n\nconst ItemStyled = styledMUI(ListItem)(\n  ({ theme, ishovered, isdragging, isChecked }) => ({\n    background: ishovered || isdragging ? \"#EBECF0\" : \"#fff\",\n    borderRadius: \"10px\",\n    textDecoration: isChecked && \"line-through\",\n    color: isChecked && theme.palette.primary.main,\n    // height: 50px;\n  })\n);\n\nconst normalTitleStyle = {\n  width: \"100%\",\n  outline: \"none\",\n  border: \"none\",\n  fontWeight: \"normal\",\n  fontSize: \"15px\",\n};\n\nconst editTitleStyle = {\n  width: \"100%\",\n  outline: \"none\",\n  border: \"none\",\n  fontWeight: \"normal\",\n  fontSize: \"15px\",\n};\n\nconst TodoItem = ({\n  key,\n  index,\n  columnId,\n  todoItemId,\n  title,\n  isCompleted,\n  changeTitle,\n  toggleIsCompleted,\n  taskId,\n  incrementCompleted,\n  decrementCompleted,\n  delTodoItem,\n  addTask,\n}) => {\n  const [ishovered, setishovered] = useState(false);\n\n  const changeTodoItemTitle = useCallback(\n    (newTitle) => {\n      changeTitle(todoItemId, newTitle);\n    },\n    [todoItemId]\n  );\n  const theme = useTheme();\n  const normalTitleStyleGrayed = {\n    width: \"100%\",\n    color: theme.palette.primary.main,\n    textDecoration: \"line-through\",\n    outline: \"none\",\n    border: \"none\",\n    fontWeight: \"normal\",\n    fontSize: \"15px\",\n  };\n\n  return (\n    <Draggable key={todoItemId} draggableId={todoItemId} index={index}>\n      {(provided, snapshot) => (\n        <ItemStyled\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          ishovered={ishovered ? 1 : 0}\n          isdragging={snapshot.isdragging}\n          onMouseEnter={() => setishovered(true)}\n          onMouseLeave={() => setishovered(false)}\n        >\n          <Checkbox\n            checked={isCompleted}\n            edge=\"start\"\n            tabIndex={-1}\n            onClick={(e) => {\n              e.stopPropagation();\n              toggleIsCompleted(todoItemId);\n              if (isCompleted) decrementCompleted(taskId);\n              else incrementCompleted(taskId);\n            }}\n          />\n          <EditableTitle\n            title={title}\n            changeTitle={changeTodoItemTitle}\n            style={editTitleStyle}\n            normalStyle={\n              isCompleted ? normalTitleStyleGrayed : normalTitleStyle\n            }\n            rows={1}\n            allowEnter\n            variant=\"body1\"\n          />\n          <IconButton\n            onClick={() => {\n              delTodoItem(taskId, todoItemId);\n              if (isCompleted) {\n                decrementCompleted(taskId);\n              }\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n          <IconButton\n            onClick={() => {\n              addTask(columnId, uuidv4(), title);\n              delTodoItem(taskId, todoItemId);\n            }}\n          >\n            <TrendingFlatIcon />\n          </IconButton>\n        </ItemStyled>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo(TodoItem);\n","import { connect } from 'react-redux';\nimport TodoItem from './TodoItem';\nimport { changeTitle, toggleIsCompleted } from '../actions/todoItemActions';\nimport {\n  delTodoItem, incrementCompleted, decrementCompleted,\n} from '../actions/taskActions';\nimport { addTask } from '../actions/columnActions';\n\nconst mapStateToProps = (state, props) => {\n  const target = state.todoItems[props.todoItemId];\n  return {\n    title: target && target.title,\n    isCompleted: target && target.isCompleted,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeTitle,\n  toggleIsCompleted,\n  delTodoItem,\n  incrementCompleted,\n  decrementCompleted,\n  addTask,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\n","export const changeTitle = (todoItemId, newTitle) => ({\n  type: 'CHANGE_TODO_ITEM_TITLE',\n  payload: { todoItemId, newTitle },\n});\n\nexport const toggleIsCompleted = todoItemId => ({\n  type: 'TOGGLE_IS_COMPLETED',\n  payload: { todoItemId },\n});\n","import React, { useState, useCallback } from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport { Card, Button, ClickAwayListener } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\nimport \"../../fonts/typography.css\";\n\nconst TextArea = styled(TextareaAutosize)`\n  min-height: 45px;\n  width: 100%;\n  outline: none;\n  border: none;\n  background: transparent;\n  font-size: inherit;\n  font-family: Avenir Roman;\n`;\n\nconst TaskCard = styled.div`\n  .input {\n    width: 100%;\n    height: 35px;\n    outline: none;\n    border: 1px solid;\n    padding: 10px;\n  }\n`;\n\nconst NewTodoItem = ({ taskId, addTodoItem }) => {\n  const [value, setValue] = useState('');\n  const [isButton, setIsButton] = useState(true);\n\n  const toggleIsButton = useCallback(() => {\n    setIsButton(!isButton);\n  }, [isButton]);\n\n  if (isButton) {\n    return (\n      <Button\n        className=\"button\"\n        onClick={toggleIsButton}\n      >\n        + Add Todo Item\n      </Button>\n    );\n  }\n\n  return (\n    <ClickAwayListener onClickAway={() => {\n      if (value) {\n        addTodoItem(taskId, uuidv4(), value);\n        setValue('');\n      }\n      toggleIsButton();\n    }}\n    >\n      <TaskCard>\n        <TextArea\n          autoFocus\n          placeholder=\"Enter text here...\"\n          className=\"input\"\n          type=\"text\"\n          elevation={3}\n          value={value}\n          onChange={e => setValue(e.target.value)}\n          onKeyDown={(event) => {\n            if (event.key === 'Enter') {\n              if (value) {\n                addTodoItem(taskId, uuidv4(), value);\n                setValue('');\n              }\n              toggleIsButton();\n            }\n          }}\n        />\n      </TaskCard>\n    </ClickAwayListener>\n  );\n};\n\nexport default React.memo(NewTodoItem);\n","import React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { List, Paper, LinearProgress, Typography } from \"@mui/material\";\nimport TodoItem from \"../todoitem/TodoItemContainer\";\nimport NewTodoItem from \"../todoitem/NewTodoItem\";\n\nconst Wrapper = styled.div`\n  text-align: center;\n\n  .progress-text {\n    font-size: 14px;\n  }\n`;\n\nconst ListWrapper = styled(Paper)`\n  width: 100%;\n  max-height: 320px;\n  overflow: auto;\n`;\n\nconst TodoList = ({\n  todo,\n  taskId,\n  addTodoItem,\n  completedPercentage,\n  columnId,\n}) => {\n  const progressBar = (\n    <>\n      <Typography\n        variant=\"body1\"\n        sx={{\n          fontSize: \"14px\",\n          mb: \"8px\",\n        }}\n      >\n        {Math.floor(completedPercentage) || 0}% completed\n      </Typography>\n      <LinearProgress\n        variant=\"determinate\"\n        color=\"primary\"\n        value={completedPercentage || 0}\n      />\n    </>\n  );\n\n  if (todo.length == 0) return <></>;\n\n  return (\n    <Wrapper>\n      {todo.length !== 0 && progressBar}\n      <Droppable droppableId={taskId}>\n        {(provided) => (\n          <ListWrapper\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            elevation={0}\n          >\n            <List>\n              {todo.map((todoItemId, index) => (\n                <TodoItem\n                  key={todoItemId}\n                  index={index}\n                  taskId={taskId}\n                  columnId={columnId}\n                  todoItemId={todoItemId}\n                />\n              ))}\n            </List>\n            {provided.placeholder}\n          </ListWrapper>\n        )}\n      </Droppable>\n      <NewTodoItem taskId={taskId} addTodoItem={addTodoItem} />\n    </Wrapper>\n  );\n};\n\nexport default React.memo(TodoList);\n","import React, { useContext, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport DatePicker from \"react-date-picker\";\nimport {\n  Button,\n  Paper,\n  Modal,\n  Fade,\n  Backdrop,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faCalendar,\n  faAlignJustify,\n  faComment,\n  faCheckSquare,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EditableTitle from \"../subcomponents/editableTitle\";\nimport TodoList from \"./TodoList\";\nimport TitleIcon from \"@mui/icons-material/Title\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\nimport FormatListBulletedIcon from \"@mui/icons-material/FormatListBulleted\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nconst iconStyle = {\n  color: \"primary.main\",\n  pr: 3,\n};\nconst TaskModalStyled = styled(Modal)`\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  border-radius: 15px;\n\n  .card {\n    width: 550px;\n    height: 80%;\n    padding: 50px 25px;\n    overflow: scroll;\n    position: relative;\n  }\n\n  .row {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n    width: 100%;\n    position: relative;\n  }\n\n  .description {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n  }\n\n  .icon {\n    color: teal;\n    height: 20px;\n    width: 20px;\n    margin-right: 20px;\n  }\n\n  .iconButton {\n    margin-right: 0;\n  }\n\n  .modalH1 {\n    font-size: 18px;\n    font-weight: bold;\n    margin: 6px 8px;\n    margin-right: 15px;\n    color: black;\n  }\n\n  .stickyRight {\n    position: absolute;\n    right: 0;\n    top: 0;\n  }\n\n  .closeModal {\n    top: 40px;\n    right: 20px;\n    z-index: 10;\n  }\n\n  .deleteButton {\n    color: red;\n  }\n`;\n\nconst normalDescriptionStyle = {\n  width: \"100%\",\n  outline: \"none\",\n  border: \"0\",\n  fontSize: \"15px\",\n  fontWeight: \"normal\",\n  whiteSpace: \"pre-line\",\n};\n\nconst editDescriptionStyle = {\n  width: \"100%\",\n  outline: \"none\",\n  fontSize: \"15px\",\n  fontWeight: \"normal\",\n  whiteSpace: \"pre-line\",\n};\n\nconst normalTitleStyle = {\n  width: \"80%\",\n  outline: \"none\",\n  border: \"none\",\n  margin: \"6px 8px\",\n  background: \"transparent\",\n  fontSize: \"25px\",\n  fontWeight: \"bold\",\n};\n\nconst editTitleStyle = {\n  width: \"80%\",\n  outline: \"none\",\n  margin: \"6px 8px\",\n  background: \"transparent\",\n  fontSize: \"25px\",\n  fontWeight: \"bold\",\n};\n\nconst TaskModal = ({\n  title,\n  columnId,\n  description,\n  taskId,\n  todo,\n  changeTitle,\n  changeDescription,\n  addTodoItem,\n  delTask,\n  moveTodosInTask,\n  completedPercentage,\n  date,\n  addDate,\n  getUserBoardsData,\n  saveData,\n  boardId,\n  delDate,\n  delAllTodoItem,\n  isLoading,\n  setSelectedTask,\n}) => {\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    setOpen(Boolean(taskId));\n  }, [taskId]);\n\n\n  const onDragEnd = ({ destination, source }) => {\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n\n    moveTodosInTask(source.droppableId, source.index, destination.index);\n  };\n\n  const saveHandler = async () => {\n    saveData(boardId).then(() => {\n      setOpen(false);\n      setSelectedTask(null);\n      history.push(`/calendar/${moment(date).format(\"YYYY-MM\")}`);\n    });\n  };\n\n  return (\n    <TaskModalStyled\n      BackdropComponent={Backdrop}\n      open={open}\n      onClose={() => {\n        setOpen(false);\n        setSelectedTask(null);\n      }}\n    >\n      <Fade in={open}>\n        <Paper className=\"card\">\n          <IconButton\n            className=\"stickyRight closeModal\"\n            onClick={() => {\n              setOpen(false);\n              setSelectedTask(null);\n            }}\n          >\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n          <div className=\"row\">\n            <TitleIcon sx={iconStyle} />\n            <EditableTitle\n              title={title}\n              changeTitle={(newTitle) => changeTitle(taskId, newTitle)}\n              normalStyle={normalTitleStyle}\n              style={editTitleStyle}\n              allowEnter\n              variant=\"h1\"\n            />\n          </div>\n          <div className=\"row\">\n            <DescriptionIcon sx={iconStyle} />\n            {description ? (\n              <EditableTitle\n                title={description}\n                changeTitle={(newVal) => changeDescription(taskId, newVal)}\n                style={editDescriptionStyle}\n                normalStyle={normalDescriptionStyle}\n                allowEmpty\n                showButtons\n                showMarkdown\n                variant=\"body1\"\n              />\n            ) : (\n              <Button\n                onClick={() => changeDescription(taskId, \"New description\")}\n              >\n                Add a description\n              </Button>\n            )}\n          </div>\n          <div className=\"row\">\n            <CalendarTodayIcon sx={iconStyle} />\n            {date ? (\n              <>\n                <DatePicker\n                  className=\"item\"\n                  onChange={(val) => {\n                    if (!val) {\n                      delDate(taskId);\n                    } else {\n                      addDate(taskId, val.toISOString());\n                    }\n                  }}\n                  value={new Date(date)}\n                />\n                <Button className=\"modalH1\" onClick={saveHandler}>\n                  go to calendar\n                </Button>\n              </>\n            ) : (\n              <Button\n                onClick={() => {\n                  const today = new Date();\n                  today.setHours(0, 0, 0, 0);\n                  addDate(taskId, today.toISOString());\n                }}\n              >\n                Add Due Date\n              </Button>\n            )}\n          </div>\n          <div className=\"row\">\n            <FormatListBulletedIcon sx={iconStyle} />\n            {todo && todo.length > 0 ? (\n              <>\n                <Typography\n                  variant=\"h1\"\n                  sx={{\n                    fontSize: \"20px\",\n                  }}\n                >\n                  Todo list\n                </Typography>\n                <IconButton\n                  className=\"stickyRight\"\n                  onClick={() => delAllTodoItem(taskId)}\n                >\n                  <DeleteIcon sx={iconStyle} />\n                </IconButton>\n              </>\n            ) : (\n              <Button onClick={() => addTodoItem(taskId, uuidv4(), \"New item\")}>\n                Add todo list\n              </Button>\n            )}\n          </div>\n          <DragDropContext onDragEnd={onDragEnd}>\n            {todo && (\n              <TodoList\n                todo={todo}\n                taskId={taskId}\n                columnId={columnId}\n                addTodoItem={addTodoItem}\n                completedPercentage={completedPercentage}\n              />\n            )}\n          </DragDropContext>\n          <div className=\"row\">\n            <DeleteIcon sx={{ ...iconStyle, color: \"red\" }} />\n            <Button\n              className=\"deleteButton\"\n              onClick={() => {\n                delTask(columnId, taskId);\n                setOpen(false);\n                setSelectedTask(null);\n              }}\n            >\n              Delete Task\n            </Button>\n          </div>\n        </Paper>\n      </Fade>\n    </TaskModalStyled>\n  );\n};\n\nexport default React.memo(TaskModal);\n","import { connect } from 'react-redux';\nimport TaskModal from './TaskModal';\nimport { delTask } from '../actions/columnActions';\nimport {\n  changeTitle, changeDescription, moveTodosInTask, addTodoItem, addDate, delDate, delAllTodoItem,\n} from '../actions/taskActions';\nimport {\n  getUserBoardsData,\n} from '../actions/userBoardsActions';\nimport { saveData } from '../actions/boardActions';\nimport { setSelectedTask } from '../../globalActions';\n\nconst mapStateToProps = (state) => {\n  const task = state.gb.selectedTask && state.tasks[state.gb.selectedTask];\n  return {\n    title: task && task.title,\n    description: task && task.description,\n    date: task && task.date,\n    completedCount: task && task.completedCount,\n    todo: task && task.todo,\n    completedPercentage: task && (task.completedCount / task.todo.length) * 100,\n    taskId: task && state.gb.selectedTask,\n    columnId: task && task.columnId,\n    isLoading: state.gb.isLoading,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeTitle,\n  changeDescription,\n  moveTodosInTask,\n  addTodoItem,\n  delTask,\n  addDate,\n  delDate,\n  getUserBoardsData,\n  saveData,\n  setSelectedTask,\n  delAllTodoItem,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskModal);\n","import React from 'react';\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@mui/material';\n\nconst WarningDialogue = ({\n  open, onClose, onContinue, msg,\n}) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>Warning!</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {msg}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onContinue} color=\"primary\">\n          Yes\n        </Button>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          No\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default React.memo(WarningDialogue);\n","import React from 'react';\nimport { CircularProgress, Backdrop } from '@mui/material';\nimport styled from 'styled-components';\n\nconst Background = styled(Backdrop)`\n  z-index: 9999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst LoadingOverlay = () => (\n  <Background open>\n    <CircularProgress\n      color=\"secondary\"\n      size=\"50px\"\n      thickness={5}\n      value={50}\n    />\n  </Background>\n);\n\nexport default LoadingOverlay;\n","import React, { useCallback, useEffect, useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase, Stack } from \"@mui/material\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport FlipMove from \"react-flip-move\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useHistory } from \"react-router-dom\";\nimport TimeoutContext from \"../../shared/context/timeoutContext\";\nimport AuthContext from \"../../shared/context/authContext\";\nimport ColumnContainer from \"../column/ColumnContainer\";\nimport TaskModal from \"../taskModal/TaskModalContainer\";\nimport EditableTitle from \"../subcomponents/editableTitle\";\nimport WarningDialog from \"../../shared/components/WarningDialog\";\nimport LoadingOverlay from \"../../shared/components/LoadingOverlay\";\n\nconst Columns = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: stretch;\n  justify-content: center;\n`;\n\nconst BoardStyled = styled.div`\n  margin-bottom: 35px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`;\n\nconst ButtonStyled = styled(Button)`\n  font-size: 20px;\n  color: red;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 65px 0;\n`;\n\nconst ColumnWrapper = styled.div`\n  width: ${({ islargescreen }) => (islargescreen ? \"350px\" : \"100%\")};\n`;\n\nconst SearchBar = styled(InputBase)`\n  border-radius: 5px;\n  background-color: #ebecf0;\n\n  padding: 5px;\n  width: 300px;\n`;\n\nconst titleInputStyle = {\n  outline: \"none\",\n  border: \"1px solid lightgray\",\n  borderRadius: \"10px\",\n  background: \"white\",\n  marginTop: \"13px\",\n  marginBottom: \"15px\",\n  width: \"100%\",\n  fontSize: \"30px\",\n  fontFamily: \"inherit\",\n  fontWeight: \"bold\",\n};\n\nconst Board = ({\n  title,\n  columnOrder,\n  changeTitle,\n  addColumn,\n  delColumn,\n  selectedColumn,\n  setSelectedColumn,\n  swapColumns,\n  moveTasksInColumn,\n  moveTaskBetweenColumn,\n  delTask,\n  boardId,\n  saveData,\n  resetBoardData,\n  getData,\n  getUserBoardsData,\n  isLoading,\n  setFilterStr,\n}) => {\n  const { resetTimeout } = useContext(TimeoutContext);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [willBeDeleted, setWillBeDeleted] = useState(null);\n  const [searchVal, setSearchVal] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    resetTimeout();\n    getData(boardId);\n  }, []);\n\n  const saveDataHandler = async () => {\n    resetTimeout();\n    saveData(boardId);\n  };\n\n  const goBackHandler = async () => {\n    await saveData(boardId);\n    resetBoardData();\n    history.push(`/`);\n  };\n\n  const islargescreen = useMediaQuery({ minWidth: 700 });\n\n  const flagColumnHandler = useCallback(\n    (columnId, ignore) => {\n      if (!selectedColumn && !ignore) {\n        setSelectedColumn(columnId);\n      } else if (selectedColumn === columnId) {\n        setSelectedColumn(null);\n      } else if (!ignore) {\n        swapColumns(selectedColumn, columnId);\n        setSelectedColumn(null);\n      }\n    },\n    [selectedColumn]\n  );\n\n  const onDragEnd = ({ destination, source, draggableId }) => {\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n\n    if (source.droppableId === destination.droppableId) {\n      moveTasksInColumn(source.droppableId, source.index, destination.index);\n      return;\n    }\n\n    moveTaskBetweenColumn(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      draggableId\n    );\n  };\n\n  if (!title) {\n    return <LoadingOverlay />;\n  }\n\n  return (\n    <BoardStyled>\n      {isLoading && <LoadingOverlay />}\n      <TaskModal boardId={boardId} />\n      <WarningDialog\n        open={openDialog}\n        onContinue={() => {\n          delColumn(willBeDeleted);\n          setOpenDialog(false);\n        }}\n        onClose={() => setOpenDialog(false)}\n        msg=\"Are you sure you want to delete this column?\"\n      />\n      <Stack\n        direction=\"row\"\n        sx={{\n          position: \"absolute\",\n          left: 30,\n          top: 30,\n        }}\n      >\n        <Button sx={{ fontSize: 17, color: \"secondary.dark\" }} onClick={goBackHandler}>\n          BACK\n        </Button>\n        <Button sx={{ fontSize: 17 }} onClick={saveDataHandler}>\n          SAVE\n        </Button>\n      </Stack>\n      <TitleWrapper>\n        <EditableTitle\n          title={title}\n          customizedTitle={title.toLowerCase() + \".\"}\n          changeTitle={changeTitle}\n          style={titleInputStyle}\n          rows={1}\n          allowEnter\n          variant=\"h1\"\n        />\n      </TitleWrapper>\n      <Stack\n        direction=\"row\"\n        sx={{\n          position: \"absolute\",\n          right: \"35px\",\n          top: \"80px\",\n        }}\n      >\n        <SearchBar\n          placeholder=\"Search for tasks..\"\n          className=\"search-input\"\n          inputProps={{ \"aria-label\": \"search\" }}\n          onChange={(e) => {\n            setSearchVal(e.target.value);\n            setFilterStr(e.target.value);\n          }}\n          value={searchVal}\n        />\n        <Button\n          onClick={() => {\n            setFilterStr(\"\");\n            setSearchVal(\"\");\n          }}\n        >\n          Reset\n        </Button>\n      </Stack>\n      <Columns>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <FlipMove typeName={null}>\n            {columnOrder.map((columnId) => (\n              <ColumnWrapper key={`${columnId}`} islargescreen={islargescreen ? 1 : 0}>\n                <ColumnContainer\n                  boardId={boardId}\n                  key={columnId}\n                  islargescreen={islargescreen}\n                  columnId={columnId}\n                  delColumn={delColumn}\n                  flagColumnHandler={flagColumnHandler}\n                  setOpenDialog={setOpenDialog}\n                  setWillBeDeleted={setWillBeDeleted}\n                />\n              </ColumnWrapper>\n            ))}\n          </FlipMove>\n        </DragDropContext>\n      </Columns>\n      {columnOrder.length === 0 && (\n        <Button onClick={() => addColumn(0, uuidv4())}>+ Add column</Button>\n      )}\n    </BoardStyled>\n  );\n};\n\nexport default Board;\n","import { connect } from 'react-redux';\nimport {\n  changeTitle, addColumn, delColumn, swapColumns, setSelectedColumn, saveData, getData, resetBoardData,\n} from '../actions/boardActions';\nimport {\n  addTask, delTask, moveTasksInColumn, moveTaskBetweenColumn,\n} from '../actions/columnActions';\nimport { getUserBoardsData } from '../actions/userBoardsActions';\nimport { setFilterStr } from '../../globalActions';\n\nimport Board from './Board';\n\nconst mapStateToProps = state => ({\n  title: state.board.title,\n  columnOrder: state.board.columnOrder,\n  selectedColumn: state.board.selectedColumn,\n  isLoading: state.gb.isLoading,\n});\n\nconst mapDispatchToProps = {\n  delColumn,\n  addColumn,\n  changeTitle,\n  swapColumns,\n  setSelectedColumn,\n  moveTasksInColumn,\n  moveTaskBetweenColumn,\n  addTask,\n  delTask,\n  saveData,\n  getData,\n  resetBoardData,\n  getUserBoardsData,\n  setFilterStr,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","const axios = require(\"axios\");\n\nexport const register = (username, password) => async (dispatch) => {\n  try {\n    let res = await axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_BACKEND_URL}/api/users/signup`,\n      data: {\n        account_name: username,\n        password,\n      },\n    });\n\n    localStorage.setItem(\"user\", JSON.stringify(res.data));\n    dispatch({\n      type: \"REGISTER_SUCCESS\",\n      payload: {\n        user: {\n          account_name: res.data.account_name,\n          userId: res.data.userId,\n          accessToken: res.data.accessToken,\n        },\n      },\n    });\n  } catch (error) {\n    alert(error.response.data.message); // this is the main part. Use the response property from the error object\n    return error.response;\n  }\n};\n\nexport const login = (username, password) => async (dispatch, getState) => {\n  try {\n    let res = await axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_BACKEND_URL}/api/users/login`,\n      data: {\n        username,\n        password,\n      },\n    });\n\n    let data = res.data;\n    localStorage.setItem(\"user\", JSON.stringify(res.data));\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: {\n        user: {\n          account_name: res.data.account_name,\n          userId: res.data.userId,\n          accessToken: res.data.accessToken,\n        },\n      },\n    });\n    return data;\n  } catch (error) {\n    alert(\"incorrect password or username\");\n    dispatch({\n      type: \"LOGIN_FAIL\",\n    });\n    return error.response;\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"user\");\n  dispatch({\n    type: \"LOGOUT\",\n  });\n};\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  Button,\n  Stack,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  styled,\n  Typography,\n} from \"@mui/material\";\nimport { css } from \"@emotion/css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nconst validationSchema = yup.object({\n  username: yup\n    .string(\"Enter a username\")\n    .min(3, \"Username should be of minimum 3 characters length\")\n    .required(\"Username is required\"),\n  password: yup\n    .string(\"Enter a password\")\n    .min(3, \"Password should be of minimum 3 characters length\")\n    .required(\"Password is required\"),\n});\n\nconst TextFieldStyled = styled(TextField)`\n  width: 100%;\n  margin: 5px 0;\n`;\n\nconst Auth = ({ isLoggedIn, login, register }) => {\n  const history = useHistory();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const handleFormSubmit = (username, password) => {\n    if (isLoginMode) {\n      login(username, password);\n    } else {\n      register(username, password);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      const { username, password } = values;\n      handleFormSubmit(username, password);\n    },\n  });\n\n  if (isLoggedIn) {\n    history.goBack();\n  }\n\n  return (\n    <Stack\n      sx={{\n        width: \"100%\",\n        height: \"calc(100vh - 50px)\",\n        bgcolor: \"secondary.light\",\n      }}\n    >\n      <Paper\n        elevation={3}\n        className={css`\n          background: white;\n          height: 500px;\n          border: 1px solid lightgray;\n          border-radius: 10px;\n          margin: auto;\n          padding: 50px;\n          align-items: center;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          width: 400px;\n\n          h2 {\n            font-weight: normal;\n            padding: 0;\n            margin-top: 5px;\n            margin-bottom: 25px;\n          }\n        `}\n      >\n        <Typography\n          variant=\"h1\"\n          sx={{\n            fontSize: \"55px\",\n            mt: 0,\n          }}\n        >\n          hello.\n        </Typography>\n        <Typography variant=\"h3\" sx={{ my: \"10px\", mb: \"20px\" }}>\n          {isLoginMode ? \"Welcome back!\" : \"New user!\"}\n        </Typography>\n        <form\n          className={css`\n            display: flex;\n            flex-direction: column;\n            width: 100%;\n            align-items: center;\n          `}\n          onSubmit={formik.handleSubmit}\n        >\n          <TextFieldStyled\n            id=\"username\"\n            name=\"username\"\n            margin=\"dense\"\n            label=\"Username\"\n            value={formik.values.username}\n            onChange={formik.handleChange}\n            error={formik.touched.username && Boolean(formik.errors.username)}\n            helperText={formik.touched.username && formik.errors.username}\n          />\n          <TextFieldStyled\n            id=\"password\"\n            name=\"password\"\n            margin=\"dense\"\n            label=\"Password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            type=\"password\"\n          />\n          <div\n            className={css`\n              display: flex;\n              gap: 10px;\n              margin-top: 30px;\n              justify-content: center;\n            `}\n          >\n            <Button\n              className={css`\n                box-shadow: none;\n              `}\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              {isLoginMode ? \"Login\" : \"Signup\"}\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => setIsLoginMode(!isLoginMode)}\n              type=\"Button\"\n            >\n              {`Switch to ${isLoginMode ? \"Sign up\" : \"Log in\"}`}\n            </Button>\n          </div>\n        </form>\n      </Paper>\n    </Stack>\n  );\n};\n\nexport default Auth;\n","import { connect } from 'react-redux';\nimport { login, register } from './actions/authActions';\n\nimport Auth from './Auth';\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.auth.isLoggedIn,\n});\n\nconst mapDispatchToProps = {\n  login,\n  register,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Card, Button, ClickAwayListener } from '@material-ui/core';\n\nconst BoardCardFront = styled(Card)`\n  width: 300px;\n  height: 100px;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n\n  .link {\n    font-family: inherit;\n    font-size: 20px;\n    text-decoration: none;\n    color: gray;\n  }\n`;\n\nconst BoardCardBack = styled(Card)`\n  width: 300px;\n  height: 100px;\n  margin-bottom: 20px;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n\n  .link {\n    text-decoration: none;\n    color: gray;\n  }\n\n  .button {\n    font-family: inherit;\n    font-size: 20px;\n    text-decoration: none;\n    color: gray;\n  }\n`;\n\nconst BoardCard = ({\n  title, id, setOpenDialog, setWillBeDeleted,\n}) => {\n  const [selected, setSelected] = useState(false);\n  if (!selected) {\n    return (\n      <BoardCardFront\n        onClick={() => setSelected(true)}\n      >\n        <h2>{title}</h2>\n      </BoardCardFront>\n    );\n  } return (\n    <ClickAwayListener\n      onClickAway={() => setSelected(false)}\n    >\n      <BoardCardBack>\n        <Button className=\"button\"><NavLink className=\"link\" to={`/boards/${id}`}>OPEN</NavLink></Button>\n        <Button\n          className=\"button\"\n          onClick={() => {\n            setWillBeDeleted(id);\n            setOpenDialog(true);\n          }}\n        >\n          Delete\n        </Button>\n      </BoardCardBack>\n    </ClickAwayListener>\n  );\n};\n\nexport default React.memo(BoardCard);\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Card, Button, Typography } from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\n\nconst BoardCardFront = styled(Card)`\n  width: 300px;\n  height: 200px;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n\n  .link {\n    font-family: inherit;\n    font-size: 20px;\n    text-decoration: none;\n    color: gray;\n  }\n`;\n\nconst BoardCardBack = styled(Card)`\n  width: 300px;\n  height: 200px;\n  margin-bottom: 20px;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n\n  .link {\n    text-decoration: none;\n    color: gray;\n  }\n\n  .button {\n    font-family: inherit;\n    font-size: 20px;\n    text-decoration: none;\n    color: gray;\n  }\n`;\nconst BoardCard = ({ title, id, setOpenDialog, setWillBeDeleted }) => {\n  const [selected, setSelected] = useState(false);\n  const history = useHistory();\n  return (\n    <Card\n      onMouseEnter={() => setSelected(true)}\n      onMouseLeave={() => setSelected(false)}\n      sx={{\n        bgcolor: \"secondary.light\",\n        width: 300,\n        height: 200,\n        borderRadius: 3,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {!selected ? (\n        <Typography variant=\"h3\">{title}</Typography>\n      ) : (\n        <>\n          <Button\n            onClick={() => history.push(`/boards/${id}`)}\n            sx={{\n              textDecoration: \"none\",\n              fontSize: \"16px\",\n              color: \"black\",\n            }}\n          >\n            OPEN\n          </Button>\n          <Button\n            sx={{ fontSize: \"16px\", color: \"black\" }}\n            onClick={() => {\n              setWillBeDeleted(id);\n              setOpenDialog(true);\n            }}\n          >\n            Delete\n          </Button>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default React.memo(BoardCard);\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Grid, Stack, IconButton, Button, Typography } from \"@mui/material\";\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CalendarToday } from \"@mui/icons-material\";\nimport { faCalendar } from \"@fortawesome/free-solid-svg-icons\";\nimport { isMobile } from \"react-device-detect\";\nimport BoardCardMobile from \"./BoardCardMobile\";\nimport BoardCardDesktop from \"./BoardCardDesktop\";\nimport WarningDialog from \"../../shared/components/WarningDialog\";\n\n\nconst Wrapper = styled.div`\n  margin: 50px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .link {\n    color: inherit;\n  }\n\n  .MuiIconButton-root.icon {\n    font-size: 30px;\n  }\n\n  .icon {\n    position: absolute;\n    right: 20px;\n    top: 20px;\n  }\n`;\n\nconst BoardList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 50px;\n  border-radius: 15px;\n  width: 100%;\n  background: #ebecf0;\n`;\n\nconst LogoutButton = styled(Button)`\n  position: absolute;\n  font-size: 17px;\n  left: 30px;\n  top: 30px;\n  color: red;\n`;\n\nconst NewBoard = styled(Button)``;\n\nconst UserBoards = ({\n  boardsList,\n  getUserBoardsData,\n  postUserBoard,\n  delUserBoard,\n  logout,\n}) => {\n  const { userId } = useParams();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [willBeDeleted, setWillBeDeleted] = useState(null);\n\n  const BoardCard = isMobile ? <BoardCardMobile /> : <BoardCardDesktop />;\n\n  const createBoardHandler = () => {\n    postUserBoard(userId);\n  };\n\n  const deleteBoardHandler = (boardId) => {\n    delUserBoard(boardId);\n  };\n\n  useEffect(() => {\n    getUserBoardsData(userId);\n  }, []);\n\n  if (!boardsList) {\n    return <h1>Is loading boards...</h1>;\n  }\n\n  return (\n    <Stack direction=\"column\" sx={{ alignItems: \"center\" }}>\n      <WarningDialog\n        open={openDialog}\n        onContinue={() => {\n          deleteBoardHandler(willBeDeleted);\n          setOpenDialog(false);\n        }}\n        onClose={() => setOpenDialog(false)}\n        msg=\"Are you sure you want to delete this board?\"\n      />\n      <Button\n        onClick={() => {\n          logout();\n        }}\n        sx={{\n          position: \"absolute\",\n          fontSize: 17,\n          left: 30,\n          top: 30,\n        }}\n      >\n        Logout\n      </Button>\n      <Typography\n        variant=\"h1\"\n        sx={{\n          fontSize: \"50px\",\n          my: \"60px\",\n          mt: \"100px\",\n        }}\n      >\n        boards.\n      </Typography>\n      <IconButton\n        sx={{\n          position: \"absolute\",\n          right: 30,\n          top: 30,\n        }}\n      >\n        <NavLink\n          className=\"link\"\n          to={`/calendar/${moment(new Date()).format(\"YYYY-MM\")}`}\n        >\n          <CalendarToday sx={{ color: \"secondary.main\" }} />\n        </NavLink>\n      </IconButton>\n      <Grid\n        container\n        spacing={2}\n        sx={{\n          width: \"80%\",\n          mb: 10,\n        }}\n      >\n        {boardsList.map(({ id, title }) => (\n          <Grid\n            item\n            xs={3}\n            key={id}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: 0,\n            }}\n          >\n            {isMobile ? (\n              <BoardCardMobile\n                title={title}\n                id={id}\n                setOpenDialog={setOpenDialog}\n                setWillBeDeleted={setWillBeDeleted}\n              />\n            ) : (\n              <BoardCardDesktop\n                title={title}\n                id={id}\n                setOpenDialog={setOpenDialog}\n                setWillBeDeleted={setWillBeDeleted}\n              />\n            )}\n          </Grid>\n        ))}\n      </Grid>\n      <NewBoard onClick={createBoardHandler}>Create New Board</NewBoard>\n    </Stack>\n  );\n};\n\nexport default UserBoards;\n","import { connect } from \"react-redux\";\nimport {\n  postUserBoard,\n  delUserBoard,\n  getUserBoardsData,\n} from \"../actions/userBoardsActions\";\nimport { logout } from \"../../auth/actions/authActions\";\nimport UserBoards from \"./UserBoards\";\n\nconst mapStateToProps = (state) => {\n  return {\n    boardsList: Object.keys(state.userBoards).map((id) => ({\n      id,\n      title: state.userBoards[id].title,\n    })),\n  };\n};\n\nconst mapDispatchToProps = {\n  postUserBoard,\n  delUserBoard,\n  getUserBoardsData,\n  logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBoards);\n","const monthsData = [\n  {\n    monthName: 'January',\n    daysCount: 31,\n  },\n  {\n    monthName: 'February',\n    daysCount: 28,\n  },\n  {\n    monthName: 'March',\n    daysCount: 31,\n  },\n  {\n    monthName: 'April',\n    daysCount: 30,\n  },\n  {\n    monthName: 'May',\n    daysCount: 31,\n  },\n  {\n    monthName: 'June',\n    daysCount: 30,\n  },\n  {\n    monthName: 'July',\n    daysCount: 31,\n  },\n  {\n    monthName: 'August',\n    daysCount: 31,\n  },\n  {\n    monthName: 'September',\n    daysCount: 30,\n  },\n  {\n    monthName: 'October',\n    daysCount: 31,\n  },\n  {\n    monthName: 'November',\n    daysCount: 30,\n  },\n  {\n    monthName: 'December',\n    daysCount: 31,\n  },\n\n];\n\nexport default monthsData;\n","import * as R from \"ramda\";\nimport data from \"../reducers/monthsData\";\nimport authHeader from \"../../services/authHeader\";\nimport axios from \"axios\";\nimport isExpired from \"../../services/checkAuthExpiry\";\n\nconst api = `${process.env.REACT_APP_BACKEND_URL}/api`;\n\nconst getNewDate = (newDate, prevDateIndex, prevWeekIndex) => {\n  const firstDayIndex = newDate.getDay();\n  const newDateNumber = prevWeekIndex * 7 + (prevDateIndex - firstDayIndex + 1);\n  if (\n    newDateNumber <= 0 ||\n    newDateNumber > data[newDate.getMonth()].daysCount\n  ) {\n    return null;\n  }\n  return new Date(newDate.getFullYear(), newDate.getMonth(), newDateNumber);\n};\n\nexport const getEvents = (userId) => async (dispatch, getState) => {\n  if (isExpired()) {\n    dispatch({\n      type: \"LOGOUT\"\n    })\n    alert(\"Your session has ended and was logged out.\")\n    return;\n  }\n  dispatch({\n    type: \"SET_LOADING\",\n    payload: true,\n  });\n  await axios\n    .get(`${api}/boards/user/${userId}`, { headers: authHeader() })\n    .then((response) => {\n      const idToBoard = R.groupBy(\n        (boardData) => boardData.id,\n        response.data.boards\n      );\n      Object.keys(idToBoard).forEach((id) => {\n        idToBoard[id] = idToBoard[id][0];\n      });\n\n      const events = {};\n      R.forEachObjIndexed(({ tasks }, boardId) => {\n        Object.values(tasks).forEach((task) => {\n          if (task.date != null) {\n            events[task.id] = { ...task, boardId };\n          }\n        });\n      }, idToBoard);\n\n      dispatch({\n        type: \"SET_EVENTS_DATA\",\n        payload: { events },\n      });\n      dispatch({\n        type: \"SET_LOADING\",\n        payload: false,\n      });\n    });\n};\n\nexport const changeMonth = (newDate) => (dispatch, getState) => {\n  const dateIds = Object.keys(getState().dates);\n  // get the new dates for each date id\n  const dateIdToNewDate = R.reduceBy(\n    (acc, dateId) => {\n      const { dateIndex } = getState().dates[dateId];\n      const { weekIndex } = getState().dates[dateId];\n      return acc.concat(getNewDate(newDate, dateIndex, weekIndex));\n    },\n    [],\n    (dateId) => dateId,\n    dateIds\n  );\n\n  // Now we should make a date to event ids dictionary\n\n  // iso date string to collection of eventIds\n  const events = Object.values(getState().events);\n  const dateToEventIds = R.reduceBy(\n    (acc, { id }) => acc.concat(id), // value fn\n    [],\n    ({ date }) => date, // key fn\n    events\n  );\n\n  const dateIdToEventIds = R.reduceBy(\n    (acc, dateId) => {\n      if (dateIdToNewDate[dateId][0]) {\n        const dateISOString = dateIdToNewDate[dateId][0].toISOString();\n        if (dateToEventIds[dateISOString]) {\n          return acc.concat(dateToEventIds[dateISOString]);\n        }\n        return acc;\n      }\n      return acc;\n    },\n    [],\n    (dateId) => dateId,\n    dateIds\n  );\n\n  dispatch({\n    type: \"CHANGE_MONTH\",\n    payload: {\n      newDate,\n      dateIdToEventIds,\n      dateIdToNewDate,\n    },\n  });\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Popper, ClickAwayListener } from '@material-ui/core';\n\nconst PopperWrapper = styled.div`\n  background: teal;\n  color: white;\n  padding: 3px;\n  max-width: 200px;\n  border-radius: 5px;\n\n  h1 {\n    font-size: 15px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  position: relative;\n  overflow: hidden;\n\n  .text {\n    padding: 0;\n    font-size: 15px;\n    font-family: inherit;\n    color: black;\n    text-transform: none;\n    text-align: left;\n    height: 100%;\n    width: 55%;\n    position: absolute;\n    top: 0;\n    left: 43px;\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n\n`;\n\nconst Dot = styled.div`\n  background: ${props => props.colour};\n  height: 15px;\n  width: 15px;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  left: 0;\n  top: 0;\n  margin-top: 8px;\n  margin-left: 15px;\n\n  .MuiIconButton-root .MuiButton-label{\n    font-size: 15px;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n  }\n`;\n\nconst Event = ({\n  id, date, title, description, todo, boardId, setSelectedTask,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  const history = useHistory();\n\n  const open = Boolean(anchorEl);\n  return (\n    <>\n      <ClickAwayListener\n        onClickAway={handlePopoverClose}\n      >\n        <Wrapper onClick={handlePopoverOpen}>\n          <Dot colour=\"teal\" />\n          <div\n            className=\"text\"\n          >\n            {title}\n          </div>\n        </Wrapper>\n      </ClickAwayListener>\n      <Popper\n        className=\"popper\"\n        open={open}\n        anchorEl={anchorEl}\n        onTouchStart={() => {\n          setSelectedTask(id);\n          history.push(`/boards/${boardId}`);\n        }}\n      >\n        <PopperWrapper>\n          <h1>{title}</h1>\n        </PopperWrapper>\n      </Popper>\n    </>\n  );\n};\n\nexport default Event;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { Popper, Box, Typography, useTheme } from \"@mui/material\";\n\nconst PopperWrapper = styled.div`\n  background: teal;\n  color: white;\n  padding: 3px;\n  max-width: 200px;\n  border-radius: 5px;\n\n  h1 {\n    font-size: 15px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  position: relative;\n  overflow: hidden;\n\n  .text {\n    padding: 0;\n    font-size: 15px;\n    color: black;\n    text-transform: none;\n    text-align: left;\n    height: 100%;\n    width: 55%;\n    position: absolute;\n    top: 0;\n    left: 43px;\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n`;\n\nconst Dot = styled.div`\n  background: ${(props) => props.colour};\n  height: 15px;\n  width: 15px;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  left: 0;\n  top: 0;\n  margin-top: 8px;\n  margin-left: 15px;\n\n  .MuiIconButton-root .MuiButton-label {\n    font-size: 15px;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n  }\n`;\n\nconst Event = ({\n  id,\n  date,\n  title,\n  description,\n  todo,\n  boardId,\n  setSelectedTask,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const theme = useTheme();\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  return (\n    <>\n      <Wrapper onClick={() => setSelectedTask(id)}>\n        <NavLink to={`/boards/${boardId}`}>\n          <Dot colour={theme.palette.primary.main} />\n          <Typography\n            onMouseEnter={handlePopoverOpen}\n            onMouseLeave={handlePopoverClose}\n            className=\"text\"\n            variant=\"body1\"\n          >\n            {title}\n          </Typography>\n        </NavLink>\n      </Wrapper>\n      <Popper\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"bottom-start\"\n        onClose={handlePopoverClose}\n      >\n        <Box\n          sx={{\n            bgcolor: \"primary.main\",\n            color: \"white\",\n            padding: \"5px\",\n            maxWidth: \"200px\",\n            borderRadius: \"5px\",\n          }}\n        >\n          <Typography variant=\"body1\">{title}</Typography>\n        </Box>\n      </Popper>\n    </>\n  );\n};\n\nexport default Event;\n","import { connect } from 'react-redux';\nimport { isMobile } from 'react-device-detect';\nimport { setSelectedTask } from '../../globalActions';\nimport EventMobile from './EventMobile';\nimport EventDesktop from './EventDesktop';\n\nconst Event = isMobile ? EventMobile : EventDesktop;\n\nconst mapStateToProps = (state, props) => ({ ...state.events[props.id] });\n\nconst mapDispatchToProps = {\n  setSelectedTask,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Event);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Event from \"../events/EventContainer\";\nimport { Box } from \"@mui/material\";\n\nconst Wrapper = styled.div`\n  width: 13%;\n  height: 100%;\n  background: white;\n  border-radius: 10px;\n\n  .circle {\n    background: ${({ isToday }) => (isToday ? \"teal\" : \"initial\")};\n    border-radius: 25px;\n    width: 35px;\n    height 35px;\n    margin-left: 5px;\n  }\n\n  p {\n    font-size: 20px;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n    padding-top: 5px;\n    color: ${({ isToday }) => (isToday ? \"white\" : \"initial\")};\n  }\n\n  .events {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n\n  }\n`;\n\nconst getIsToday = (date) => {\n  if (!date) return false;\n  let todayDate = new Date();\n  todayDate = new Date(\n    todayDate.getFullYear(),\n    todayDate.getMonth(),\n    todayDate.getDate()\n  );\n  if (todayDate.toISOString() === date.toISOString()) return true;\n  return false;\n};\n\nconst DateSquare = ({ id, date, eventIds }) => {\n  return (\n    <Wrapper isToday={getIsToday(date)}>\n      <Box\n        sx={{\n          bgcolor: getIsToday(date) ? \"primary.main\" : \"initial\",\n          borderRadius: \"25px\",\n          width: \"35px\",\n          height: \"35px\",\n          ml: \"5px\",\n        }}\n      >\n        <p>{date && date.getDate()}</p>\n      </Box>\n      <div className=\"events\">\n        {eventIds.map((eventId) => (\n          <Event id={eventId} key={eventId}/>\n        ))}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(DateSquare);\n","import { connect } from 'react-redux';\nimport DateSquare from './DateSquare';\n\nconst mapStateToProps = (state, props) => {\n  return {\n    date: state.dates[props.id].date,\n    eventIds: state.dates[props.id].eventIds.filter(\n      (eventId) => {\n        if (state.events[eventId]) {\n          return props.showBoard.includes(state.events[eventId].boardId);\n        }\n        return false;\n      },\n    ),\n  };\n};\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateSquare);\n","import React, { useState } from 'react';\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n} from '@mui/material';\n\nconst FilterBoardSelector = ({boardIds, idToTitle, showBoard, setShowBoard}) => {\n  const [text, setText] = useState('Show all')\n  return (\n    <FormControl variant=\"outlined\">\n      <InputLabel>Select Boards</InputLabel>\n      <Select\n        native\n        value={text}\n        onChange={e => {\n          setText(e.target.value)\n          setShowBoard(e.target.value)\n        }}\n        label=\"Select board\"\n        inputProps={{\n          name: 'age',\n          id: 'filled-age-native-simple',\n        }}\n      >\n        <option value={boardIds}>Show all</option>\n        {boardIds.map(boardId => (\n          <option key={boardId} value={boardId}>{idToTitle[boardId]}</option>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default FilterBoardSelector;\n","import { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport FilterBoardSelector from './FilterBoardSelector';\n\nconst mapStateToProps = (state, props) => {\n  const idToTitle = R.reduceBy(\n    (acc, boardId) => {\n      return acc.concat(state.userBoards[boardId].title)\n    } ,\n    [],\n    boardId => boardId,\n    props.boardIds,\n  );\n  return {\n    idToTitle,\n  };\n};\nexport default connect(mapStateToProps, {})(FilterBoardSelector);\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Typography, Menu, MenuItem } from \"@mui/material\";\n\nconst years = [...Array(100).keys()].map((i) => i + 2000);\n\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst getDate = (month, year) => new Date(year, months.indexOf(month), 1);\n\nconst HeaderStyled = styled.div`\n  width: 100%;\n  height 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = ({ monthName, yearName, changeMonth }) => {\n  const [anchorMonth, setAnchorMonth] = useState();\n  const [anchorYear, setAnchorYear] = useState();\n\n  const handleMonthClick = (event) => {\n    setAnchorMonth(event.currentTarget);\n  };\n\n  const handleYearClick = (event) => {\n    setAnchorYear(event.currentTarget);\n  };\n\n  const handleMonthClose = () => setAnchorMonth(null);\n  const handleYearClose = () => setAnchorYear(null);\n\n  return (\n    <HeaderStyled>\n      <Button onClick={handleMonthClick} sx={{ textTransform: \"none\" }}>\n        <Typography variant=\"h1\" sx={{ fontSize: \"40px\", color: \"black\" }}>\n          {monthName.toLowerCase() + \".\"}\n        </Typography>\n      </Button>\n      <Button onClick={handleYearClick}>\n        <Typography variant=\"h2\" sx={{ fontSize: \"20px\" }}>\n          {yearName}\n        </Typography>\n      </Button>\n      <Menu\n        anchorEl={anchorMonth}\n        keepMounted\n        open={Boolean(anchorMonth)}\n        onClose={handleMonthClose}\n      >\n        {months.map((month) => (\n          <MenuItem\n          \tkey={month}\n            onClick={() => {\n              changeMonth(getDate(month, yearName));\n              handleMonthClose();\n            }}\n          >\n            {month}\n          </MenuItem>\n        ))}\n      </Menu>\n      <Menu\n        anchorEl={anchorYear}\n        keepMounted\n        open={Boolean(anchorYear)}\n        onClose={handleYearClose}\n      >\n        {years.map((year) => (\n          <MenuItem\n            key={year}\n            onClick={() => {\n              changeMonth(getDate(monthName, year));\n              handleYearClose();\n            }}\n          >\n            {year}\n          </MenuItem>\n        ))}\n      </Menu>\n    </HeaderStyled>\n  );\n};\n\nexport default React.memo(Header);\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Box, Button, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { styled as styledMUI } from \"@mui/system\";\nimport TimeoutContext from \"../../shared/context/timeoutContext\";\nimport DateSquare from \"../date/DateSquareContainer\";\nimport FilterBoardSelector from \"./FilterBoardSelectorContainer\";\nimport Header from \"./Header\";\n\nconst BackButton = styledMUI(Button)(({ theme }) => ({\n  position: \"absolute\",\n  left: \"30px\",\n  top: \"30px\",\n  fontSize: \"17px\",\n  color: theme.palette.primary.main,\n}));\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  .topRight {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    right: 60px;\n    top: 30px;\n  }\n`;\n\nconst weekdays = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n\nconst Body = styled.div`\n  background: #ebecf0;\n  padding: 15px;\n`;\n\nconst WeekContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  width: 80%;\n  height: 180px;\n  justify-content: space-evenly;\n  padding: 10px 0;\n`;\n\nconst DayLabel = styled.div`\n  display: flex;\n  margin: 0 auto;\n  padding-bottom: 20px;\n  width: 80%;\n  height: 30px;\n  justify-content: space-evenly;\n\n  p {\n    width: 13%;\n    text-align: center;\n    font-weight: bold;\n    font-size: 18px;\n  }\n`;\n\nconst Calendar = ({\n  monthName,\n  yearName,\n  dates,\n  changeMonth,\n  moveEventBetweenDates,\n  addEvent,\n  delEvent,\n  boardIds,\n  getEvents,\n  getUserBoardsData,\n  yearMonth,\n  userBoards,\n  userId,\n}) => {\n  const [showBoard, setShowBoard] = useState(boardIds);\n\n  const { resetTimeout } = useContext(TimeoutContext);\n\n  const goToday = () => {\n    const todayDate = new Date();\n    changeMonth(new Date(todayDate.getFullYear(), todayDate.getMonth(), 1));\n  };\n  const goToDate = (date) => {\n    changeMonth(new Date(date));\n  };\n\n  useEffect(async () => {\n    await getUserBoardsData(userId);\n    await getEvents(userId);\n    goToDate(yearMonth);\n  }, []);\n\n  useEffect(async () => {\n    await getEvents(userId);\n    goToDate(yearMonth);\n  }, [userBoards]);\n\n  return (\n    <Wrapper>\n      <div className=\"topLeft\">\n        <BackButton component={Link} to=\"/\">\n          BACK\n        </BackButton>\n      </div>\n      <div className=\"topRight\">\n        <Button\n          onClick={goToday}\n          sx={{ fontSize: \"17px\", marginRight: \"20px\" }}\n        >\n          Today\n        </Button>\n        <FilterBoardSelector\n          boardIds={boardIds}\n          showBoard={showBoard}\n          setShowBoard={setShowBoard}\n        />\n      </div>\n      <Header\n        changeMonth={changeMonth}\n        monthName={monthName}\n        yearName={yearName}\n      />\n      <Box sx={{\n        bgcolor: 'secondary.light',\n        padding: '15px'\n      }}>\n        <DayLabel>\n          {weekdays.map((day) => (\n            <Typography\n            \tkey={day}\n              variant=\"body1\"\n              sx={{\n                mt: 1.5,\n              }}\n            >\n              {day.toLowerCase()}\n            </Typography>\n          ))}\n        </DayLabel>\n        {dates.map((week) => (\n          <WeekContainer key={week}>\n            {week.map((day) => (\n              <DateSquare showBoard={showBoard} key={day} id={day}/>\n            ))}\n          </WeekContainer>\n        ))}\n      </Box>\n    </Wrapper>\n  );\n};\n\nexport default Calendar;\n","import { connect } from \"react-redux\";\nimport { changeMonth, getEvents } from \"../actions/calendarActions\";\nimport Calendar from \"./Calendar\";\nimport { moveEventBetweenDates } from \"../actions/dateActions\";\nimport { getUserBoardsData } from \"../../board/actions/userBoardsActions\";\n\nconst mapStateToProps = (state) => ({\n  monthName: state.calendar.monthName,\n  yearName: state.calendar.yearName,\n  dates: state.calendar.dates,\n  boardIds: Object.keys(state.userBoards),\n  userBoards: state.userBoards,\n  userId: state.auth.user && state.auth.user.userId,\n});\n\nconst mapDispatchToProps = {\n  changeMonth,\n  getEvents,\n  moveEventBetweenDates,\n  getUserBoardsData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calendar);\n","export const moveEventBetweenDates = (dateId1, dateId2, index1, index2, eventId) => ({\n  type: 'MOVE_EVENT_BETWEEN_DATE',\n  payload: {\n    dateId1, dateId2, index1, index2, eventId,\n  },\n});\n","import { createTheme } from '@mui/material';\nimport './fonts/typography.css';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: `#e4ebdd`,\n      dark: `#212e26`,\n      main: `#618770`,\n      contrastText: `#fff`,\n    },\n    secondary: {\n      main: `#96A4AC`,\n      light: `#CFDAD6`,\n      contrastText: `#fff`,\n    },\n    gray: {\n      main: `#F6F6F5`,\n      dark: '#dddddd',\n      contrastText: `#4a4a49`,\n    },\n  },\n});\n\ntheme.typography.h1 = {\n  fontFamily: 'Avenir Black',\n  fontSize: theme.spacing(5),\n  [theme.breakpoints.down(`sm`)]: {\n    fontSize: theme.spacing(5.5),\n  },\n  [theme.breakpoints.down(`xs`)]: {\n    fontSize: theme.spacing(4),\n  },\n};\n\ntheme.typography.h2 = {\n  ...theme.typography.h2,\n  fontSize: theme.spacing(4),\n  fontFamily: 'Avenir Roman',\n  [theme.breakpoints.down(`sm`)]: {\n    fontSize: theme.spacing(4),\n  },\n  [theme.breakpoints.down(`xs`)]: {\n    fontSize: theme.spacing(3),\n  },\n};\n\ntheme.typography.h3 = {\n  ...theme.typography.h3,\n  fontFamily: 'Avenir',\n  fontSize: theme.spacing(3.3),\n  [theme.breakpoints.down(`sm`)]: {\n    fontSize: theme.spacing(4),\n  },\n  [theme.breakpoints.down(`xs`)]: {\n    fontSize: theme.spacing(3),\n  },\n};\n\ntheme.typography.h4 = {\n  ...theme.typography.h4,\n  fontFamily: 'Avenir Book',\n  fontSize: theme.spacing(2.8),\n};\n\ntheme.typography.h5 = {\n  ...theme.typography.h5,\n  fontFamily: 'Avenir',\n  fontSize: theme.spacing(3),\n  [theme.breakpoints.down(`xs`)]: {\n    fontSize: theme.spacing(3.1),\n  },\n};\n\ntheme.typography.h6 = {\n  ...theme.typography.h6,\n  fontFamily: 'Avenir',\n  fontSize: theme.spacing(2.5),\n  fontWeight: 'lighter',\n  [theme.breakpoints.down('xs')]: {\n    fontSize: theme.spacing(2),\n  },\n};\n\ntheme.typography.body1 = {\n  ...theme.typography.body1,\n  fontFamily: 'Avenir Roman',\n  fontSize: theme.spacing(2),\n  [theme.breakpoints.down(`sm`)]: {\n    fontSize: theme.spacing(2.1),\n  },\n  [theme.breakpoints.down(`xs`)]: {\n    fontSize: theme.spacing(1.9),\n  },\n};\n\ntheme.typography.body2 = {\n  ...theme.typography.body2,\n  fontFamily: 'Avenir Book',\n  fontSize: theme.spacing(2.1),\n  [theme.breakpoints.down(`sm`)]: {\n    fontSize: theme.spacing(1.9),\n  },\n};\n\ntheme.typography.subtitle2 = {\n  ...theme.typography.subtitle2,\n  color: '#9b9d9e',\n  fontFamily: `Avenir Book`,\n  fontSize: theme.spacing(2.5),\n  fontWeight: `bold`,\n  marginBottom: theme.spacing(2.7),\n  [theme.breakpoints.down('md')]: {\n    fontSize: theme.spacing(2.3),\n  },\n  [theme.breakpoints.down('sm')]: {\n    fontSize: theme.spacing(2),\n  },\n};\n\nexport default theme;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Board from \"./board/board/BoardContainer\";\nimport Auth from \"./auth/index\";\nimport UserBoards from \"./board/userBoard/UserBoardsContainer\";\nimport Calendar from \"./calendar/calendar/CalendarContainer\";\nimport { ThemeProvider } from \"@mui/material\";\nimport theme from './theme';\n\nconst App = ({ isLoggedIn, userId }) => {\n  let routes;\n\n  if (isLoggedIn) {\n    routes = (\n      <>\n        <Switch>\n          <Route exact path=\"/:userId/boards\">\n            <UserBoards />\n          </Route>\n          <Route\n            exact\n            path=\"/boards/:boardId\"\n            render={({ match }) => <Board boardId={match.params.boardId} />}\n          />\n          <Route\n            exact\n            path=\"/calendar/:yearMonth\"\n            render={({ match }) => (\n              <Calendar yearMonth={match.params.yearMonth} />\n            )}\n          />\n          <Redirect to={`/${userId}/boards`} />\n        </Switch>\n      </>\n    );\n  } else {\n    routes = (\n      <>\n        <Route exact path=\"/\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/\" />\n      </>\n    );\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <StylesProvider injectFirst>\n        <Router>\n          <Switch>{routes}</Switch>\n        </Router>\n      </StylesProvider>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.auth.isLoggedIn,\n  userId: state.auth.user && state.auth.user.userId,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import monthsData from './monthsData';\n\nconst today = new Date();\n\nconst initialData = {\n  monthName: monthsData[today.getMonth()].monthName,\n  dates: [[], [], [], [], [], []],\n};\n\nfor (let i = 0; i < 42; i += 1) {\n  initialData.dates[Math.floor(i / 7)].push(`date-${i}`);\n}\n\nconst calendarReducer = (state = initialData, { type, payload }) => {\n  switch (type) {\n    case 'CHANGE_MONTH':\n      return {\n        ...state,\n        monthName: monthsData[payload.newDate.getMonth()].monthName,\n        yearName: payload.newDate.getFullYear(),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default calendarReducer;\n","const user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nconst authReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case \"LOGIN_FAIL\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case \"LOGOUT\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case \"REGISTER_SUCCESS\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user\n      };\n    case \"REGISTER_FAIL\":\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initialBoardData = {\n  selectedColumn: null,\n  title: '',\n  columnOrder: [],\n};\n\nconst boardReducer = (state = initialBoardData, { type, payload }) => {\n  const newColumnOrder = [...state.columnOrder];\n  switch (type) {\n    case 'SET_BOARD_DATA':\n      return {\n        title: payload.title,\n        columnOrder: payload.columnOrder,\n        selectedColumn: payload.selectedColumn,\n      }\n\n    case 'CHANGE_TITLE':\n      return {\n        ...state,\n        title: payload,\n      };\n\n    case 'ADD_COLUMN':\n      if (!payload.columnId) {\n        newColumnOrder.push(payload.insertAfter);\n      } else {\n        const index = newColumnOrder.indexOf(payload.columnId) + 1;\n        newColumnOrder.splice(index, 0, payload.insertAfter);\n      }\n      return {\n        ...state,\n        columnOrder: newColumnOrder,\n      };\n    case 'DEL_COLUMN':\n      const newState = {\n        ...state,\n        columnOrder: state.columnOrder.filter(columnId => payload !== columnId),\n      };\n      return newState;\n\n    case 'SWAP_COLUMNS':\n      const col_1_index = state.columnOrder.indexOf(payload.col_1);\n      const col_2_index = state.columnOrder.indexOf(payload.col_2);\n      const save = newColumnOrder[col_1_index];\n      newColumnOrder[col_1_index] = newColumnOrder[col_2_index];\n      newColumnOrder[col_2_index] = save;\n      return {\n        ...state,\n        columnOrder: newColumnOrder,\n      };\n\n    case 'SET_SELECTED_COLUMN':\n      return {\n        ...state,\n        selectedColumn: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;\n","const initialColumnsData = {\n  'column-1': {\n    id: 'column-1',\n    title: 'first column',\n    taskOrder: ['task-1', 'task-2'],\n  },\n  'column-2': {\n    id: 'column-2',\n    title: 'second column',\n    taskOrder: ['task-3'],\n  },\n  'column-3': {\n    id: 'column-3',\n    title: 'third column',\n    taskOrder: [],\n  },\n};\n\nconst columnReducer = (state = initialColumnsData, { type, payload }) => {\n  switch (type) {\n    case 'SET_BOARD_DATA':\n      return {\n        ...payload.columns,\n      };\n\n    case 'ADD_COLUMN':\n      return {\n        ...state,\n        [payload.insertAfter]: {\n          id: payload.insertAfter,\n          title: 'New Column',\n          taskOrder: [],\n        },\n      };\n\n    case 'DEL_COLUMN':\n      const newState = { ...state };\n      delete newState[payload];\n      return newState;\n\n    case 'MOVE_TASKS_IN_COLUMN':\n      const newTaskOrder = [...state[payload.columnId].taskOrder];\n\n      const save = newTaskOrder[payload.index1];\n      newTaskOrder.splice(payload.index1, 1);\n      newTaskOrder.splice(payload.index2, 0, save);\n\n      return {\n        ...state,\n        [payload.columnId]: {\n          ...state[payload.columnId],\n          taskOrder: newTaskOrder,\n        },\n      };\n\n    case 'MOVE_TASK_BETWEEN_COLUMN':\n      const newTaskOrder1 = [...state[payload.columnId1].taskOrder];\n      const newTaskOrder2 = [...state[payload.columnId2].taskOrder];\n\n      newTaskOrder1.splice(payload.index1, 1);\n      newTaskOrder2.splice(payload.index2, 0, payload.taskId);\n\n      return {\n        ...state,\n        [payload.columnId1]: {\n          ...state[payload.columnId1],\n          taskOrder: newTaskOrder1,\n        },\n        [payload.columnId2]: {\n          ...state[payload.columnId2],\n          taskOrder: newTaskOrder2,\n        },\n      };\n\n\n    case 'ADD_TASK':\n      return {\n        ...state,\n        [payload.columnId]: {\n          ...state[payload.columnId],\n          taskOrder: [\n            ...state[payload.columnId].taskOrder,\n            payload.taskId,\n          ],\n        },\n      };\n\n    case 'DEL_TASK':\n      return {\n        ...state,\n        [payload.columnId]: {\n          ...state[payload.columnId],\n          taskOrder: state[payload.columnId].taskOrder.filter(taskId => (\n            payload.taskId !== taskId\n          )),\n        },\n      };\n\n    case 'CHANGE_COLUMN_TITLE':\n      return {\n        ...state,\n        [payload.columnId]: {\n          ...state[payload.columnId],\n          title: payload.title,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default columnReducer;\n","import * as R from 'ramda';\n\nconst taskReducer = (state = {}, { type, payload }) => {\n  let newState;\n  switch (type) {\n    case 'SET_BOARD_DATA':\n      return {\n        ...payload.tasks,\n      };\n\n    case 'CHANGE_TASK_TITLE':\n      newState = {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          title: payload.newTitle,\n        },\n      };\n      return newState;\n\n    case 'CHANGE_TASK_DESCRIPTION':\n      newState = {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          description: payload.newDescription,\n        },\n      };\n      return newState;\n\n    case 'INCREMENT_COMPLETED_COUNT':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          completedCount: state[payload.taskId].completedCount + 1,\n        },\n      };\n\n    case 'DECREMENT_COMPLETED_COUNT':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          completedCount: state[payload.taskId].completedCount - 1,\n        },\n      };\n\n    case 'ADD_TASK_DATE':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          date: payload.date,\n        },\n      };\n\n    case 'DEL_TASK_DATE':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          date: null,\n        },\n      };\n\n    case 'DEL_ALL_TODO_ITEM':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          todo: [],\n          completedCount: 0,\n        },\n      };\n\n    case 'ADD_TASK':\n      return {\n        ...state,\n        [payload.taskId]: {\n          columnId: payload.columnId,\n          id: payload.taskId,\n          title: payload.content || 'New Task',\n          date: null,\n          description: '',\n          todo: [],\n          completedCount: 0,\n        },\n      };\n\n    case 'DEL_TASK':\n      newState = { ...state };\n      delete newState[payload.taskId];\n      return newState;\n\n    case 'MOVE_TODOS_IN_TASK':\n      const newTodo = [...state[payload.taskId].todo];\n      const save = newTodo[payload.index1];\n      newTodo.splice(payload.index1, 1);\n      newTodo.splice(payload.index2, 0, save);\n\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          todo: newTodo,\n        },\n      };\n\n    case 'MOVE_TASK_BETWEEN_COLUMN':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          columnId: payload.columnId2,\n        },\n      };\n\n    case 'ADD_TODO_ITEM':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          todo: [\n            ...state[payload.taskId].todo,\n            payload.todoItemId,\n          ],\n        },\n      };\n\n    case 'DEL_TODO_ITEM':\n      return {\n        ...state,\n        [payload.taskId]: {\n          ...state[payload.taskId],\n          todo: state[payload.taskId].todo.filter(todoItemId => (\n            payload.todoItemId !== todoItemId\n          )),\n        },\n      };\n\n    case 'DEL_COLUMN':\n      newState = {};\n      R.forEachObjIndexed((value, id) => {\n        if (value.columnId !== payload) {\n          newState[id] = value;\n        }\n      }, state);\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;\n","import * as R from 'ramda';\nconst initialTodoItemData = {\n  'todo-1': {\n    id: 'todo-1',\n    title: 'first todo',\n    isCompleted: false,\n  },\n  'todo-2': {\n    id: 'todo-2',\n    title: 'second todo',\n    isCompleted: false,\n  },\n  'todo-3': {\n    id: 'todo-3',\n    title: 'third todo',\n    isCompleted: false,\n  },\n};\n\nconst todoItemReducer = (state = initialTodoItemData, { type, payload }) => {\n  let newState;\n  switch (type) {\n    case 'SET_BOARD_DATA':\n      return {\n        ...payload.todoItems,\n      };\n\n    case 'CHANGE_TODO_ITEM_TITLE':\n      newState = {\n        ...state,\n        [payload.todoItemId]: {\n          ...state[payload.todoItemId],\n          title: payload.newTitle,\n        },\n      };\n      return newState;\n\n    case 'TOGGLE_IS_COMPLETED':\n      newState = {\n        ...state,\n        [payload.todoItemId]: {\n          ...state[payload.todoItemId],\n          isCompleted: !state[payload.todoItemId].isCompleted,\n        },\n      };\n\n      return newState;\n\n\n    case 'ADD_TODO_ITEM':\n      return {\n        ...state,\n        [payload.todoItemId]: {\n          id: payload.todoItemId,\n          taskId: payload.taskId,\n          title: payload.title || 'New todo item',\n          isCompleted: false,\n        },\n      };\n\n    case 'DEL_TODO_ITEM':\n      newState = { ...state };\n      delete newState[payload.todoItemId];\n      return newState;\n\n    case 'DEL_ALL_TODO_ITEM':\n      newState = {};\n      R.forEachObjIndexed((value, id) => {\n        if (value.taskId !== payload.taskId) {\n          newState[id] = value;\n        }\n      }, state);\n      return newState;\n\n    case 'DEL_TASK':\n      newState = {};\n      R.forEachObjIndexed((value, id) => {\n        if (value.taskId !== payload.taskId) {\n          newState[id] = value;\n        }\n      }, state);\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default todoItemReducer;\n","const userBoardsReducer = (state = {}, { type, payload }) => {\n  const newState = { ...state };\n  switch (type) {\n    case 'SET_USER_BOARDS_DATA':\n      return payload;\n\n    case 'ADD_BOARD':\n      return {\n        ...state,\n        [payload.id]: {\n          ...payload,\n        },\n      };\n\n    case 'DEL_BOARD':\n      delete newState[payload.id];\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default userBoardsReducer;\n","import data from './monthsData';\n\nconst initialData = {};\n\nconst getNewDate = (newDate, prevDateIndex, prevWeekIndex) => {\n  const firstDayIndex = newDate.getDay();\n  const newDateNumber = prevWeekIndex * 7 + (prevDateIndex - firstDayIndex + 1);\n  if (newDateNumber <= 0 || newDateNumber > data[newDate.getMonth()].daysCount) {\n    return null;\n  } return new Date(newDate.getFullYear(), newDate.getMonth(), newDateNumber);\n};\n\nfor (let i = 0, len = 42; i < len; i += 1) {\n  initialData[`date-${i}`] = {\n    id: `date-${i}`,\n    date: getNewDate(new Date(), i % 7, Math.floor(i / 7)),\n    weekIndex: Math.floor(i / 7),\n    dateIndex: i % 7,\n    eventIds: [],\n  };\n}\n\nconst dateReducer = (state = initialData, { type, payload }) => {\n  let newState = {};\n  switch (type) {\n    case 'CHANGE_MONTH':\n      for (let i = 0; i < 42; i += 1) {\n        newState[`date-${i}`] = {\n          ...state[`date-${i}`],\n          eventIds: payload.dateIdToEventIds[`date-${i}`],\n          date: payload.dateIdToNewDate[`date-${i}`][0],\n        };\n      }\n      return newState;\n\n\n    case 'MOVE_EVENT_BETWEEN_DATE':\n      const newEventIds1 = [...state[payload.dateId1].eventIds];\n      const newEventIds2 = [...state[payload.dateId2].eventIds];\n\n      newEventIds1.splice(payload.index1, 1);\n      newEventIds2.splice(payload.index2, 0, payload.eventId);\n\n      newState = {\n        ...state,\n        [payload.dateId1]: {\n          ...state[payload.dateId1],\n          eventIds: newEventIds1,\n        },\n        [payload.dateId2]: {\n          ...state[payload.dateId2],\n          eventIds: newEventIds2,\n        },\n      };\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default dateReducer;\n","const eventReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case 'SET_EVENTS_DATA':\n      return {\n        ...payload.events,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;\n","const initialState = {\n  selectedTask: null,\n  isLoading: false,\n  filterStr: '',\n};\n\nconst globalReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'SET_SELECTED_TASK':\n      return {\n        ...state,\n        selectedTask: payload,\n      };\n\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: payload,\n      };\n\n    case 'SET_FILTER_STR':\n      return {\n        ...state,\n        filterStr: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default globalReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth/reducers/authReducer';\nimport boardReducer from './board/reducers/boardReducer';\nimport columnReducer from './board/reducers/columnReducer';\nimport taskReducer from './board/reducers/taskReducer';\nimport todoItemReducer from './board/reducers/todoItemReducer';\nimport userBoardsReducer from './board/reducers/userBoardsReducer';\nimport calendarReducer from './calendar/reducers/calendarReducer';\nimport dateReducer from './calendar/reducers/dateReducer';\nimport eventReducer from './events/reducers/eventReducer';\nimport globalReducer from './globalReducer';\n\n\nexport default combineReducers({\n  auth: authReducer,\n  board: boardReducer,\n  columns: columnReducer,\n  tasks: taskReducer,\n  todoItems: todoItemReducer,\n  userBoards: userBoardsReducer,\n  calendar: calendarReducer,\n  dates: dateReducer,\n  events: eventReducer,\n  gb: globalReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise';\nimport rootReducer from './allReducers';\n\nconst initialState = {};\n\nconst middleware = [thunk, promise];\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport 'dotenv/config';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}